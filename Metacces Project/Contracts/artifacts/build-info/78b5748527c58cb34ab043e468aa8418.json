{
	"id": "78b5748527c58cb34ab043e468aa8418",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"Contracts/AccessBSC.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\npragma solidity = 0.8.15;\n\n// Metacces Starts here!\n\ncontract Metacces is ERC20 {\n    using SafeMath for uint256;\n    address private owner;\n\n    address public Bridge;\n    address public constant theCompany = 0xc6e5347D1A5FE685160429705E9e26bD3BBa8fEa;\n    address public deadAddress = 0x000000000000000000000000000000000000dEaD;\n\n    uint256 internal sSBlock;uint256 internal sEBlock;uint256 internal sTot;\n    uint256 internal sPrice;\n    uint256 public Path = 10** decimals();\n    uint256 public max = 20 * Path;\n    uint256 public min = max.div(100);\n    uint256 public privateLimit = 1000000;\n    uint256 public maxSupply = 500000000 * Path;\n\n    event WithdrawalBNB(uint256 _amount, uint256 decimal, address to); \n    event WithdrawalToken(address _tokenAddr, uint256 _amount,uint256 decimals, address to);\n    event SetBridge(address newBridge);\n    event PrivateSale(uint256 Amount, uint256 Price);\n    event saleStarted(uint256 blockNumber);\n    event saleEnded(uint256 Time);\n    event minMax(uint256 Min, uint256 Max);\n    event PrivateLimit(uint256 newLimit);\n    event OwnershipTransferred(address indexed oldOwner, address indexed newOwner);\n\n    modifier onlyOwner(){\n        require(msg.sender == owner, \"caller not owner\");\n        _;\n    }\n\nconstructor () ERC20(\"Metacces\", \"Acces\") payable {\n    owner = msg.sender;\n    _mint (address(this), maxSupply.mul(5).div(100)); // 5%\n    _mint (theCompany, maxSupply.mul(95).div(100)); // 95%\n      //Send required amount of tokens to bridge for each chain to be linked  \n}\n\n   function transferOwnership(address _newOwner) external onlyOwner{\n       require(_newOwner != address(0),\"Zero address\");\n       owner = _newOwner;\n       emit OwnershipTransferred(owner, _newOwner);\n   } \n   function privateSale(address) external payable returns (bool success){\n    require(balanceOf(address(msg.sender)) <= privateLimit * Path , \"You reached your private sale limit\");  \n    require(sSBlock <= block.number && block.number <= sEBlock, \"Private Sale has ended or did not start yet\");\n\n    uint256 _eth = msg.value;\n    uint256 _tkns;\n    \n    require ( _eth >= min && _eth <= max , \"Less than Minimum or More than Maximum\");\n    _tkns = (sPrice.mul(_eth)).div(1 ether);\n    sTot ++;\n    \n    _transfer(address(this), msg.sender, _tkns); \n    emit PrivateSale(_tkns, sPrice);\n    return true;\n  }\n\n  function viewSale() public view returns(uint256 StartBlock, uint256 EndBlock, uint256 SaleCount, uint256 SalePrice){\n    return(sSBlock, sEBlock, sTot,  sPrice);\n  }\n  \n  function startSale(uint256 _sEBlock, uint256 _sPrice) external onlyOwner{\n    require(_sEBlock != 0 && _sPrice !=0,\"Zero!\");\n    sEBlock = _sEBlock; \n    sPrice =_sPrice;\n    emit saleStarted(_sEBlock);\n  }\n  \n  function endSale () external onlyOwner{\n    sEBlock = block.number;\n    emit saleEnded(block.timestamp);\n  }\n\n  function changeMinMaxPrivateSale(uint256 minAmount, uint256 maxAmount) external onlyOwner {\n      require(minAmount != 0 && maxAmount !=0,\"Zero!\");\n      min = minAmount;\n      max = maxAmount * Path;\n      emit minMax(min, max);\n  }\n\n  function setPrivateLimit(uint256 _limit) external onlyOwner {\n      require(_limit !=0,\"Zero!\");\n      privateLimit = _limit;\n      emit PrivateLimit(_limit);\n  }\n\n/*@dev this function is only used if users send tokens by mistake\nto contract address.\nonly the owner can send the tokens back to them\n*/\n  function withdrawalToken(address _tokenAddr, uint256 _amount, uint256 decimal, address to) external onlyOwner() {\n        require(_tokenAddr != address(0),\"address zero!\");\n        uint256 dcml = 10 ** decimal;\n        ERC20 token = ERC20(_tokenAddr);\n        emit WithdrawalToken(_tokenAddr, _amount, decimal, to);\n        token.transfer(to, _amount*dcml); \n    }\n\n/* @dev this function is used to withdraw BNB\ncollected by the private sale. it can also retrive \nmistaken sent tokens to investors.\n*/    \n  function withdrawalBNB(uint256 _amount, uint256 decimal, address to) external onlyOwner() {\n        require(address(this).balance >= _amount,\"No BNB!\");\n        require(to != address(0),\"Zero address\");\n        uint256 dcml = 10 ** decimal;\n        emit WithdrawalBNB(_amount, decimal, to);\n        payable(to).transfer(_amount*dcml);      \n    }\n\n  function setBridge (address payable newBridge) external onlyOwner{\n      emit SetBridge(newBridge);\n      Bridge = newBridge;\n  }\n\n    receive() external payable {}\n\n}\n\n/**********************************\n Proudly Developed by Metacces Team\n***********************************/"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2049  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2052:2057  name_ */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2049  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2077:2084  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_28:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1598   */\ntag_3:\n    /* \"#utility.yul\":1135:1141   */\n  0x00\n    /* \"#utility.yul\":1143:1149   */\n  dup1\n    /* \"#utility.yul\":1196:1198   */\n  0x40\n    /* \"#utility.yul\":1184:1193   */\n  dup4\n    /* \"#utility.yul\":1175:1182   */\n  dup6\n    /* \"#utility.yul\":1171:1194   */\n  sub\n    /* \"#utility.yul\":1167:1199   */\n  slt\n    /* \"#utility.yul\":1164:1216   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1164:1216   */\ntag_30:\n    /* \"#utility.yul\":1239:1255   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1304:1318   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1301:1335   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":1331:1332   */\n  0x00\n    /* \"#utility.yul\":1328:1329   */\n  dup1\n    /* \"#utility.yul\":1321:1333   */\n  revert\n    /* \"#utility.yul\":1301:1335   */\ntag_31:\n    /* \"#utility.yul\":1354:1415   */\n  tag_32\n    /* \"#utility.yul\":1407:1414   */\n  dup7\n    /* \"#utility.yul\":1398:1404   */\n  dup4\n    /* \"#utility.yul\":1387:1396   */\n  dup8\n    /* \"#utility.yul\":1383:1405   */\n  add\n    /* \"#utility.yul\":1354:1415   */\n  tag_11\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1344:1415   */\n  swap4\n  pop\n    /* \"#utility.yul\":1461:1463   */\n  0x20\n    /* \"#utility.yul\":1450:1459   */\n  dup6\n    /* \"#utility.yul\":1446:1464   */\n  add\n    /* \"#utility.yul\":1440:1465   */\n  mload\n    /* \"#utility.yul\":1424:1465   */\n  swap2\n  pop\n    /* \"#utility.yul\":1490:1492   */\n  dup1\n    /* \"#utility.yul\":1480:1488   */\n  dup3\n    /* \"#utility.yul\":1477:1493   */\n  gt\n    /* \"#utility.yul\":1474:1510   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1506:1507   */\n  0x00\n    /* \"#utility.yul\":1503:1504   */\n  dup1\n    /* \"#utility.yul\":1496:1508   */\n  revert\n    /* \"#utility.yul\":1474:1510   */\ntag_33:\n  pop\n    /* \"#utility.yul\":1529:1592   */\n  tag_34\n    /* \"#utility.yul\":1584:1591   */\n  dup6\n    /* \"#utility.yul\":1573:1581   */\n  dup3\n    /* \"#utility.yul\":1562:1571   */\n  dup7\n    /* \"#utility.yul\":1558:1582   */\n  add\n    /* \"#utility.yul\":1529:1592   */\n  tag_11\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1519:1592   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1036:1598   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1603:1983   */\ntag_12:\n    /* \"#utility.yul\":1682:1683   */\n  0x01\n    /* \"#utility.yul\":1678:1690   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1725:1737   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1746:1807   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1800:1804   */\n  0x7f\n    /* \"#utility.yul\":1792:1798   */\n  dup3\n    /* \"#utility.yul\":1788:1805   */\n  and\n    /* \"#utility.yul\":1778:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1746:1807   */\ntag_36:\n    /* \"#utility.yul\":1853:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1851   */\n  dup3\n    /* \"#utility.yul\":1842:1856   */\n  lt\n    /* \"#utility.yul\":1822:1840   */\n  dup2\n    /* \"#utility.yul\":1819:1857   */\n  sub\n    /* \"#utility.yul\":1816:1977   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1899:1909   */\n  0x4e487b71\n    /* \"#utility.yul\":1894:1897   */\n  0xe0\n    /* \"#utility.yul\":1890:1910   */\n  shl\n    /* \"#utility.yul\":1887:1888   */\n  0x00\n    /* \"#utility.yul\":1880:1911   */\n  mstore\n    /* \"#utility.yul\":1934:1938   */\n  0x22\n    /* \"#utility.yul\":1931:1932   */\n  0x04\n    /* \"#utility.yul\":1924:1939   */\n  mstore\n    /* \"#utility.yul\":1962:1966   */\n  0x24\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1967   */\n  revert\n    /* \"#utility.yul\":1816:1977   */\ntag_37:\n  pop\n    /* \"#utility.yul\":1603:1983   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2114:2659   */\ntag_14:\n    /* \"#utility.yul\":2216:2218   */\n  0x1f\n    /* \"#utility.yul\":2211:2214   */\n  dup3\n    /* \"#utility.yul\":2208:2219   */\n  gt\n    /* \"#utility.yul\":2205:2653   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":2252:2253   */\n  0x00\n    /* \"#utility.yul\":2277:2282   */\n  dup2\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2266:2283   */\n  mstore\n    /* \"#utility.yul\":2322:2326   */\n  0x20\n    /* \"#utility.yul\":2318:2320   */\n  dup2\n    /* \"#utility.yul\":2308:2327   */\n  keccak256\n    /* \"#utility.yul\":2392:2394   */\n  0x1f\n    /* \"#utility.yul\":2380:2390   */\n  dup6\n    /* \"#utility.yul\":2376:2395   */\n  add\n    /* \"#utility.yul\":2373:2374   */\n  0x05\n    /* \"#utility.yul\":2369:2396   */\n  shr\n    /* \"#utility.yul\":2363:2367   */\n  dup2\n    /* \"#utility.yul\":2359:2397   */\n  add\n    /* \"#utility.yul\":2428:2432   */\n  0x20\n    /* \"#utility.yul\":2416:2426   */\n  dup7\n    /* \"#utility.yul\":2413:2433   */\n  lt\n    /* \"#utility.yul\":2410:2457   */\n  iszero\n  tag_41\n  jumpi\n  pop\n    /* \"#utility.yul\":2451:2455   */\n  dup1\n    /* \"#utility.yul\":2410:2457   */\ntag_41:\n    /* \"#utility.yul\":2506:2508   */\n  0x1f\n    /* \"#utility.yul\":2501:2504   */\n  dup6\n    /* \"#utility.yul\":2497:2509   */\n  add\n    /* \"#utility.yul\":2494:2495   */\n  0x05\n    /* \"#utility.yul\":2490:2510   */\n  shr\n    /* \"#utility.yul\":2484:2488   */\n  dup3\n    /* \"#utility.yul\":2480:2511   */\n  add\n    /* \"#utility.yul\":2470:2511   */\n  swap2\n  pop\n    /* \"#utility.yul\":2561:2643   */\ntag_42:\n    /* \"#utility.yul\":2579:2581   */\n  dup2\n    /* \"#utility.yul\":2572:2577   */\n  dup2\n    /* \"#utility.yul\":2569:2582   */\n  lt\n    /* \"#utility.yul\":2561:2643   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":2624:2641   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2605:2606   */\n  0x01\n    /* \"#utility.yul\":2594:2607   */\n  add\n    /* \"#utility.yul\":2561:2643   */\n  jump(tag_42)\ntag_44:\n    /* \"#utility.yul\":2565:2568   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2205:2653   */\ntag_40:\n    /* \"#utility.yul\":2114:2659   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2835:4187   */\ntag_7:\n    /* \"#utility.yul\":2955:2965   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2977:3007   */\n  dup2\n  gt\n    /* \"#utility.yul\":2974:3030   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":3010:3028   */\n  tag_48\n  tag_10\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3039:3136   */\n  tag_49\n    /* \"#utility.yul\":3129:3135   */\n  dup2\n    /* \"#utility.yul\":3089:3127   */\n  tag_50\n    /* \"#utility.yul\":3121:3125   */\n  dup5\n    /* \"#utility.yul\":3115:3126   */\n  sload\n    /* \"#utility.yul\":3089:3127   */\n  tag_12\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":3083:3087   */\n  dup5\n    /* \"#utility.yul\":3039:3136   */\n  tag_14\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3191:3195   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3255:3257   */\n  0x1f\n    /* \"#utility.yul\":3244:3258   */\n  dup4\n  gt\n    /* \"#utility.yul\":3272:3273   */\n  0x01\n    /* \"#utility.yul\":3267:3930   */\n  dup2\n  eq\n  tag_52\n  jumpi\n    /* \"#utility.yul\":3974:3975   */\n  0x00\n    /* \"#utility.yul\":3991:3997   */\n  dup5\n    /* \"#utility.yul\":3988:4077   */\n  iszero\n  tag_53\n  jumpi\n  pop\n    /* \"#utility.yul\":4043:4062   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":4037:4063   */\n  mload\n    /* \"#utility.yul\":3988:4077   */\ntag_53:\n  not(0x00)\n    /* \"#utility.yul\":2792:2793   */\n  0x03\n    /* \"#utility.yul\":2788:2799   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2784:2808   */\n  shr\n    /* \"#utility.yul\":2780:2809   */\n  not\n    /* \"#utility.yul\":2770:2810   */\n  and\n    /* \"#utility.yul\":2816:2817   */\n  0x01\n    /* \"#utility.yul\":2812:2823   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2767:2824   */\n  or\n    /* \"#utility.yul\":4090:4171   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3237:4181   */\n  jump(tag_44)\n    /* \"#utility.yul\":3267:3930   */\ntag_52:\n    /* \"#utility.yul\":2061:2062   */\n  0x00\n    /* \"#utility.yul\":2054:2068   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2098:2102   */\n  0x20\n    /* \"#utility.yul\":2085:2103   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3303:3323   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3421:3657   */\ntag_56:\n    /* \"#utility.yul\":3435:3442   */\n  dup3\n    /* \"#utility.yul\":3432:3433   */\n  dup2\n    /* \"#utility.yul\":3429:3443   */\n  lt\n    /* \"#utility.yul\":3421:3657   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3524:3543   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3518:3544   */\n  mload\n    /* \"#utility.yul\":3503:3545   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3616:3643   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3584:3585   */\n  0x01\n    /* \"#utility.yul\":3572:3586   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3451:3470   */\n  dup5\n  add\n    /* \"#utility.yul\":3421:3657   */\n  jump(tag_56)\ntag_58:\n    /* \"#utility.yul\":3425:3428   */\n  pop\n    /* \"#utility.yul\":3685:3691   */\n  dup6\n    /* \"#utility.yul\":3676:3683   */\n  dup3\n    /* \"#utility.yul\":3673:3692   */\n  lt\n    /* \"#utility.yul\":3670:3871   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":3746:3765   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3740:3766   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3829:3830   */\n  0x03\n    /* \"#utility.yul\":3825:3839   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3841:3844   */\n  0xf8\n    /* \"#utility.yul\":3821:3845   */\n  and\n    /* \"#utility.yul\":3817:3854   */\n  shr\n    /* \"#utility.yul\":3813:3855   */\n  not\n    /* \"#utility.yul\":3798:3856   */\n  and\n    /* \"#utility.yul\":3783:3857   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3670:3871   */\ntag_59:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3917:3918   */\n  0x01\n    /* \"#utility.yul\":3901:3915   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3897:3919   */\n  add\n    /* \"#utility.yul\":3884:3920   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2835:4187   */\n  jump\t// out\ntag_16:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3175:3177  18 */\n      0x12\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3489  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2210:2223  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2242:2247  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2235:2247  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4516:4520  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4586:4593  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4595:4601  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4578  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4619:4623  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5319:5323  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5391:5395  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5406:5412  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5390  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5433:5437  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5439:5441  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5443:5449  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5432  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5467:5471  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5961:5965  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6031:6038  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6068:6078  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6065  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6031:6038  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6049  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6065  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6078  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6023  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2423:2436  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2455:2462  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2448:2462  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6768:6793  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6785:6792  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6768:6777  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6768:6793  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6741:6793  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6831:6846  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6811:6827  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6811:6846  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3222:3224   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3204:3225   */\n      mstore\n        /* \"#utility.yul\":3261:3263   */\n      0x25\n        /* \"#utility.yul\":3241:3259   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3234:3264   */\n      mstore\n        /* \"#utility.yul\":3300:3334   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3280:3298   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3273:3335   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3351:3369   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3344:3379   */\n      mstore\n        /* \"#utility.yul\":3396:3415   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6931:6936  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6938:6945  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6966:6981  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6963  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6981  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6930  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3808:3812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3879:3881  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3883:3889  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3871  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4065:4072  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10480  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10241:10260  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3628:3630   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3610:3631   */\n      mstore\n        /* \"#utility.yul\":3667:3669   */\n      0x24\n        /* \"#utility.yul\":3647:3665   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3640:3670   */\n      mstore\n        /* \"#utility.yul\":3706:3740   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3686:3704   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3679:3741   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3757:3775   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3750:3784   */\n      mstore\n        /* \"#utility.yul\":3801:3820   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3426:3826   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10340  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4033:4035   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4015:4036   */\n      mstore\n        /* \"#utility.yul\":4072:4074   */\n      0x22\n        /* \"#utility.yul\":4052:4070   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4045:4075   */\n      mstore\n        /* \"#utility.yul\":4111:4145   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4091:4109   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4084:4146   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4162:4180   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4155:4187   */\n      mstore\n        /* \"#utility.yul\":4204:4223   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3831:4229   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10408  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10401  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10408  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10417  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10426  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10480  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10761:11202  function _spendAllowance(... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10891:10915  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10918:10943  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10928:10933  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10935:10942  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10918:10927  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10918:10943  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10891:10943  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10957:10973  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10957:10994  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10953:11196  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11038:11044  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11018:11034  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11018:11044  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4436:4438   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4418:4439   */\n      mstore\n        /* \"#utility.yul\":4475:4477   */\n      0x1d\n        /* \"#utility.yul\":4455:4473   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4448:4478   */\n      mstore\n        /* \"#utility.yul\":4514:4545   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4494:4512   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4487:4546   */\n      mstore\n        /* \"#utility.yul\":4563:4581   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4234:4587   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11171  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11129:11134  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11136:11143  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11164:11170  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11145:11161  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11145:11170  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11128  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11171  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11202  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10761:11202  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7475:8126  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7619  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4794:4796   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4776:4797   */\n      mstore\n        /* \"#utility.yul\":4833:4835   */\n      0x25\n        /* \"#utility.yul\":4813:4831   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4806:4836   */\n      mstore\n        /* \"#utility.yul\":4872:4906   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4852:4870   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4845:4907   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4923:4941   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4916:4951   */\n      mstore\n        /* \"#utility.yul\":4968:4987   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4592:4993   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7679:7695  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5200:5202   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5182:5203   */\n      mstore\n        /* \"#utility.yul\":5239:5241   */\n      0x23\n        /* \"#utility.yul\":5219:5237   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5212:5242   */\n      mstore\n        /* \"#utility.yul\":5278:5312   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5258:5276   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5251:5313   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5329:5347   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5322:5355   */\n      mstore\n        /* \"#utility.yul\":5372:5391   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4998:5397   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7817:7832  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7795:7814  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7817:7832  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7850:7871  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5604:5606   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5586:5607   */\n      mstore\n        /* \"#utility.yul\":5643:5645   */\n      0x26\n        /* \"#utility.yul\":5623:5641   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5616:5646   */\n      mstore\n        /* \"#utility.yul\":5682:5716   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5662:5680   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5655:5717   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5733:5751   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5726:5762   */\n      mstore\n        /* \"#utility.yul\":5779:5798   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5402:5804   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7963  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7957  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7963  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7966:7986  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7986  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8019  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7980:7986  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7957  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      tag_135\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7980:7986  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      tag_88\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8060:8062  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8058  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8064:8070  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8082:8119  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11786:11907  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:611   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_144:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_144)\n    tag_146:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_147:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_141:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_149:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_21:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_151:\n        /* \"#utility.yul\":962:991   */\n      tag_152\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_141\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_31:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_156:\n        /* \"#utility.yul\":1612:1641   */\n      tag_157\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_141\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_158\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_141\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_44:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_161:\n        /* \"#utility.yul\":2100:2129   */\n      tag_162\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_141\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2090:2129   */\n      swap4\n        /* \"#utility.yul\":1949:2135   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2400   */\n    tag_60:\n        /* \"#utility.yul\":2208:2214   */\n      0x00\n        /* \"#utility.yul\":2216:2222   */\n      dup1\n        /* \"#utility.yul\":2269:2271   */\n      0x40\n        /* \"#utility.yul\":2257:2266   */\n      dup4\n        /* \"#utility.yul\":2248:2255   */\n      dup6\n        /* \"#utility.yul\":2244:2267   */\n      sub\n        /* \"#utility.yul\":2240:2272   */\n      slt\n        /* \"#utility.yul\":2237:2289   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2285:2286   */\n      0x00\n        /* \"#utility.yul\":2282:2283   */\n      dup1\n        /* \"#utility.yul\":2275:2287   */\n      revert\n        /* \"#utility.yul\":2237:2289   */\n    tag_164:\n        /* \"#utility.yul\":2308:2337   */\n      tag_165\n        /* \"#utility.yul\":2327:2336   */\n      dup4\n        /* \"#utility.yul\":2308:2337   */\n      tag_141\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2298:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2356:2394   */\n      tag_166\n        /* \"#utility.yul\":2390:2392   */\n      0x20\n        /* \"#utility.yul\":2379:2388   */\n      dup5\n        /* \"#utility.yul\":2375:2393   */\n      add\n        /* \"#utility.yul\":2356:2394   */\n      tag_141\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2346:2394   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2400   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2405:2785   */\n    tag_65:\n        /* \"#utility.yul\":2484:2485   */\n      0x01\n        /* \"#utility.yul\":2480:2492   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2527:2539   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2548:2609   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2602:2606   */\n      0x7f\n        /* \"#utility.yul\":2594:2600   */\n      dup3\n        /* \"#utility.yul\":2590:2607   */\n      and\n        /* \"#utility.yul\":2580:2607   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2609   */\n    tag_168:\n        /* \"#utility.yul\":2655:2657   */\n      0x20\n        /* \"#utility.yul\":2647:2653   */\n      dup3\n        /* \"#utility.yul\":2644:2658   */\n      lt\n        /* \"#utility.yul\":2624:2642   */\n      dup2\n        /* \"#utility.yul\":2621:2659   */\n      sub\n        /* \"#utility.yul\":2618:2779   */\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2701:2711   */\n      0x4e487b71\n        /* \"#utility.yul\":2696:2699   */\n      0xe0\n        /* \"#utility.yul\":2692:2712   */\n      shl\n        /* \"#utility.yul\":2689:2690   */\n      0x00\n        /* \"#utility.yul\":2682:2713   */\n      mstore\n        /* \"#utility.yul\":2736:2740   */\n      0x22\n        /* \"#utility.yul\":2733:2734   */\n      0x04\n        /* \"#utility.yul\":2726:2741   */\n      mstore\n        /* \"#utility.yul\":2764:2768   */\n      0x24\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2754:2769   */\n      revert\n        /* \"#utility.yul\":2618:2779   */\n    tag_169:\n      pop\n        /* \"#utility.yul\":2405:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2790:3015   */\n    tag_88:\n        /* \"#utility.yul\":2830:2833   */\n      0x00\n        /* \"#utility.yul\":2861:2862   */\n      dup3\n        /* \"#utility.yul\":2857:2863   */\n      not\n        /* \"#utility.yul\":2854:2855   */\n      dup3\n        /* \"#utility.yul\":2851:2864   */\n      gt\n        /* \"#utility.yul\":2848:2984   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":2906:2916   */\n      0x4e487b71\n        /* \"#utility.yul\":2901:2904   */\n      0xe0\n        /* \"#utility.yul\":2897:2917   */\n      shl\n        /* \"#utility.yul\":2894:2895   */\n      0x00\n        /* \"#utility.yul\":2887:2918   */\n      mstore\n        /* \"#utility.yul\":2941:2945   */\n      0x11\n        /* \"#utility.yul\":2938:2939   */\n      0x04\n        /* \"#utility.yul\":2931:2946   */\n      mstore\n        /* \"#utility.yul\":2969:2973   */\n      0x24\n        /* \"#utility.yul\":2966:2967   */\n      0x00\n        /* \"#utility.yul\":2959:2974   */\n      revert\n        /* \"#utility.yul\":2848:2984   */\n    tag_171:\n      pop\n        /* \"#utility.yul\":3000:3009   */\n      add\n      swap1\n        /* \"#utility.yul\":2790:3015   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200081742352af2e3abd4011f4774f2d293f437a0038893442e64e595f146f204564736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 461,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 90,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4189:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:6"
															},
															"nodeType": "YulIf",
															"src": "220:55:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:6"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:6"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:6"
															},
															"nodeType": "YulIf",
															"src": "353:36:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:6"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:6",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:6"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:6"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:6",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:6"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:6"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:6"
															},
															"nodeType": "YulIf",
															"src": "536:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:6"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:6"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:6"
															},
															"nodeType": "YulIf",
															"src": "698:53:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:6"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:6"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:6"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:6",
																"statements": []
															},
															"src": "779:133:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:6"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:6"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:6"
															},
															"nodeType": "YulIf",
															"src": "921:80:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:6",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:6",
														"type": ""
													}
												],
												"src": "146:885:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:444:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1175:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1196:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1167:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:32:6"
															},
															"nodeType": "YulIf",
															"src": "1164:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:16:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1229:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1282:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1278:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:18:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1319:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1304:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:14:6"
															},
															"nodeType": "YulIf",
															"src": "1301:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:6"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1407:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1354:28:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:61:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1424:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1450:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1461:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:25:6"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1428:8:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1480:8:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1477:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:16:6"
															},
															"nodeType": "YulIf",
															"src": "1474:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:73:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:6"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1573:8:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1584:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1529:28:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:63:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1112:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1123:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1135:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1143:6:6",
														"type": ""
													}
												],
												"src": "1036:562:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1685:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1699:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1729:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1725:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1703:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1776:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1778:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1792:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1800:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1788:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1788:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1756:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:26:6"
															},
															"nodeType": "YulIf",
															"src": "1746:61:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1887:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1894:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1899:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1890:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1890:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1880:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1880:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1934:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1924:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1924:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1822:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1845:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1842:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1819:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:38:6"
															},
															"nodeType": "YulIf",
															"src": "1816:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1638:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1647:6:6",
														"type": ""
													}
												],
												"src": "1603:380:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2044:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2064:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2054:14:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2054:14:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2077:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2095:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2098:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2085:9:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2085:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2077:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2027:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2035:4:6",
														"type": ""
													}
												],
												"src": "1988:121:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2195:464:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2228:425:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2242:11:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2252:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2246:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:6"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2277:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2266:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2266:17:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2266:17:6"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2296:31:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2318:2:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2322:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2308:9:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2308:19:6"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2300:4:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2340:57:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2363:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2373:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2380:10:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2392:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2376:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2376:19:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2369:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2369:27:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2359:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2359:38:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2344:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2434:23:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2436:19:6",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2451:4:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2436:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2416:10:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2428:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2413:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2413:20:6"
																		},
																		"nodeType": "YulIf",
																		"src": "2410:47:6"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2470:41:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2484:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2494:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2501:3:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2506:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2497:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2497:12:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2490:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2490:20:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2480:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2480:31:6"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2474:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2524:24:6",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2537:11:6"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2528:5:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2622:21:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2631:5:6"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2638:2:6"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2624:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2624:17:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2624:17:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2572:5:6"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2579:2:6"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2569:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2569:13:6"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2583:26:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2585:22:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2598:5:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2605:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2594:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2594:13:6"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2585:5:6"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2565:3:6",
																			"statements": []
																		},
																		"src": "2561:82:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2211:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2216:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2208:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2208:11:6"
															},
															"nodeType": "YulIf",
															"src": "2205:448:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2167:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2174:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2179:10:6",
														"type": ""
													}
												],
												"src": "2114:545:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2749:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2759:65:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2774:4:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2792:1:6",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2795:3:6"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2788:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2788:11:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2805:1:6",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2801:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2801:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2784:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2784:24:6"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2780:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2780:29:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2770:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2770:40:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2816:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2819:3:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2812:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2812:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2767:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2767:57:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2759:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2726:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2732:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2740:4:6",
														"type": ""
													}
												],
												"src": "2664:166:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2931:1256:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2941:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2961:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2955:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:10:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2945:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3008:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3010:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3010:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3010:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2980:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2996:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3000:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2992:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2992:10:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3004:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2988:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2988:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2977:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2977:30:6"
															},
															"nodeType": "YulIf",
															"src": "2974:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3083:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3121:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3115:5:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3115:11:6"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3089:25:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:38:6"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3129:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "3039:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3039:97:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3039:97:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3145:18:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3162:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3149:9:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3172:23:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3191:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3176:11:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3204:24:6",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3217:11:6"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3204:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3274:656:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3288:35:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3307:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3319:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3315:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3315:7:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3303:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3303:20:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3292:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3336:49:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3380:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3350:29:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3350:35:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3340:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3398:10:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3407:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3402:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3485:172:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3510:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3528:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3533:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3524:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3524:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3518:5:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3518:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3503:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3503:42:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3503:42:6"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3562:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3576:6:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3584:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3572:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3572:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3562:6:6"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3603:40:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3620:9:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3631:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3616:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3616:27:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3603:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3432:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3435:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3429:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3429:14:6"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3444:28:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3446:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3455:1:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3458:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3451:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3451:19:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3446:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3425:3:6",
																					"statements": []
																				},
																				"src": "3421:236:6"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3705:166:6",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3723:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3750:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3755:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3746:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3746:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3740:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3740:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3727:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3790:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3802:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3829:1:6",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3832:6:6"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3825:3:6"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3825:14:6"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3841:3:6",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3821:3:6"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3821:24:6"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3851:1:6",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3847:3:6"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3847:6:6"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3817:3:6"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3817:37:6"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3813:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3813:42:6"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3798:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3798:58:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3783:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3783:74:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3783:74:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3676:7:6"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3685:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3673:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3673:19:6"
																				},
																				"nodeType": "YulIf",
																				"src": "3670:201:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3891:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3905:1:6",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3908:6:6"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3901:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3901:14:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3917:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3897:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3897:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3884:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3884:36:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3884:36:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3267:663:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3272:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3947:234:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3961:14:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3974:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3965:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4010:67:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4028:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4047:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4052:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4043:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4043:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4037:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4037:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4028:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3991:6:6"
																				},
																				"nodeType": "YulIf",
																				"src": "3988:89:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4097:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4156:5:6"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4163:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4103:52:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4103:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4090:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4090:81:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4090:81:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3939:242:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3247:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3255:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3244:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3244:14:6"
															},
															"nodeType": "YulSwitch",
															"src": "3237:944:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2916:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2922:3:6",
														"type": ""
													}
												],
												"src": "2835:1352:6"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b8238038062000b82833981016040819052620000349162000127565b600362000042838262000220565b50600462000051828262000220565b505050620002ec565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b838211156200011d5760008385830101525b9695505050505050565b600080604083850312156200013b57600080fd5b82516001600160401b03808211156200015357600080fd5b620001618683870162000070565b935060208501519150808211156200017857600080fd5b50620001878582860162000070565b9150509250929050565b600181811c90821680620001a657607f821691505b602082108103620001c757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021b57600081815260208120601f850160051c81016020861015620001f65750805b601f850160051c820191505b81811015620002175782815560010162000202565b5050505b505050565b81516001600160401b038111156200023c576200023c6200005a565b62000254816200024d845462000191565b84620001cd565b602080601f8311600181146200028c5760008415620002735750858301515b600019600386901b1c1916600185901b17855562000217565b600085815260208120601f198616915b82811015620002bd578886015182559484019460019091019084016200029c565b5085821015620002dc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61088680620002fc6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082a565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b60208210810361082457634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084b57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212200081742352af2e3abd4011f4774f2d293f437a0038893442e64e595f146f204564736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB82 CODESIZE SUB DUP1 PUSH3 0xB82 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x127 JUMP JUMPDEST PUSH1 0x3 PUSH3 0x42 DUP4 DUP3 PUSH3 0x220 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x51 DUP3 DUP3 PUSH3 0x220 JUMP JUMPDEST POP POP POP PUSH3 0x2EC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x161 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x187 DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1A6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1C7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x21B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1F6 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x217 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x202 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x23C JUMPI PUSH3 0x23C PUSH3 0x5A JUMP JUMPDEST PUSH3 0x254 DUP2 PUSH3 0x24D DUP5 SLOAD PUSH3 0x191 JUMP JUMPDEST DUP5 PUSH3 0x1CD JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x28C JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x273 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x217 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2BD JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x29C JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2DC JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x886 DUP1 PUSH3 0x2FC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82A JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x824 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP2 PUSH21 0x2352AF2E3ABD4011F4774F2D293F437A0038893442 0xE6 0x4E MSIZE 0x5F EQ PUSH16 0x204564736F6C634300080F0033000000 ",
							"sourceMap": "1403:11214:0:-:0;;;1978:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:5;:13;2052:5;2044;:13;:::i;:::-;-1:-1:-1;2067:7:0;:17;2077:7;2067;:17;:::i;:::-;;1978:113;;1403:11214;;14:127:6;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:6;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:6;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:6:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:6;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;2114:545::-;2216:2;2211:3;2208:11;2205:448;;;2252:1;2277:5;2273:2;2266:17;2322:4;2318:2;2308:19;2392:2;2380:10;2376:19;2373:1;2369:27;2363:4;2359:38;2428:4;2416:10;2413:20;2410:47;;;-1:-1:-1;2451:4:6;2410:47;2506:2;2501:3;2497:12;2494:1;2490:20;2484:4;2480:31;2470:41;;2561:82;2579:2;2572:5;2569:13;2561:82;;;2624:17;;;2605:1;2594:13;2561:82;;;2565:3;;;2205:448;2114:545;;;:::o;2835:1352::-;2955:10;;-1:-1:-1;;;;;2977:30:6;;2974:56;;;3010:18;;:::i;:::-;3039:97;3129:6;3089:38;3121:4;3115:11;3089:38;:::i;:::-;3083:4;3039:97;:::i;:::-;3191:4;;3255:2;3244:14;;3272:1;3267:663;;;;3974:1;3991:6;3988:89;;;-1:-1:-1;4043:19:6;;;4037:26;3988:89;-1:-1:-1;;2792:1:6;2788:11;;;2784:24;2780:29;2770:40;2816:1;2812:11;;;2767:57;4090:81;;3237:944;;3267:663;2061:1;2054:14;;;2098:4;2085:18;;-1:-1:-1;;3303:20:6;;;3421:236;3435:7;3432:1;3429:14;3421:236;;;3524:19;;;3518:26;3503:42;;3616:27;;;;3584:1;3572:14;;;;3451:19;;3421:236;;;3425:3;3685:6;3676:7;3673:19;3670:201;;;3746:19;;;3740:26;-1:-1:-1;;3829:1:6;3825:14;;;3841:3;3821:24;3817:37;3813:42;3798:58;3783:74;;3670:201;-1:-1:-1;;;;;3917:1:6;3901:14;;;3897:22;3884:36;;-1:-1:-1;2835:1352:6:o;:::-;1403:11214:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_584": {
									"entryPoint": null,
									"id": 584,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_519": {
									"entryPoint": 856,
									"id": 519,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_573": {
									"entryPoint": null,
									"id": 573,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_700": {
									"entryPoint": null,
									"id": 700,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_562": {
									"entryPoint": 1148,
									"id": 562,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_346": {
									"entryPoint": 1270,
									"id": 346,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_141": {
									"entryPoint": 813,
									"id": 141,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_166": {
									"entryPoint": 562,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_98": {
									"entryPoint": null,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_269": {
									"entryPoint": 671,
									"id": 269,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_228": {
									"entryPoint": 622,
									"id": 228,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_54": {
									"entryPoint": 416,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_64": {
									"entryPoint": 656,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 586,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_123": {
									"entryPoint": 799,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5806:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:6",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:6"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:6"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:6",
																"statements": []
															},
															"src": "294:140:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:6"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:6"
															},
															"nodeType": "YulIf",
															"src": "443:91:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:6",
														"type": ""
													}
												],
												"src": "14:597:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:6"
															},
															"nodeType": "YulIf",
															"src": "713:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:6",
														"type": ""
													}
												],
												"src": "616:173:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:6"
															},
															"nodeType": "YulIf",
															"src": "891:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:6",
														"type": ""
													}
												],
												"src": "794:254:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:6",
														"type": ""
													}
												],
												"src": "1053:187:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:6",
														"type": ""
													}
												],
												"src": "1245:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:6"
															},
															"nodeType": "YulIf",
															"src": "1541:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:6",
														"type": ""
													}
												],
												"src": "1427:328:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:6",
														"type": ""
													}
												],
												"src": "1760:184:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:6"
															},
															"nodeType": "YulIf",
															"src": "2029:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:6",
														"type": ""
													}
												],
												"src": "1949:186:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2227:173:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2273:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2282:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2285:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2275:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2275:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2248:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2257:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2244:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2244:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2240:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:32:6"
															},
															"nodeType": "YulIf",
															"src": "2237:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2327:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2308:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2346:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2356:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2196:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2208:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2216:6:6",
														"type": ""
													}
												],
												"src": "2140:260:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2470:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2484:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2487:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2480:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2501:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2531:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2537:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2505:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2578:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2580:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2594:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2602:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2590:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2590:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2580:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2558:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:26:6"
															},
															"nodeType": "YulIf",
															"src": "2548:61:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2689:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2696:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2701:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2692:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2692:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2682:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2682:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2726:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2726:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2764:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2754:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2754:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2754:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2624:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2644:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2621:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2621:38:6"
															},
															"nodeType": "YulIf",
															"src": "2618:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2440:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2449:6:6",
														"type": ""
													}
												],
												"src": "2405:380:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2838:177:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2873:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2894:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2901:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2906:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2897:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2897:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2887:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2938:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2941:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2931:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2931:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2931:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2966:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2969:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2959:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2959:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2959:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2854:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2861:1:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2857:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2857:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2851:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2851:13:6"
															},
															"nodeType": "YulIf",
															"src": "2848:136:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2993:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3004:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3007:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3000:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2993:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2821:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2824:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2830:3:6",
														"type": ""
													}
												],
												"src": "2790:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3194:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3211:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3222:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3204:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3204:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3256:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3241:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3241:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3261:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3234:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3234:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3234:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3284:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3295:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:18:6"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3300:34:6",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3355:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3366:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3351:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3351:18:6"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3371:7:6",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3344:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3388:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3400:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3411:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3396:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3388:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3171:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3185:4:6",
														"type": ""
													}
												],
												"src": "3020:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3600:226:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3617:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3610:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3610:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3667:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3640:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3690:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3701:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3686:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3686:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3706:34:6",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3761:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3772:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3757:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3757:18:6"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3777:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3750:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3750:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3750:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3805:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3816:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3801:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3577:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3591:4:6",
														"type": ""
													}
												],
												"src": "3426:400:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4005:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4022:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4033:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4015:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4015:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4015:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4056:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4067:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4052:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4052:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4072:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4045:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4045:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4045:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4095:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4106:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4091:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4111:34:6",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4084:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4084:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4084:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4166:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4177:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4162:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4162:18:6"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4182:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4155:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4155:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4155:32:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4196:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4208:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4219:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4204:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4196:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3982:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3996:4:6",
														"type": ""
													}
												],
												"src": "3831:398:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4408:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4425:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4436:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4418:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4459:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4470:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4455:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4455:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4475:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4448:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4498:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4509:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4494:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4494:18:6"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4514:31:6",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4487:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:59:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4487:59:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4555:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4567:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4578:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4563:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4555:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4385:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4399:4:6",
														"type": ""
													}
												],
												"src": "4234:353:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4766:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4783:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4794:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4776:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4776:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4776:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4817:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4828:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4813:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4813:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4833:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4806:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4806:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4856:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4867:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4852:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4852:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4872:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4845:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4845:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4927:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4938:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4923:18:6"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4943:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4916:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4960:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4972:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4983:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4968:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4968:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4960:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4743:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4757:4:6",
														"type": ""
													}
												],
												"src": "4592:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5172:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5189:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5182:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5182:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5182:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5223:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5234:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5219:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5239:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5212:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5262:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5273:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5258:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5258:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5278:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5251:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5251:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5251:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5333:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5344:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5329:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5329:18:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5349:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5322:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5322:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5322:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5364:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5376:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5387:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5372:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5364:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5149:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5163:4:6",
														"type": ""
													}
												],
												"src": "4998:399:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5576:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5593:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5604:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5586:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5627:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5638:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5623:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5643:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5616:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5616:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5616:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5666:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5677:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5662:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5662:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5682:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5655:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5655:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5655:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5748:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5733:18:6"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5753:8:6",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5726:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5726:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5726:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5771:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5783:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5794:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5779:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5779:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5771:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5553:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5567:4:6",
														"type": ""
													}
												],
												"src": "5402:402:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082a565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b60208210810361082457634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084b57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212200081742352af2e3abd4011f4774f2d293f437a0038893442e64e595f146f204564736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82A JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x824 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP2 PUSH21 0x2352AF2E3ABD4011F4774F2D293F437A0038893442 0xE6 0x4E MSIZE 0x5F EQ PUSH16 0x204564736F6C634300080F0033000000 ",
							"sourceMap": "1403:11214:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:6;;1211:22;1193:41;;1181:2;1166:18;4433:197:0;1053:187:6;3244:106:0;3331:12;;3244:106;;;1391:25:6;;;1379:2;1364:18;3244:106:0;1245:177:6;5192:286:0;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;1902:36:6;;1890:2;1875:18;3093:91:0;1760:184:6;5873:234:0;;;;;;:::i;:::-;;:::i;3408:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:0;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;;:::i;2156:98::-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:3;4570:32:0;719:10:3;4586:7:0;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:0;;4433:197;-1:-1:-1;;;4433:197:0:o;5192:286::-;5319:4;719:10:3;5375:38:0;5391:4;719:10:3;5406:6:0;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:0;;5192:286;-1:-1:-1;;;;5192:286:0:o;5873:234::-;5961:4;719:10:3;6015:64:0;719:10:3;6031:7:0;6068:10;6040:25;719:10:3;6031:7:0;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:3;6687:4:0;6768:25;719:10:3;6785:7:0;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:0;;3222:2:6;6803:85:0;;;3204:21:6;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:6;;;3344:35;3396:19;;6803:85:0;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:3;3862:28:0;719:10:3;3879:2:0;3883:6;3862:9;:28::i;3976:149::-;-1:-1:-1;;;;;4091:18:0;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;10110:370::-;-1:-1:-1;;;;;10241:19:0;;10233:68;;;;-1:-1:-1;;;10233:68:0;;3628:2:6;10233:68:0;;;3610:21:6;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:6;;;3750:34;3801:19;;10233:68:0;3426:400:6;10233:68:0;-1:-1:-1;;;;;10319:21:0;;10311:68;;;;-1:-1:-1;;;10311:68:0;;4033:2:6;10311:68:0;;;4015:21:6;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:6;;;4155:32;4204:19;;10311:68:0;3831:398:6;10311:68:0;-1:-1:-1;;;;;10390:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;1391:25:6;;;10441:32:0;;1364:18:6;10441:32:0;;;;;;;10110:370;;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;-1:-1:-1;;10957:16:0;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:0;;4436:2:6;11010:68:0;;;4418:21:6;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;11010:68:0;4234:353:6;11010:68:0;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:0;;7593:68;;;;-1:-1:-1;;;7593:68:0;;4794:2:6;7593:68:0;;;4776:21:6;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:6;;;4916:35;4968:19;;7593:68:0;4592:401:6;7593:68:0;-1:-1:-1;;;;;7679:16:0;;7671:64;;;;-1:-1:-1;;;7671:64:0;;5200:2:6;7671:64:0;;;5182:21:6;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:6;;;5322:33;5372:19;;7671:64:0;4998:399:6;7671:64:0;-1:-1:-1;;;;;7817:15:0;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:0;;5604:2:6;7842:72:0;;;5586:21:6;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:6;;;5726:36;5779:19;;7842:72:0;5402:402:6;7842:72:0;-1:-1:-1;;;;;7948:15:0;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:0;8054:4;-1:-1:-1;;;;;8045:26:0;;8064:6;8045:26;;;;1391:25:6;;1379:2;1364:18;;1245:177;8045:26:0;;;;;;;;8082:37;11786:121;14:597:6;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:6;574:15;-1:-1:-1;;570:29:6;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:6:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:6;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:6:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:6:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:6;;2790:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "436400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "26978",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51270",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1978,
									"end": 2091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2052,
									"end": 2057,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2044,
									"end": 2057,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2077,
									"end": 2084,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2067,
									"end": 2084,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 6,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1135,
									"end": 1141,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1149,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1198,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1193,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1175,
									"end": 1182,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1171,
									"end": 1194,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1167,
									"end": 1199,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1407,
									"end": 1414,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1396,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1354,
									"end": 1415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1461,
									"end": 1463,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1450,
									"end": 1459,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1440,
									"end": 1465,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1480,
									"end": 1488,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1477,
									"end": 1493,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1504,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1496,
									"end": 1508,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1584,
									"end": 1591,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1573,
									"end": 1581,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1529,
									"end": 1592,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1598,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1682,
									"end": 1683,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1804,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 1792,
									"end": 1798,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1788,
									"end": 1805,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1853,
									"end": 1855,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1851,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1822,
									"end": 1840,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 1894,
									"end": 1897,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1887,
									"end": 1888,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1880,
									"end": 1911,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1934,
									"end": 1938,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1924,
									"end": 1939,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1967,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1603,
									"end": 1983,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2114,
									"end": 2659,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 2114,
									"end": 2659,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2216,
									"end": 2218,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2211,
									"end": 2214,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2208,
									"end": 2219,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2205,
									"end": 2653,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2205,
									"end": 2653,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2205,
									"end": 2653,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2252,
									"end": 2253,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2277,
									"end": 2282,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2266,
									"end": 2283,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2322,
									"end": 2326,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2318,
									"end": 2320,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2308,
									"end": 2327,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2392,
									"end": 2394,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2380,
									"end": 2390,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2376,
									"end": 2395,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2373,
									"end": 2374,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2369,
									"end": 2396,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2363,
									"end": 2367,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2359,
									"end": 2397,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2428,
									"end": 2432,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2416,
									"end": 2426,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2413,
									"end": 2433,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2410,
									"end": 2457,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2410,
									"end": 2457,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 2410,
									"end": 2457,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2451,
									"end": 2455,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2410,
									"end": 2457,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 2410,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2506,
									"end": 2508,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2501,
									"end": 2504,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2497,
									"end": 2509,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2494,
									"end": 2495,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2490,
									"end": 2510,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2484,
									"end": 2488,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2480,
									"end": 2511,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2470,
									"end": 2511,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2470,
									"end": 2511,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2579,
									"end": 2581,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2572,
									"end": 2577,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2569,
									"end": 2582,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2624,
									"end": 2641,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2624,
									"end": 2641,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2624,
									"end": 2641,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2605,
									"end": 2606,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2594,
									"end": 2607,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2565,
									"end": 2568,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2565,
									"end": 2568,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2565,
									"end": 2568,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2205,
									"end": 2653,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2205,
									"end": 2653,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2114,
									"end": 2659,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2114,
									"end": 2659,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2114,
									"end": 2659,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2114,
									"end": 2659,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2835,
									"end": 4187,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 2835,
									"end": 4187,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2955,
									"end": 2965,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2955,
									"end": 2965,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2977,
									"end": 3007,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2977,
									"end": 3007,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2974,
									"end": 3030,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2974,
									"end": 3030,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 2974,
									"end": 3030,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 3010,
									"end": 3028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3039,
									"end": 3136,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 3129,
									"end": 3135,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3089,
									"end": 3127,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 3121,
									"end": 3125,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3115,
									"end": 3126,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3089,
									"end": 3127,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 3089,
									"end": 3127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3089,
									"end": 3127,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 3089,
									"end": 3127,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3083,
									"end": 3087,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3039,
									"end": 3136,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 3039,
									"end": 3136,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3039,
									"end": 3136,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 3039,
									"end": 3136,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3191,
									"end": 3195,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3191,
									"end": 3195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3255,
									"end": 3257,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 3244,
									"end": 3258,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3244,
									"end": 3258,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3272,
									"end": 3273,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3974,
									"end": 3975,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3991,
									"end": 3997,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3988,
									"end": 4077,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3988,
									"end": 4077,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 3988,
									"end": 4077,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4043,
									"end": 4062,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4043,
									"end": 4062,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4043,
									"end": 4062,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4037,
									"end": 4063,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3988,
									"end": 4077,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 3988,
									"end": 4077,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2792,
									"end": 2793,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2788,
									"end": 2799,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2788,
									"end": 2799,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2788,
									"end": 2799,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2784,
									"end": 2808,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2780,
									"end": 2809,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2770,
									"end": 2810,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2816,
									"end": 2817,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2812,
									"end": 2823,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2812,
									"end": 2823,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2812,
									"end": 2823,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2767,
									"end": 2824,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4090,
									"end": 4171,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4090,
									"end": 4171,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3237,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 3237,
									"end": 4181,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2061,
									"end": 2062,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2054,
									"end": 2068,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2054,
									"end": 2068,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2054,
									"end": 2068,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2098,
									"end": 2102,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2085,
									"end": 2103,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2085,
									"end": 2103,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3303,
									"end": 3323,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3303,
									"end": 3323,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3303,
									"end": 3323,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3435,
									"end": 3442,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3432,
									"end": 3433,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3443,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3524,
									"end": 3543,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3524,
									"end": 3543,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3524,
									"end": 3543,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3518,
									"end": 3544,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3503,
									"end": 3545,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3503,
									"end": 3545,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3616,
									"end": 3643,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3616,
									"end": 3643,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3616,
									"end": 3643,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3616,
									"end": 3643,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3584,
									"end": 3585,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3572,
									"end": 3586,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3572,
									"end": 3586,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3572,
									"end": 3586,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3572,
									"end": 3586,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3451,
									"end": 3470,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3451,
									"end": 3470,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3425,
									"end": 3428,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3685,
									"end": 3691,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3676,
									"end": 3683,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3673,
									"end": 3692,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3670,
									"end": 3871,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3670,
									"end": 3871,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 3670,
									"end": 3871,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3746,
									"end": 3765,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3746,
									"end": 3765,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3746,
									"end": 3765,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3740,
									"end": 3766,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3829,
									"end": 3830,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3825,
									"end": 3839,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3825,
									"end": 3839,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3825,
									"end": 3839,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3841,
									"end": 3844,
									"name": "PUSH",
									"source": 6,
									"value": "F8"
								},
								{
									"begin": 3821,
									"end": 3845,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3817,
									"end": 3854,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3813,
									"end": 3855,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3798,
									"end": 3856,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3783,
									"end": 3857,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3783,
									"end": 3857,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3670,
									"end": 3871,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 3670,
									"end": 3871,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3917,
									"end": 3918,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3901,
									"end": 3915,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3901,
									"end": 3915,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3901,
									"end": 3915,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3897,
									"end": 3919,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3884,
									"end": 3920,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3884,
									"end": 3920,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2835,
									"end": 4187,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2835,
									"end": 4187,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 2835,
									"end": 4187,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200081742352af2e3abd4011f4774f2d293f437a0038893442e64e595f146f204564736f6c634300080f0033",
									".code": [
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2156,
											"end": 2254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2156,
											"end": 2254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4433,
											"end": 4630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5192,
											"end": 5478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3177,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5873,
											"end": 6107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 6107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3408,
											"end": 3533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2367,
											"end": 2469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6594,
											"end": 7021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6594,
											"end": 7021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3729,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3729,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3976,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3976,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2223,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2242,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2235,
											"end": 2247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2235,
											"end": 2247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4586,
											"end": 4593,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4570,
											"end": 4602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4433,
											"end": 4630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5406,
											"end": 5412,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5375,
											"end": 5413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5433,
											"end": 5437,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5423,
											"end": 5450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 6078,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6040,
											"end": 6065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6040,
											"end": 6078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6015,
											"end": 6079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2436,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2448,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6792,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6768,
											"end": 6793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6741,
											"end": 6793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6741,
											"end": 6793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6831,
											"end": 6846,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3224,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3225,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3234,
											"end": 3264,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3300,
											"end": 3334,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3379,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6931,
											"end": 6936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 6945,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 6981,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6963,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6981,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6922,
											"end": 6982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3879,
											"end": 3881,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3862,
											"end": 3890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3667,
											"end": 3669,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3670,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3740,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3741,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3426,
											"end": 3826,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4035,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4036,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4075,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4111,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4155,
											"end": 4187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3831,
											"end": 4229,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10401,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10891,
											"end": 10915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 10928,
											"end": 10933,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10935,
											"end": 10942,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10918,
											"end": 10927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 10918,
											"end": 10943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10891,
											"end": 10943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10891,
											"end": 10943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10957,
											"end": 10973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10957,
											"end": 10994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11038,
											"end": 11044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11044,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4438,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4439,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4477,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4448,
											"end": 4478,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4514,
											"end": 4545,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4546,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4234,
											"end": 4587,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11129,
											"end": 11134,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11136,
											"end": 11143,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11164,
											"end": 11170,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11161,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11170,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11120,
											"end": 11171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10881,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4794,
											"end": 4796,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4776,
											"end": 4797,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4872,
											"end": 4906,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4845,
											"end": 4907,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 4951,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4592,
											"end": 4993,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5200,
											"end": 5202,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5182,
											"end": 5203,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5239,
											"end": 5241,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5212,
											"end": 5242,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5278,
											"end": 5312,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5251,
											"end": 5313,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5322,
											"end": 5355,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4998,
											"end": 5397,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7795,
											"end": 7814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5604,
											"end": 5606,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5643,
											"end": 5645,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5616,
											"end": 5646,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5682,
											"end": 5716,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 5717,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5726,
											"end": 5762,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5402,
											"end": 5804,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8006,
											"end": 8029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8060,
											"end": 8062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8054,
											"end": 8058,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8064,
											"end": 8070,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8082,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11786,
											"end": 11907,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 616,
											"end": 789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 962,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1612,
											"end": 1641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1660,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2100,
											"end": 2129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2129,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2266,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2267,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2240,
											"end": 2272,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2308,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2356,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2607,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2658,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2659,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 2696,
											"end": 2699,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2692,
											"end": 2712,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2690,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2713,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2741,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2769,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2833,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2863,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2864,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 2916,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 2901,
											"end": 2904,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2897,
											"end": 2917,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2895,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2918,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2941,
											"end": 2945,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2938,
											"end": 2939,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2931,
											"end": 2946,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 2973,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2966,
											"end": 2967,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Contracts/AccessBSC.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a461faa24898f6e76d76a0cc97ab56fe15bf01ca5bf802e1e1370fae74901f6e64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a461faa24898f6e76d76a0cc97ab56fe15bf01ca5bf802e1e1370fae74901f6e64736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 PUSH2 0xFAA2 BASEFEE SWAP9 0xF6 0xE7 PUSH14 0x76A0CC97AB56FE15BF01CA5BF802 0xE1 0xE1 CALLDATACOPY 0xF 0xAE PUSH21 0x901F6E64736F6C634300080F003300000000000000 ",
							"sourceMap": "482:6300:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a461faa24898f6e76d76a0cc97ab56fe15bf01ca5bf802e1e1370fae74901f6e64736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 PUSH2 0xFAA2 BASEFEE SWAP9 0xF6 0xE7 PUSH14 0x76A0CC97AB56FE15BF01CA5BF802 0xE1 0xE1 CALLDATACOPY 0xF 0xAE PUSH21 0x901F6E64736F6C634300080F003300000000000000 ",
							"sourceMap": "482:6300:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a461faa24898f6e76d76a0cc97ab56fe15bf01ca5bf802e1e1370fae74901f6e64736f6c634300080f0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Contracts/AccessBSC.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Contracts/AccessBSC.sol": {
				"Metacces": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newLimit",
									"type": "uint256"
								}
							],
							"name": "PrivateLimit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "Amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "Price",
									"type": "uint256"
								}
							],
							"name": "PrivateSale",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newBridge",
									"type": "address"
								}
							],
							"name": "SetBridge",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "decimal",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "WithdrawalBNB",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_tokenAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "decimals",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "WithdrawalToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "Min",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "Max",
									"type": "uint256"
								}
							],
							"name": "minMax",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "Time",
									"type": "uint256"
								}
							],
							"name": "saleEnded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "saleStarted",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Bridge",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "Path",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "minAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxAmount",
									"type": "uint256"
								}
							],
							"name": "changeMinMaxPrivateSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deadAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "max",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "min",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "privateSale",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "newBridge",
									"type": "address"
								}
							],
							"name": "setBridge",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_limit",
									"type": "uint256"
								}
							],
							"name": "setPrivateLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_sEBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_sPrice",
									"type": "uint256"
								}
							],
							"name": "startSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "theCompany",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewSale",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "StartBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "EndBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "SaleCount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "SalePrice",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "decimal",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "withdrawalBNB",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "decimal",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "withdrawalToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/AccessBSC.sol\":201:4566  contract Metacces is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"Contracts/AccessBSC.sol\":406:477  address public deadAddress = 0x000000000000000000000000000000000000dEaD */\n  0x07\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"Contracts/AccessBSC.sol\":435:477  0x000000000000000000000000000000000000dEaD */\n  0xdead\n    /* \"Contracts/AccessBSC.sol\":406:477  address public deadAddress = 0x000000000000000000000000000000000000dEaD */\n  or\n  swap1\n  sstore\n    /* \"Contracts/AccessBSC.sol\":617:627  decimals() */\n  tag_1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3175:3177  18 */\n  0x12\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n  jump\n    /* \"Contracts/AccessBSC.sol\":617:627  decimals() */\ntag_1:\n    /* \"Contracts/AccessBSC.sol\":612:627  10** decimals() */\n  tag_3\n  swap1\n    /* \"Contracts/AccessBSC.sol\":612:614  10 */\n  0x0a\n    /* \"Contracts/AccessBSC.sol\":612:627  10** decimals() */\n  tag_4\n  jump\t// in\ntag_3:\n    /* \"Contracts/AccessBSC.sol\":590:627  uint256 public Path = 10** decimals() */\n  0x0c\n  dup2\n  swap1\n  sstore\n    /* \"Contracts/AccessBSC.sol\":654:663  20 * Path */\n  tag_5\n  swap1\n    /* \"Contracts/AccessBSC.sol\":654:656  20 */\n  0x14\n    /* \"Contracts/AccessBSC.sol\":654:663  20 * Path */\n  tag_6\n  jump\t// in\ntag_5:\n    /* \"Contracts/AccessBSC.sol\":633:663  uint256 public max = 20 * Path */\n  0x0d\n  sstore\n    /* \"Contracts/AccessBSC.sol\":690:702  max.div(100) */\n  tag_7\n    /* \"Contracts/AccessBSC.sol\":698:701  100 */\n  0x64\n    /* \"Contracts/AccessBSC.sol\":690:693  max */\n  sload(0x0d)\n    /* \"Contracts/AccessBSC.sol\":690:697  max.div */\n  or(tag_0_178, shl(0x20, tag_8))\n  swap1\n    /* \"Contracts/AccessBSC.sol\":690:702  max.div(100) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"Contracts/AccessBSC.sol\":669:702  uint256 public min = max.div(100) */\n  0x0e\n  sstore\n    /* \"Contracts/AccessBSC.sol\":738:745  1000000 */\n  0x0f4240\n    /* \"Contracts/AccessBSC.sol\":708:745  uint256 public privateLimit = 1000000 */\n  0x0f\n  sstore\n    /* \"Contracts/AccessBSC.sol\":790:794  Path */\n  sload(0x0c)\n    /* \"Contracts/AccessBSC.sol\":778:794  500000000 * Path */\n  tag_9\n  swap1\n    /* \"Contracts/AccessBSC.sol\":778:787  500000000 */\n  0x1dcd6500\n    /* \"Contracts/AccessBSC.sol\":778:794  500000000 * Path */\n  tag_6\n  jump\t// in\ntag_9:\n    /* \"Contracts/AccessBSC.sol\":751:794  uint256 public maxSupply = 500000000 * Path */\n  0x10\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc0, 0x4d65746163636573)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xd8, 0x4163636573)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2052:2057  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2049  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  swap1\n  dup2\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  tag_15\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2077:2084  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  tag_14\n  jump\t// in\ntag_15:\n  pop\n  pop\n    /* \"Contracts/AccessBSC.sol\":1464:1469  owner */\n  0x05\n    /* \"Contracts/AccessBSC.sol\":1464:1482  owner = msg.sender */\n  dup1\n  sload\n    /* \"Contracts/AccessBSC.sol\":1472:1482  msg.sender */\n  caller\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"Contracts/AccessBSC.sol\":1464:1482  owner = msg.sender */\n  swap1\n  swap2\n  and\n  or\n  dup2\n  sstore\n    /* \"Contracts/AccessBSC.sol\":1510:1519  maxSupply */\n  sload(0x10)\n    /* \"Contracts/AccessBSC.sol\":1488:1536  _mint (address(this), maxSupply.mul(5).div(100)) */\n  tag_17\n  swap3\n  pop\n    /* \"Contracts/AccessBSC.sol\":1503:1507  this */\n  address\n  swap2\n    /* \"Contracts/AccessBSC.sol\":1510:1535  maxSupply.mul(5).div(100) */\n  tag_18\n  swap2\n    /* \"Contracts/AccessBSC.sol\":1531:1534  100 */\n  0x64\n  swap2\n    /* \"Contracts/AccessBSC.sol\":1510:1526  maxSupply.mul(5) */\n  tag_19\n  swap2\n    /* \"Contracts/AccessBSC.sol\":1510:1519  maxSupply */\n  swap1\n    /* \"Contracts/AccessBSC.sol\":1510:1523  maxSupply.mul */\n  tag_20\n  0x20\n  swap1\n  dup2\n  shl\n  tag_0_179\n  or\n    /* \"Contracts/AccessBSC.sol\":1510:1526  maxSupply.mul(5) */\n  swap1\n  shr\n  jump\t// in\ntag_19:\n    /* \"Contracts/AccessBSC.sol\":1510:1530  maxSupply.mul(5).div */\n  or(tag_0_178, shl(0x20, tag_8))\n  swap1\n    /* \"Contracts/AccessBSC.sol\":1510:1535  maxSupply.mul(5).div(100) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"Contracts/AccessBSC.sol\":1488:1493  _mint */\n  tag_21\n    /* \"Contracts/AccessBSC.sol\":1488:1536  _mint (address(this), maxSupply.mul(5).div(100)) */\n  jump\t// in\ntag_17:\n    /* \"Contracts/AccessBSC.sol\":1548:1594  _mint (theCompany, maxSupply.mul(95).div(100)) */\n  tag_22\n    /* \"Contracts/AccessBSC.sol\":358:400  0xc6e5347D1A5FE685160429705E9e26bD3BBa8fEa */\n  0xc6e5347d1a5fe685160429705e9e26bd3bba8fea\n    /* \"Contracts/AccessBSC.sol\":1567:1593  maxSupply.mul(95).div(100) */\n  tag_18\n    /* \"Contracts/AccessBSC.sol\":1589:1592  100 */\n  0x64\n    /* \"Contracts/AccessBSC.sol\":1567:1584  maxSupply.mul(95) */\n  tag_19\n    /* \"Contracts/AccessBSC.sol\":1581:1583  95 */\n  0x5f\n    /* \"Contracts/AccessBSC.sol\":1567:1576  maxSupply */\n  sload(0x10)\n    /* \"Contracts/AccessBSC.sol\":1567:1580  maxSupply.mul */\n  or(tag_0_179, shl(0x20, tag_20))\n  swap1\n    /* \"Contracts/AccessBSC.sol\":1567:1584  maxSupply.mul(95) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\n    /* \"Contracts/AccessBSC.sol\":1548:1594  _mint (theCompany, maxSupply.mul(95).div(100)) */\ntag_22:\n    /* \"Contracts/AccessBSC.sol\":201:4566  contract Metacces is ERC20 {... */\n  jump(tag_55)\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n  tag_28\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n  dup3\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n  dup5\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n  tag_29\n  jump\t// in\ntag_28:\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_27:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_20:\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n  tag_28\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n  dup3\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n  dup5\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n  tag_6\n  jump\t// in\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8402:8791  function _mint(address account, uint256 amount) internal virtual {... */\ntag_21:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8485:8506  account != address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8477:8542  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_33\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4847:4849   */\n  0x20\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8477:8542  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4829:4850   */\n  mstore\n    /* \"#utility.yul\":4886:4888   */\n  0x1f\n    /* \"#utility.yul\":4866:4884   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4859:4889   */\n  mstore\n    /* \"#utility.yul\":4925:4958   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":4905:4923   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4898:4959   */\n  mstore\n    /* \"#utility.yul\":4976:4994   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8477:8542  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8629:8635  amount */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8613:8625  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8613:8635  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_38\n  swap2\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8663  _balances[account] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8654  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8663  _balances[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8673  _balances[account] += amount */\n  dup1\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8667:8673  amount */\n  dup4\n  swap3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8654  _balances */\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8673  _balances[account] += amount */\n  tag_40\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8667:8673  amount */\n  dup5\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8673  _balances[account] += amount */\n  tag_39\n  jump\t// in\ntag_40:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n  mload(0x40)\n    /* \"#utility.yul\":5284:5309   */\n  dup2\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n  dup4\n  and\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8705:8706  0 */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":5272:5274   */\n  0x20\n    /* \"#utility.yul\":5257:5275   */\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8402:8791  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11786:11907  function _beforeTokenTransfer(... */\ntag_37:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_47:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x11\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:568   */\ntag_48:\n    /* \"#utility.yul\":235:236   */\n  0x01\n    /* \"#utility.yul\":278:283   */\n  dup2\n    /* \"#utility.yul\":235:236   */\n  dup2\n    /* \"#utility.yul\":292:562   */\ntag_58:\n    /* \"#utility.yul\":313:320   */\n  dup1\n    /* \"#utility.yul\":303:311   */\n  dup6\n    /* \"#utility.yul\":300:321   */\n  gt\n    /* \"#utility.yul\":292:562   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":372:376   */\n  dup2\n    /* \"#utility.yul\":368:369   */\n  0x00\n    /* \"#utility.yul\":364:370   */\n  not\n    /* \"#utility.yul\":360:377   */\n  div\n    /* \"#utility.yul\":354:358   */\n  dup3\n    /* \"#utility.yul\":351:378   */\n  gt\n    /* \"#utility.yul\":348:401   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":381:399   */\n  tag_62\n  tag_47\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":431:438   */\n  dup1\n    /* \"#utility.yul\":421:429   */\n  dup6\n    /* \"#utility.yul\":417:439   */\n  and\n    /* \"#utility.yul\":414:469   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":451:467   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":414:469   */\ntag_63:\n    /* \"#utility.yul\":530:552   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":490:505   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":292:562   */\n  jump(tag_58)\ntag_60:\n    /* \"#utility.yul\":296:299   */\n  pop\n    /* \"#utility.yul\":146:568   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":573:1379   */\ntag_49:\n    /* \"#utility.yul\":622:627   */\n  0x00\n    /* \"#utility.yul\":652:660   */\n  dup3\n    /* \"#utility.yul\":642:722   */\n  tag_65\n  jumpi\n  pop\n    /* \"#utility.yul\":693:694   */\n  0x01\n    /* \"#utility.yul\":707:712   */\n  jump(tag_27)\n    /* \"#utility.yul\":642:722   */\ntag_65:\n    /* \"#utility.yul\":741:745   */\n  dup2\n    /* \"#utility.yul\":731:807   */\n  tag_66\n  jumpi\n  pop\n    /* \"#utility.yul\":778:779   */\n  0x00\n    /* \"#utility.yul\":792:797   */\n  jump(tag_27)\n    /* \"#utility.yul\":731:807   */\ntag_66:\n    /* \"#utility.yul\":823:827   */\n  dup2\n    /* \"#utility.yul\":841:842   */\n  0x01\n    /* \"#utility.yul\":836:895   */\n  dup2\n  eq\n  tag_68\n  jumpi\n    /* \"#utility.yul\":909:910   */\n  0x02\n    /* \"#utility.yul\":904:1034   */\n  dup2\n  eq\n  tag_69\n  jumpi\n    /* \"#utility.yul\":816:1034   */\n  jump(tag_67)\n    /* \"#utility.yul\":836:895   */\ntag_68:\n    /* \"#utility.yul\":866:867   */\n  0x01\n    /* \"#utility.yul\":857:867   */\n  swap2\n  pop\n    /* \"#utility.yul\":880:885   */\n  pop\n  jump(tag_27)\n    /* \"#utility.yul\":904:1034   */\ntag_69:\n    /* \"#utility.yul\":941:944   */\n  0xff\n    /* \"#utility.yul\":931:939   */\n  dup5\n    /* \"#utility.yul\":928:945   */\n  gt\n    /* \"#utility.yul\":925:968   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":948:966   */\n  tag_71\n  tag_47\n  jump\t// in\ntag_71:\n  pop\n  pop\n    /* \"#utility.yul\":1004:1005   */\n  0x01\n    /* \"#utility.yul\":990:1006   */\n  dup3\n  shl\n    /* \"#utility.yul\":1019:1024   */\n  jump(tag_27)\n    /* \"#utility.yul\":816:1034   */\ntag_67:\n  pop\n    /* \"#utility.yul\":1118:1120   */\n  0x20\n    /* \"#utility.yul\":1108:1116   */\n  dup4\n    /* \"#utility.yul\":1105:1121   */\n  lt\n    /* \"#utility.yul\":1099:1102   */\n  0x0133\n    /* \"#utility.yul\":1093:1097   */\n  dup4\n    /* \"#utility.yul\":1090:1103   */\n  lt\n    /* \"#utility.yul\":1086:1122   */\n  and\n    /* \"#utility.yul\":1080:1082   */\n  0x4e\n    /* \"#utility.yul\":1070:1078   */\n  dup5\n    /* \"#utility.yul\":1067:1083   */\n  lt\n    /* \"#utility.yul\":1062:1064   */\n  0x0b\n    /* \"#utility.yul\":1056:1060   */\n  dup5\n    /* \"#utility.yul\":1053:1065   */\n  lt\n    /* \"#utility.yul\":1049:1084   */\n  and\n    /* \"#utility.yul\":1046:1123   */\n  or\n    /* \"#utility.yul\":1043:1202   */\n  iszero\n  tag_72\n  jumpi\n  pop\n    /* \"#utility.yul\":1155:1174   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":1187:1192   */\n  jump(tag_27)\n    /* \"#utility.yul\":1043:1202   */\ntag_72:\n    /* \"#utility.yul\":1234:1268   */\n  tag_73\n    /* \"#utility.yul\":1259:1267   */\n  dup4\n    /* \"#utility.yul\":1253:1257   */\n  dup4\n    /* \"#utility.yul\":1234:1268   */\n  tag_48\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1304:1310   */\n  dup1\n    /* \"#utility.yul\":1300:1301   */\n  0x00\n    /* \"#utility.yul\":1296:1302   */\n  not\n    /* \"#utility.yul\":1292:1311   */\n  div\n    /* \"#utility.yul\":1283:1290   */\n  dup3\n    /* \"#utility.yul\":1280:1312   */\n  gt\n    /* \"#utility.yul\":1277:1335   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":1315:1333   */\n  tag_75\n  tag_47\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1353:1373   */\n  mul\n  swap4\n    /* \"#utility.yul\":573:1379   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1384:1524   */\ntag_4:\n    /* \"#utility.yul\":1442:1447   */\n  0x00\n    /* \"#utility.yul\":1471:1518   */\n  tag_28\n    /* \"#utility.yul\":1512:1516   */\n  0xff\n    /* \"#utility.yul\":1502:1510   */\n  dup5\n    /* \"#utility.yul\":1498:1517   */\n  and\n    /* \"#utility.yul\":1492:1496   */\n  dup4\n    /* \"#utility.yul\":1471:1518   */\n  tag_49\n  jump\t// in\n    /* \"#utility.yul\":1529:1697   */\ntag_6:\n    /* \"#utility.yul\":1569:1576   */\n  0x00\n    /* \"#utility.yul\":1635:1636   */\n  dup2\n    /* \"#utility.yul\":1631:1632   */\n  0x00\n    /* \"#utility.yul\":1627:1633   */\n  not\n    /* \"#utility.yul\":1623:1637   */\n  div\n    /* \"#utility.yul\":1620:1621   */\n  dup4\n    /* \"#utility.yul\":1617:1638   */\n  gt\n    /* \"#utility.yul\":1612:1613   */\n  dup3\n    /* \"#utility.yul\":1605:1614   */\n  iszero\n    /* \"#utility.yul\":1598:1615   */\n  iszero\n    /* \"#utility.yul\":1594:1639   */\n  and\n    /* \"#utility.yul\":1591:1662   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":1642:1660   */\n  tag_80\n  tag_47\n  jump\t// in\ntag_80:\n  pop\n    /* \"#utility.yul\":1682:1691   */\n  mul\n  swap1\n    /* \"#utility.yul\":1529:1697   */\n  jump\t// out\n    /* \"#utility.yul\":1702:1829   */\ntag_50:\n    /* \"#utility.yul\":1763:1773   */\n  0x4e487b71\n    /* \"#utility.yul\":1758:1761   */\n  0xe0\n    /* \"#utility.yul\":1754:1774   */\n  shl\n    /* \"#utility.yul\":1751:1752   */\n  0x00\n    /* \"#utility.yul\":1744:1775   */\n  mstore\n    /* \"#utility.yul\":1794:1798   */\n  0x41\n    /* \"#utility.yul\":1791:1792   */\n  0x04\n    /* \"#utility.yul\":1784:1799   */\n  mstore\n    /* \"#utility.yul\":1818:1822   */\n  0x24\n    /* \"#utility.yul\":1815:1816   */\n  0x00\n    /* \"#utility.yul\":1808:1823   */\n  revert\n    /* \"#utility.yul\":1834:2214   */\ntag_51:\n    /* \"#utility.yul\":1913:1914   */\n  0x01\n    /* \"#utility.yul\":1909:1921   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1956:1968   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1977:2038   */\n  tag_83\n  jumpi\n    /* \"#utility.yul\":2031:2035   */\n  0x7f\n    /* \"#utility.yul\":2023:2029   */\n  dup3\n    /* \"#utility.yul\":2019:2036   */\n  and\n    /* \"#utility.yul\":2009:2036   */\n  swap2\n  pop\n    /* \"#utility.yul\":1977:2038   */\ntag_83:\n    /* \"#utility.yul\":2084:2086   */\n  0x20\n    /* \"#utility.yul\":2076:2082   */\n  dup3\n    /* \"#utility.yul\":2073:2087   */\n  lt\n    /* \"#utility.yul\":2053:2071   */\n  dup2\n    /* \"#utility.yul\":2050:2088   */\n  sub\n    /* \"#utility.yul\":2047:2208   */\n  tag_84\n  jumpi\n    /* \"#utility.yul\":2130:2140   */\n  0x4e487b71\n    /* \"#utility.yul\":2125:2128   */\n  0xe0\n    /* \"#utility.yul\":2121:2141   */\n  shl\n    /* \"#utility.yul\":2118:2119   */\n  0x00\n    /* \"#utility.yul\":2111:2142   */\n  mstore\n    /* \"#utility.yul\":2165:2169   */\n  0x22\n    /* \"#utility.yul\":2162:2163   */\n  0x04\n    /* \"#utility.yul\":2155:2170   */\n  mstore\n    /* \"#utility.yul\":2193:2197   */\n  0x24\n    /* \"#utility.yul\":2190:2191   */\n  0x00\n    /* \"#utility.yul\":2183:2198   */\n  revert\n    /* \"#utility.yul\":2047:2208   */\ntag_84:\n  pop\n    /* \"#utility.yul\":1834:2214   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2345:2890   */\ntag_53:\n    /* \"#utility.yul\":2447:2449   */\n  0x1f\n    /* \"#utility.yul\":2442:2445   */\n  dup3\n    /* \"#utility.yul\":2439:2450   */\n  gt\n    /* \"#utility.yul\":2436:2884   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":2483:2484   */\n  0x00\n    /* \"#utility.yul\":2508:2513   */\n  dup2\n    /* \"#utility.yul\":2504:2506   */\n  dup2\n    /* \"#utility.yul\":2497:2514   */\n  mstore\n    /* \"#utility.yul\":2553:2557   */\n  0x20\n    /* \"#utility.yul\":2549:2551   */\n  dup2\n    /* \"#utility.yul\":2539:2558   */\n  keccak256\n    /* \"#utility.yul\":2623:2625   */\n  0x1f\n    /* \"#utility.yul\":2611:2621   */\n  dup6\n    /* \"#utility.yul\":2607:2626   */\n  add\n    /* \"#utility.yul\":2604:2605   */\n  0x05\n    /* \"#utility.yul\":2600:2627   */\n  shr\n    /* \"#utility.yul\":2594:2598   */\n  dup2\n    /* \"#utility.yul\":2590:2628   */\n  add\n    /* \"#utility.yul\":2659:2663   */\n  0x20\n    /* \"#utility.yul\":2647:2657   */\n  dup7\n    /* \"#utility.yul\":2644:2664   */\n  lt\n    /* \"#utility.yul\":2641:2688   */\n  iszero\n  tag_88\n  jumpi\n  pop\n    /* \"#utility.yul\":2682:2686   */\n  dup1\n    /* \"#utility.yul\":2641:2688   */\ntag_88:\n    /* \"#utility.yul\":2737:2739   */\n  0x1f\n    /* \"#utility.yul\":2732:2735   */\n  dup6\n    /* \"#utility.yul\":2728:2740   */\n  add\n    /* \"#utility.yul\":2725:2726   */\n  0x05\n    /* \"#utility.yul\":2721:2741   */\n  shr\n    /* \"#utility.yul\":2715:2719   */\n  dup3\n    /* \"#utility.yul\":2711:2742   */\n  add\n    /* \"#utility.yul\":2701:2742   */\n  swap2\n  pop\n    /* \"#utility.yul\":2792:2874   */\ntag_89:\n    /* \"#utility.yul\":2810:2812   */\n  dup2\n    /* \"#utility.yul\":2803:2808   */\n  dup2\n    /* \"#utility.yul\":2800:2813   */\n  lt\n    /* \"#utility.yul\":2792:2874   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":2855:2872   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2836:2837   */\n  0x01\n    /* \"#utility.yul\":2825:2838   */\n  add\n    /* \"#utility.yul\":2792:2874   */\n  jump(tag_89)\ntag_91:\n    /* \"#utility.yul\":2796:2799   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2345:2890   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3066:4418   */\ntag_14:\n    /* \"#utility.yul\":3186:3196   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3208:3238   */\n  dup2\n  gt\n    /* \"#utility.yul\":3205:3261   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":3241:3259   */\n  tag_95\n  tag_50\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":3270:3367   */\n  tag_96\n    /* \"#utility.yul\":3360:3366   */\n  dup2\n    /* \"#utility.yul\":3320:3358   */\n  tag_97\n    /* \"#utility.yul\":3352:3356   */\n  dup5\n    /* \"#utility.yul\":3346:3357   */\n  sload\n    /* \"#utility.yul\":3320:3358   */\n  tag_51\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3314:3318   */\n  dup5\n    /* \"#utility.yul\":3270:3367   */\n  tag_53\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3422:3426   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3486:3488   */\n  0x1f\n    /* \"#utility.yul\":3475:3489   */\n  dup4\n  gt\n    /* \"#utility.yul\":3503:3504   */\n  0x01\n    /* \"#utility.yul\":3498:4161   */\n  dup2\n  eq\n  tag_99\n  jumpi\n    /* \"#utility.yul\":4205:4206   */\n  0x00\n    /* \"#utility.yul\":4222:4228   */\n  dup5\n    /* \"#utility.yul\":4219:4308   */\n  iszero\n  tag_100\n  jumpi\n  pop\n    /* \"#utility.yul\":4274:4293   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":4268:4294   */\n  mload\n    /* \"#utility.yul\":4219:4308   */\ntag_100:\n  not(0x00)\n    /* \"#utility.yul\":3023:3024   */\n  0x03\n    /* \"#utility.yul\":3019:3030   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":3015:3039   */\n  shr\n    /* \"#utility.yul\":3011:3040   */\n  not\n    /* \"#utility.yul\":3001:3041   */\n  and\n    /* \"#utility.yul\":3047:3048   */\n  0x01\n    /* \"#utility.yul\":3043:3054   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2998:3055   */\n  or\n    /* \"#utility.yul\":4321:4402   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3468:4412   */\n  jump(tag_91)\n    /* \"#utility.yul\":3498:4161   */\ntag_99:\n    /* \"#utility.yul\":2292:2293   */\n  0x00\n    /* \"#utility.yul\":2285:2299   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2329:2333   */\n  0x20\n    /* \"#utility.yul\":2316:2334   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3534:3554   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3652:3888   */\ntag_103:\n    /* \"#utility.yul\":3666:3673   */\n  dup3\n    /* \"#utility.yul\":3663:3664   */\n  dup2\n    /* \"#utility.yul\":3660:3674   */\n  lt\n    /* \"#utility.yul\":3652:3888   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":3755:3774   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3749:3775   */\n  mload\n    /* \"#utility.yul\":3734:3776   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3847:3874   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3815:3816   */\n  0x01\n    /* \"#utility.yul\":3803:3817   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3682:3701   */\n  dup5\n  add\n    /* \"#utility.yul\":3652:3888   */\n  jump(tag_103)\ntag_105:\n    /* \"#utility.yul\":3656:3659   */\n  pop\n    /* \"#utility.yul\":3916:3922   */\n  dup6\n    /* \"#utility.yul\":3907:3914   */\n  dup3\n    /* \"#utility.yul\":3904:3923   */\n  lt\n    /* \"#utility.yul\":3901:4102   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":3977:3996   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3971:3997   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":4060:4061   */\n  0x03\n    /* \"#utility.yul\":4056:4070   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":4072:4075   */\n  0xf8\n    /* \"#utility.yul\":4052:4076   */\n  and\n    /* \"#utility.yul\":4048:4085   */\n  shr\n    /* \"#utility.yul\":4044:4086   */\n  not\n    /* \"#utility.yul\":4029:4087   */\n  and\n    /* \"#utility.yul\":4014:4088   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3901:4102   */\ntag_106:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4148:4149   */\n  0x01\n    /* \"#utility.yul\":4132:4146   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":4128:4150   */\n  add\n    /* \"#utility.yul\":4115:4151   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":3066:4418   */\n  jump\t// out\n    /* \"#utility.yul\":4423:4640   */\ntag_29:\n    /* \"#utility.yul\":4463:4464   */\n  0x00\n    /* \"#utility.yul\":4489:4490   */\n  dup3\n    /* \"#utility.yul\":4479:4611   */\n  tag_108\n  jumpi\n    /* \"#utility.yul\":4533:4543   */\n  0x4e487b71\n    /* \"#utility.yul\":4528:4531   */\n  0xe0\n    /* \"#utility.yul\":4524:4544   */\n  shl\n    /* \"#utility.yul\":4521:4522   */\n  0x00\n    /* \"#utility.yul\":4514:4545   */\n  mstore\n    /* \"#utility.yul\":4568:4572   */\n  0x12\n    /* \"#utility.yul\":4565:4566   */\n  0x04\n    /* \"#utility.yul\":4558:4573   */\n  mstore\n    /* \"#utility.yul\":4596:4600   */\n  0x24\n    /* \"#utility.yul\":4593:4594   */\n  0x00\n    /* \"#utility.yul\":4586:4601   */\n  revert\n    /* \"#utility.yul\":4479:4611   */\ntag_108:\n  pop\n    /* \"#utility.yul\":4625:4634   */\n  div\n  swap1\n    /* \"#utility.yul\":4423:4640   */\n  jump\t// out\n    /* \"#utility.yul\":5005:5133   */\ntag_39:\n    /* \"#utility.yul\":5045:5048   */\n  0x00\n    /* \"#utility.yul\":5076:5077   */\n  dup3\n    /* \"#utility.yul\":5072:5078   */\n  not\n    /* \"#utility.yul\":5069:5070   */\n  dup3\n    /* \"#utility.yul\":5066:5079   */\n  gt\n    /* \"#utility.yul\":5063:5102   */\n  iszero\n  tag_112\n  jumpi\n    /* \"#utility.yul\":5082:5100   */\n  tag_112\n  tag_47\n  jump\t// in\ntag_112:\n  pop\n    /* \"#utility.yul\":5118:5127   */\n  add\n  swap1\n    /* \"#utility.yul\":5005:5133   */\n  jump\t// out\n    /* \"#utility.yul\":5138:5315   */\ntag_55:\n    /* \"Contracts/AccessBSC.sol\":201:4566  contract Metacces is ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/AccessBSC.sol\":201:4566  contract Metacces is ERC20 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8dd14802\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xe7d53fcb\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xe7d53fcb\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf4f3122e\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf8897945\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0xdd62ed3e\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xdeea800d\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xe181203a\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe4993d8c\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0xa9059cbb\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xadbc7cee\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xb2938bee\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd5abeb01\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x8dd14802\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x39509351\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x534b1442\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x534b1442\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5fa2ef10\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6ac5db19\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x39509351\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3c3b7995\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4d1d03d1\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x23b872dd\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x27c8f835\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x380d831b\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n        /* \"#utility.yul\":1237:1251   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1230:1252   */\n      iszero\n        /* \"#utility.yul\":1212:1253   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1200:1202   */\n      0x20\n        /* \"#utility.yul\":1185:1203   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_44\n        /* \"#utility.yul\":1072:1259   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_54:\n      mload(0x40)\n        /* \"#utility.yul\":1410:1435   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1398:1400   */\n      0x20\n        /* \"#utility.yul\":1383:1401   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_44\n        /* \"#utility.yul\":1264:1441   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_47\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n        /* \"Contracts/AccessBSC.sol\":406:477  address public deadAddress = 0x000000000000000000000000000000000000dEaD */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      sload(0x07)\n      tag_65\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_65:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2071:2103   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2053:2104   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2041:2043   */\n      0x20\n        /* \"#utility.yul\":2026:2044   */\n      add\n        /* \"Contracts/AccessBSC.sol\":406:477  address public deadAddress = 0x000000000000000000000000000000000000dEaD */\n      tag_44\n        /* \"#utility.yul\":1907:2110   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3175:3177  18 */\n      0x12\n        /* \"#utility.yul\":2257:2293   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2245:2247   */\n      0x20\n        /* \"#utility.yul\":2230:2248   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n      tag_44\n        /* \"#utility.yul\":2115:2299   */\n      jump\n        /* \"Contracts/AccessBSC.sol\":2888:2996  function endSale () external onlyOwner{... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_47\n      tag_79\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"Contracts/AccessBSC.sol\":708:745  uint256 public privateLimit = 1000000 */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_54\n      sload(0x0f)\n      dup2\n      jump\n        /* \"Contracts/AccessBSC.sol\":2505:2670  function viewSale() public view returns(uint256 StartBlock, uint256 EndBlock, uint256 SaleCount, uint256 SalePrice){... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n        /* \"Contracts/AccessBSC.sol\":2633:2640  sSBlock */\n      sload(0x08)\n        /* \"Contracts/AccessBSC.sol\":2642:2649  sEBlock */\n      sload(0x09)\n        /* \"Contracts/AccessBSC.sol\":2651:2655  sTot */\n      sload(0x0a)\n        /* \"Contracts/AccessBSC.sol\":2658:2664  sPrice */\n      sload(0x0b)\n        /* \"Contracts/AccessBSC.sol\":2505:2670  function viewSale() public view returns(uint256 StartBlock, uint256 EndBlock, uint256 SaleCount, uint256 SalePrice){... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2535:2560   */\n      swap5\n      dup6\n      mstore\n        /* \"#utility.yul\":2591:2593   */\n      0x20\n        /* \"#utility.yul\":2576:2594   */\n      dup6\n      add\n        /* \"#utility.yul\":2569:2603   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":2619:2637   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":2612:2646   */\n      mstore\n        /* \"#utility.yul\":2677:2679   */\n      0x60\n        /* \"#utility.yul\":2662:2680   */\n      dup3\n      add\n        /* \"#utility.yul\":2655:2689   */\n      mstore\n        /* \"#utility.yul\":2522:2525   */\n      0x80\n        /* \"#utility.yul\":2507:2526   */\n      add\n        /* \"Contracts/AccessBSC.sol\":2505:2670  function viewSale() public view returns(uint256 StartBlock, uint256 EndBlock, uint256 SaleCount, uint256 SalePrice){... */\n      tag_44\n        /* \"#utility.yul\":2304:2695   */\n      jump\n        /* \"Contracts/AccessBSC.sol\":3237:3399  function setPrivateLimit(uint256 _limit) external onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_75\n      tag_93\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n        /* \"Contracts/AccessBSC.sol\":294:315  address public Bridge */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      sload(0x06)\n      tag_65\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"Contracts/AccessBSC.sol\":633:663  uint256 public max = 20 * Path */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_54\n      sload(0x0d)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_54\n      tag_106\n      calldatasize\n      0x04\n      tag_107\n      jump\t// in\n    tag_106:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3489  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"Contracts/AccessBSC.sol\":4399:4528  function setBridge (address payable newBridge) external onlyOwner{... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_75\n      tag_112\n      calldatasize\n      0x04\n      tag_107\n      jump\t// in\n    tag_112:\n      tag_114\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_42\n      tag_117\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_47\n      tag_121\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_121:\n      tag_122\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      tag_47\n      tag_126\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n        /* \"Contracts/AccessBSC.sol\":4049:4395  function withdrawalBNB(uint256 _amount, uint256 decimal, address to) external onlyOwner() {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      tag_75\n      tag_131\n      calldatasize\n      0x04\n      tag_132\n      jump\t// in\n    tag_131:\n      tag_133\n      jump\t// in\n        /* \"Contracts/AccessBSC.sol\":3541:3905  function withdrawalToken(address _tokenAddr, uint256 _amount, uint256 decimal, address to) external onlyOwner() {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      tag_75\n      tag_136\n      calldatasize\n      0x04\n      tag_137\n      jump\t// in\n    tag_136:\n      tag_138\n      jump\t// in\n        /* \"Contracts/AccessBSC.sol\":751:794  uint256 public maxSupply = 500000000 * Path */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_54\n      sload(0x10)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      tag_54\n      tag_145\n      calldatasize\n      0x04\n      tag_146\n      jump\t// in\n    tag_145:\n      tag_147\n      jump\t// in\n        /* \"Contracts/AccessBSC.sol\":590:627  uint256 public Path = 10** decimals() */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      tag_54\n      sload(0x0c)\n      dup2\n      jump\n        /* \"Contracts/AccessBSC.sol\":3000:3233  function changeMinMaxPrivateSale(uint256 minAmount, uint256 maxAmount) external onlyOwner {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      tag_75\n      tag_155\n      calldatasize\n      0x04\n      tag_156\n      jump\t// in\n    tag_155:\n      tag_157\n      jump\t// in\n        /* \"Contracts/AccessBSC.sol\":321:400  address public constant theCompany = 0xc6e5347D1A5FE685160429705E9e26bD3BBa8fEa */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n      pop\n      tag_65\n        /* \"Contracts/AccessBSC.sol\":358:400  0xc6e5347D1A5FE685160429705E9e26bD3BBa8fEa */\n      0xc6e5347d1a5fe685160429705e9e26bd3bba8fea\n        /* \"Contracts/AccessBSC.sol\":321:400  address public constant theCompany = 0xc6e5347D1A5FE685160429705E9e26bD3BBa8fEa */\n      dup2\n      jump\n        /* \"Contracts/AccessBSC.sol\":1897:2501  function privateSale(address) external payable returns (bool success){... */\n    tag_28:\n      tag_47\n      tag_163\n      calldatasize\n      0x04\n      tag_107\n      jump\t// in\n    tag_163:\n      tag_164\n      jump\t// in\n        /* \"Contracts/AccessBSC.sol\":1688:1892  function transferOwnership(address _newOwner) external onlyOwner{... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n      pop\n      tag_75\n      tag_168\n      calldatasize\n      0x04\n      tag_107\n      jump\t// in\n    tag_168:\n      tag_169\n      jump\t// in\n        /* \"Contracts/AccessBSC.sol\":2676:2882  function startSale(uint256 _sEBlock, uint256 _sPrice) external onlyOwner{... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n      pop\n      tag_75\n      tag_172\n      calldatasize\n      0x04\n      tag_156\n      jump\t// in\n    tag_172:\n      tag_173\n      jump\t// in\n        /* \"Contracts/AccessBSC.sol\":669:702  uint256 public min = max.div(100) */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_174\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_174:\n      pop\n      tag_54\n      sload(0x0e)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2210:2223  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2242:2247  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2235:2247  return _name */\n      dup1\n      sload\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_183\n      swap1\n      tag_182\n      jump\t// in\n    tag_183:\n      dup1\n      iszero\n      tag_184\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_185\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_184)\n    tag_185:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_186:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_186\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_184:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4516:4520  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      tag_190\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4586:4593  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4595:4601  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4578  _approve */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4619:4623  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4612:4623  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_187:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5319:5323  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5391:5395  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5406:5412  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5390  _spendAllowance */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5433:5437  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5439:5441  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5443:5449  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5432  _transfer */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      jump\t// in\n    tag_197:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5467:5471  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/AccessBSC.sol\":2888:2996  function endSale () external onlyOwner{... */\n    tag_76:\n        /* \"Contracts/AccessBSC.sol\":1362:1367  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"Contracts/AccessBSC.sol\":1348:1358  msg.sender */\n      caller\n        /* \"Contracts/AccessBSC.sol\":1348:1367  msg.sender == owner */\n      eq\n        /* \"Contracts/AccessBSC.sol\":1340:1388  require(msg.sender == owner, \"caller not owner\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"Contracts/AccessBSC.sol\":2942:2954  block.number */\n      number\n        /* \"Contracts/AccessBSC.sol\":2932:2939  sEBlock */\n      0x09\n        /* \"Contracts/AccessBSC.sol\":2932:2954  sEBlock = block.number */\n      sstore\n        /* \"Contracts/AccessBSC.sol\":2965:2991  saleEnded(block.timestamp) */\n      mload(0x40)\n        /* \"Contracts/AccessBSC.sol\":2975:2990  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":1410:1435   */\n      dup2\n      mstore\n        /* \"Contracts/AccessBSC.sol\":2965:2991  saleEnded(block.timestamp) */\n      0xb144be0f16f8d30f2e18ef8f7938d5e90207932d96650e592ff47725716818fb\n      swap1\n        /* \"#utility.yul\":1398:1400   */\n      0x20\n        /* \"#utility.yul\":1383:1401   */\n      add\n        /* \"Contracts/AccessBSC.sol\":2965:2991  saleEnded(block.timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Contracts/AccessBSC.sol\":2888:2996  function endSale () external onlyOwner{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5961:5965  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_190\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6031:6038  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6068:6078  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6065  allowance(owner, spender) */\n      tag_209\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6031:6038  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6049  allowance */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6065  allowance(owner, spender) */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6078  allowance(owner, spender) + addedValue */\n      tag_210\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6023  _approve */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"Contracts/AccessBSC.sol\":3237:3399  function setPrivateLimit(uint256 _limit) external onlyOwner {... */\n    tag_95:\n        /* \"Contracts/AccessBSC.sol\":1362:1367  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"Contracts/AccessBSC.sol\":1348:1358  msg.sender */\n      caller\n        /* \"Contracts/AccessBSC.sol\":1348:1367  msg.sender == owner */\n      eq\n        /* \"Contracts/AccessBSC.sol\":1340:1388  require(msg.sender == owner, \"caller not owner\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_214:\n        /* \"Contracts/AccessBSC.sol\":3313:3319  _limit */\n      dup1\n        /* \"Contracts/AccessBSC.sol\":3322:3323  0 */\n      0x00\n        /* \"Contracts/AccessBSC.sol\":3313:3323  _limit !=0 */\n      sub\n        /* \"Contracts/AccessBSC.sol\":3305:3332  require(_limit !=0,\"Zero!\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_219\n      jump\t// in\n    tag_217:\n        /* \"Contracts/AccessBSC.sol\":3340:3352  privateLimit */\n      0x0f\n        /* \"Contracts/AccessBSC.sol\":3340:3361  privateLimit = _limit */\n      dup2\n      swap1\n      sstore\n        /* \"Contracts/AccessBSC.sol\":3374:3394  PrivateLimit(_limit) */\n      mload(0x40)\n        /* \"#utility.yul\":1410:1435   */\n      dup2\n      dup2\n      mstore\n        /* \"Contracts/AccessBSC.sol\":3374:3394  PrivateLimit(_limit) */\n      0x6d487f3988610155b3a9ef590f8ac170134d24e6505b9ddd3160e34abaa0edaf\n      swap1\n        /* \"#utility.yul\":1398:1400   */\n      0x20\n        /* \"#utility.yul\":1383:1401   */\n      add\n        /* \"Contracts/AccessBSC.sol\":3374:3394  PrivateLimit(_limit) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Contracts/AccessBSC.sol\":3237:3399  function setPrivateLimit(uint256 _limit) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Contracts/AccessBSC.sol\":4399:4528  function setBridge (address payable newBridge) external onlyOwner{... */\n    tag_114:\n        /* \"Contracts/AccessBSC.sol\":1362:1367  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"Contracts/AccessBSC.sol\":1348:1358  msg.sender */\n      caller\n        /* \"Contracts/AccessBSC.sol\":1348:1367  msg.sender == owner */\n      eq\n        /* \"Contracts/AccessBSC.sol\":1340:1388  require(msg.sender == owner, \"caller not owner\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_223:\n        /* \"Contracts/AccessBSC.sol\":4477:4497  SetBridge(newBridge) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2071:2103   */\n      dup3\n      and\n        /* \"#utility.yul\":2053:2104   */\n      dup2\n      mstore\n        /* \"Contracts/AccessBSC.sol\":4477:4497  SetBridge(newBridge) */\n      0xe605ac02ea219003ec58fc9cf4d4b3c5f2d62ec39807b1c63886ddd47a6fcd6e\n      swap1\n        /* \"#utility.yul\":2041:2043   */\n      0x20\n        /* \"#utility.yul\":2026:2044   */\n      add\n        /* \"Contracts/AccessBSC.sol\":4477:4497  SetBridge(newBridge) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Contracts/AccessBSC.sol\":4505:4511  Bridge */\n      0x06\n        /* \"Contracts/AccessBSC.sol\":4505:4523  Bridge = newBridge */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Contracts/AccessBSC.sol\":4399:4528  function setBridge (address payable newBridge) external onlyOwner{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2423:2436  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2455:2462  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2448:2462  return _symbol */\n      dup1\n      sload\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6768:6793  allowance(owner, spender) */\n      tag_236\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6785:6792  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6768:6777  allowance */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6768:6793  allowance(owner, spender) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6741:6793  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6831:6846  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6811:6827  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6811:6846  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6707:6709   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6689:6710   */\n      mstore\n        /* \"#utility.yul\":6746:6748   */\n      0x25\n        /* \"#utility.yul\":6726:6744   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6719:6749   */\n      mstore\n        /* \"#utility.yul\":6785:6819   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":6765:6783   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6758:6820   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":6836:6854   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6829:6864   */\n      mstore\n        /* \"#utility.yul\":6881:6900   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_202\n        /* \"#utility.yul\":6505:6906   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6931:6936  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6938:6945  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6966:6981  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6963  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6981  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6930  _approve */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3808:3812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      tag_190\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3879:3881  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3883:3889  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3871  _transfer */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"Contracts/AccessBSC.sol\":4049:4395  function withdrawalBNB(uint256 _amount, uint256 decimal, address to) external onlyOwner() {... */\n    tag_133:\n        /* \"Contracts/AccessBSC.sol\":1362:1367  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"Contracts/AccessBSC.sol\":1348:1358  msg.sender */\n      caller\n        /* \"Contracts/AccessBSC.sol\":1348:1367  msg.sender == owner */\n      eq\n        /* \"Contracts/AccessBSC.sol\":1340:1388  require(msg.sender == owner, \"caller not owner\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_245:\n        /* \"Contracts/AccessBSC.sol\":4182:4189  _amount */\n      dup3\n        /* \"Contracts/AccessBSC.sol\":4157:4178  address(this).balance */\n      selfbalance\n        /* \"Contracts/AccessBSC.sol\":4157:4189  address(this).balance >= _amount */\n      lt\n      iszero\n        /* \"Contracts/AccessBSC.sol\":4149:4200  require(address(this).balance >= _amount,\"No BNB!\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7113:7115   */\n      0x20\n        /* \"Contracts/AccessBSC.sol\":4149:4200  require(address(this).balance >= _amount,\"No BNB!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7095:7116   */\n      mstore\n        /* \"#utility.yul\":7152:7153   */\n      0x07\n        /* \"#utility.yul\":7132:7150   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7125:7154   */\n      mstore\n      shl(0xc8, 0x4e6f20424e4221)\n        /* \"#utility.yul\":7170:7188   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7163:7200   */\n      mstore\n        /* \"#utility.yul\":7217:7235   */\n      0x64\n      add\n        /* \"Contracts/AccessBSC.sol\":4149:4200  require(address(this).balance >= _amount,\"No BNB!\") */\n      tag_202\n        /* \"#utility.yul\":6911:7241   */\n      jump\n        /* \"Contracts/AccessBSC.sol\":4149:4200  require(address(this).balance >= _amount,\"No BNB!\") */\n    tag_248:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/AccessBSC.sol\":4218:4234  to != address(0) */\n      dup2\n      and\n        /* \"Contracts/AccessBSC.sol\":4210:4250  require(to != address(0),\"Zero address\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7448:7450   */\n      0x20\n        /* \"Contracts/AccessBSC.sol\":4210:4250  require(to != address(0),\"Zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7430:7451   */\n      mstore\n        /* \"#utility.yul\":7487:7489   */\n      0x0c\n        /* \"#utility.yul\":7467:7485   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7460:7490   */\n      mstore\n      shl(0xa0, 0x5a65726f2061646472657373)\n        /* \"#utility.yul\":7506:7524   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7499:7541   */\n      mstore\n        /* \"#utility.yul\":7558:7576   */\n      0x64\n      add\n        /* \"Contracts/AccessBSC.sol\":4210:4250  require(to != address(0),\"Zero address\") */\n      tag_202\n        /* \"#utility.yul\":7246:7582   */\n      jump\n        /* \"Contracts/AccessBSC.sol\":4210:4250  require(to != address(0),\"Zero address\") */\n    tag_251:\n        /* \"Contracts/AccessBSC.sol\":4260:4272  uint256 dcml */\n      0x00\n        /* \"Contracts/AccessBSC.sol\":4275:4288  10 ** decimal */\n      tag_254\n        /* \"Contracts/AccessBSC.sol\":4281:4288  decimal */\n      dup4\n        /* \"Contracts/AccessBSC.sol\":4275:4277  10 */\n      0x0a\n        /* \"Contracts/AccessBSC.sol\":4275:4288  10 ** decimal */\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"Contracts/AccessBSC.sol\":4303:4338  WithdrawalBNB(_amount, decimal, to) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9163:9188   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":9219:9221   */\n      0x20\n        /* \"#utility.yul\":9204:9222   */\n      dup2\n      add\n        /* \"#utility.yul\":9197:9231   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9267:9299   */\n      dup6\n      and\n        /* \"#utility.yul\":9247:9265   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":9240:9300   */\n      mstore\n        /* \"Contracts/AccessBSC.sol\":4303:4338  WithdrawalBNB(_amount, decimal, to) */\n      swap1\n      mload\n        /* \"Contracts/AccessBSC.sol\":4260:4288  uint256 dcml = 10 ** decimal */\n      swap2\n      swap3\n      pop\n        /* \"Contracts/AccessBSC.sol\":4303:4338  WithdrawalBNB(_amount, decimal, to) */\n      0x4508977418b95bac209196e03356692c2d8f47957dec1c15af1a44cc40d39a04\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":9151:9153   */\n      0x60\n        /* \"Contracts/AccessBSC.sol\":4303:4338  WithdrawalBNB(_amount, decimal, to) */\n      add\n      swap1\n      log1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/AccessBSC.sol\":4348:4368  payable(to).transfer */\n      dup3\n      and\n        /* \"Contracts/AccessBSC.sol\":4348:4382  payable(to).transfer(_amount*dcml) */\n      0x08fc\n        /* \"Contracts/AccessBSC.sol\":4369:4381  _amount*dcml */\n      tag_258\n        /* \"Contracts/AccessBSC.sol\":4377:4381  dcml */\n      dup4\n        /* \"Contracts/AccessBSC.sol\":4369:4376  _amount */\n      dup8\n        /* \"Contracts/AccessBSC.sol\":4369:4381  _amount*dcml */\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"Contracts/AccessBSC.sol\":4348:4382  payable(to).transfer(_amount*dcml) */\n      mload(0x40)\n      dup2\n      iszero\n      swap1\n      swap3\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_261\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_261:\n      pop\n        /* \"Contracts/AccessBSC.sol\":4139:4395  {... */\n      pop\n        /* \"Contracts/AccessBSC.sol\":4049:4395  function withdrawalBNB(uint256 _amount, uint256 decimal, address to) external onlyOwner() {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/AccessBSC.sol\":3541:3905  function withdrawalToken(address _tokenAddr, uint256 _amount, uint256 decimal, address to) external onlyOwner() {... */\n    tag_138:\n        /* \"Contracts/AccessBSC.sol\":1362:1367  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"Contracts/AccessBSC.sol\":1348:1358  msg.sender */\n      caller\n        /* \"Contracts/AccessBSC.sol\":1348:1367  msg.sender == owner */\n      eq\n        /* \"Contracts/AccessBSC.sol\":1340:1388  require(msg.sender == owner, \"caller not owner\") */\n      tag_263\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_263:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/AccessBSC.sol\":3671:3695  _tokenAddr != address(0) */\n      dup5\n      and\n        /* \"Contracts/AccessBSC.sol\":3663:3712  require(_tokenAddr != address(0),\"address zero!\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9686:9688   */\n      0x20\n        /* \"Contracts/AccessBSC.sol\":3663:3712  require(_tokenAddr != address(0),\"address zero!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9668:9689   */\n      mstore\n        /* \"#utility.yul\":9725:9727   */\n      0x0d\n        /* \"#utility.yul\":9705:9723   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9698:9728   */\n      mstore\n      shl(0x98, 0x61646472657373207a65726f21)\n        /* \"#utility.yul\":9744:9762   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9737:9780   */\n      mstore\n        /* \"#utility.yul\":9797:9815   */\n      0x64\n      add\n        /* \"Contracts/AccessBSC.sol\":3663:3712  require(_tokenAddr != address(0),\"address zero!\") */\n      tag_202\n        /* \"#utility.yul\":9484:9821   */\n      jump\n        /* \"Contracts/AccessBSC.sol\":3663:3712  require(_tokenAddr != address(0),\"address zero!\") */\n    tag_266:\n        /* \"Contracts/AccessBSC.sol\":3722:3734  uint256 dcml */\n      0x00\n        /* \"Contracts/AccessBSC.sol\":3737:3750  10 ** decimal */\n      tag_269\n        /* \"Contracts/AccessBSC.sol\":3743:3750  decimal */\n      dup4\n        /* \"Contracts/AccessBSC.sol\":3737:3739  10 */\n      0x0a\n        /* \"Contracts/AccessBSC.sol\":3737:3750  10 ** decimal */\n      tag_255\n      jump\t// in\n    tag_269:\n        /* \"Contracts/AccessBSC.sol\":3806:3855  WithdrawalToken(_tokenAddr, _amount, decimal, to) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10113:10128   */\n      dup9\n      dup2\n      and\n        /* \"#utility.yul\":10095:10129   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10160:10162   */\n      0x20\n        /* \"#utility.yul\":10145:10163   */\n      dup3\n      add\n        /* \"#utility.yul\":10138:10172   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":10188:10206   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":10181:10215   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":10251:10266   */\n      dup6\n      and\n        /* \"#utility.yul\":10246:10248   */\n      0x60\n        /* \"#utility.yul\":10231:10249   */\n      dup3\n      add\n        /* \"#utility.yul\":10224:10267   */\n      mstore\n        /* \"Contracts/AccessBSC.sol\":3806:3855  WithdrawalToken(_tokenAddr, _amount, decimal, to) */\n      swap1\n      mload\n        /* \"Contracts/AccessBSC.sol\":3722:3750  uint256 dcml = 10 ** decimal */\n      swap2\n      swap3\n      pop\n        /* \"#utility.yul\":10113:10128   */\n      dup7\n      swap2\n        /* \"Contracts/AccessBSC.sol\":3806:3855  WithdrawalToken(_tokenAddr, _amount, decimal, to) */\n      0x0206ca7f97d46974ed97b981f879b17e9e1fe17ead63770c806926d28aa5cbd5\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":10044:10047   */\n      0x80\n        /* \"Contracts/AccessBSC.sol\":3806:3855  WithdrawalToken(_tokenAddr, _amount, decimal, to) */\n      add\n      swap1\n      log1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/AccessBSC.sol\":3865:3879  token.transfer */\n      dup2\n      and\n      0xa9059cbb\n        /* \"Contracts/AccessBSC.sol\":3880:3882  to */\n      dup5\n        /* \"Contracts/AccessBSC.sol\":3884:3896  _amount*dcml */\n      tag_272\n        /* \"Contracts/AccessBSC.sol\":3892:3896  dcml */\n      dup6\n        /* \"Contracts/AccessBSC.sol\":3884:3891  _amount */\n      dup10\n        /* \"Contracts/AccessBSC.sol\":3884:3896  _amount*dcml */\n      tag_259\n      jump\t// in\n    tag_272:\n        /* \"Contracts/AccessBSC.sol\":3865:3897  token.transfer(to, _amount*dcml) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10470:10502   */\n      swap1\n      swap3\n      and\n        /* \"Contracts/AccessBSC.sol\":3865:3897  token.transfer(to, _amount*dcml) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":10452:10503   */\n      mstore\n        /* \"#utility.yul\":10519:10537   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10512:10546   */\n      mstore\n        /* \"#utility.yul\":10425:10443   */\n      0x44\n      add\n        /* \"Contracts/AccessBSC.sol\":3865:3897  token.transfer(to, _amount*dcml) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_276\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_276:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_277\n      swap2\n      swap1\n      tag_278\n      jump\t// in\n    tag_277:\n      pop\n        /* \"Contracts/AccessBSC.sol\":3653:3905  {... */\n      pop\n      pop\n        /* \"Contracts/AccessBSC.sol\":3541:3905  function withdrawalToken(address _tokenAddr, uint256 _amount, uint256 decimal, address to) external onlyOwner() {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4065:4072  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"Contracts/AccessBSC.sol\":3000:3233  function changeMinMaxPrivateSale(uint256 minAmount, uint256 maxAmount) external onlyOwner {... */\n    tag_157:\n        /* \"Contracts/AccessBSC.sol\":1362:1367  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"Contracts/AccessBSC.sol\":1348:1358  msg.sender */\n      caller\n        /* \"Contracts/AccessBSC.sol\":1348:1367  msg.sender == owner */\n      eq\n        /* \"Contracts/AccessBSC.sol\":1340:1388  require(msg.sender == owner, \"caller not owner\") */\n      tag_281\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_281:\n        /* \"Contracts/AccessBSC.sol\":3106:3120  minAmount != 0 */\n      dup2\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"Contracts/AccessBSC.sol\":3106:3137  minAmount != 0 && maxAmount !=0 */\n      tag_284\n      jumpi\n      pop\n        /* \"Contracts/AccessBSC.sol\":3124:3137  maxAmount !=0 */\n      dup1\n      iszero\n      iszero\n        /* \"Contracts/AccessBSC.sol\":3106:3137  minAmount != 0 && maxAmount !=0 */\n    tag_284:\n        /* \"Contracts/AccessBSC.sol\":3098:3146  require(minAmount != 0 && maxAmount !=0,\"Zero!\") */\n      tag_285\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_219\n      jump\t// in\n    tag_285:\n        /* \"Contracts/AccessBSC.sol\":3154:3157  min */\n      0x0e\n        /* \"Contracts/AccessBSC.sol\":3154:3169  min = minAmount */\n      dup3\n      swap1\n      sstore\n        /* \"Contracts/AccessBSC.sol\":3195:3199  Path */\n      sload(0x0c)\n        /* \"Contracts/AccessBSC.sol\":3183:3199  maxAmount * Path */\n      tag_287\n      swap1\n        /* \"Contracts/AccessBSC.sol\":3183:3192  maxAmount */\n      dup3\n        /* \"Contracts/AccessBSC.sol\":3183:3199  maxAmount * Path */\n      tag_259\n      jump\t// in\n    tag_287:\n        /* \"Contracts/AccessBSC.sol\":3177:3180  max */\n      0x0d\n        /* \"Contracts/AccessBSC.sol\":3177:3199  max = maxAmount * Path */\n      dup2\n      swap1\n      sstore\n        /* \"Contracts/AccessBSC.sol\":3219:3222  min */\n      sload(0x0e)\n        /* \"Contracts/AccessBSC.sol\":3212:3228  minMax(min, max) */\n      mload(0x40)\n      0x3b06ffd21bedfb2c375d7b1bcf74ca4fe1afe205699e39610b3aced7adf6b9e9\n      swap3\n      tag_288\n      swap3\n        /* \"#utility.yul\":11013:11038   */\n      dup3\n      mstore\n        /* \"#utility.yul\":11069:11071   */\n      0x20\n        /* \"#utility.yul\":11054:11072   */\n      dup3\n      add\n        /* \"#utility.yul\":11047:11081   */\n      mstore\n        /* \"#utility.yul\":11001:11003   */\n      0x40\n        /* \"#utility.yul\":10986:11004   */\n      add\n      swap1\n        /* \"#utility.yul\":10839:11087   */\n      jump\n        /* \"Contracts/AccessBSC.sol\":3212:3228  minMax(min, max) */\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Contracts/AccessBSC.sol\":3000:3233  function changeMinMaxPrivateSale(uint256 minAmount, uint256 maxAmount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/AccessBSC.sol\":1897:2501  function privateSale(address) external payable returns (bool success){... */\n    tag_164:\n        /* \"Contracts/AccessBSC.sol\":1953:1965  bool success */\n      0x00\n        /* \"Contracts/AccessBSC.sol\":2029:2033  Path */\n      sload(0x0c)\n        /* \"Contracts/AccessBSC.sol\":2014:2026  privateLimit */\n      sload(0x0f)\n        /* \"Contracts/AccessBSC.sol\":2014:2033  privateLimit * Path */\n      tag_291\n      swap2\n      swap1\n      tag_259\n      jump\t// in\n    tag_291:\n        /* \"Contracts/AccessBSC.sol\":1998:2008  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3489  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Contracts/AccessBSC.sol\":1980:2033  balanceOf(address(msg.sender)) <= privateLimit * Path */\n      gt\n      iszero\n        /* \"Contracts/AccessBSC.sol\":1972:2074  require(balanceOf(address(msg.sender)) <= privateLimit * Path , \"You reached your private sale limit\") */\n      tag_293\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11294:11296   */\n      0x20\n        /* \"Contracts/AccessBSC.sol\":1972:2074  require(balanceOf(address(msg.sender)) <= privateLimit * Path , \"You reached your private sale limit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11276:11297   */\n      mstore\n        /* \"#utility.yul\":11333:11335   */\n      0x23\n        /* \"#utility.yul\":11313:11331   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11306:11336   */\n      mstore\n        /* \"#utility.yul\":11372:11406   */\n      0x596f75207265616368656420796f757220707269766174652073616c65206c69\n        /* \"#utility.yul\":11352:11370   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11345:11407   */\n      mstore\n      shl(0xea, 0x1b5a5d)\n        /* \"#utility.yul\":11423:11441   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11416:11449   */\n      mstore\n        /* \"#utility.yul\":11466:11485   */\n      0x84\n      add\n        /* \"Contracts/AccessBSC.sol\":1972:2074  require(balanceOf(address(msg.sender)) <= privateLimit * Path , \"You reached your private sale limit\") */\n      tag_202\n        /* \"#utility.yul\":11092:11491   */\n      jump\n        /* \"Contracts/AccessBSC.sol\":1972:2074  require(balanceOf(address(msg.sender)) <= privateLimit * Path , \"You reached your private sale limit\") */\n    tag_293:\n        /* \"Contracts/AccessBSC.sol\":2101:2113  block.number */\n      number\n        /* \"Contracts/AccessBSC.sol\":2090:2097  sSBlock */\n      sload(0x08)\n        /* \"Contracts/AccessBSC.sol\":2090:2113  sSBlock <= block.number */\n      gt\n      iszero\n        /* \"Contracts/AccessBSC.sol\":2090:2140  sSBlock <= block.number && block.number <= sEBlock */\n      dup1\n      iszero\n      tag_296\n      jumpi\n      pop\n        /* \"Contracts/AccessBSC.sol\":2133:2140  sEBlock */\n      sload(0x09)\n        /* \"Contracts/AccessBSC.sol\":2117:2129  block.number */\n      number\n        /* \"Contracts/AccessBSC.sol\":2117:2140  block.number <= sEBlock */\n      gt\n      iszero\n        /* \"Contracts/AccessBSC.sol\":2090:2140  sSBlock <= block.number && block.number <= sEBlock */\n    tag_296:\n        /* \"Contracts/AccessBSC.sol\":2082:2188  require(sSBlock <= block.number && block.number <= sEBlock, \"Private Sale has ended or did not start yet\") */\n      tag_297\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11698:11700   */\n      0x20\n        /* \"Contracts/AccessBSC.sol\":2082:2188  require(sSBlock <= block.number && block.number <= sEBlock, \"Private Sale has ended or did not start yet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11680:11701   */\n      mstore\n        /* \"#utility.yul\":11737:11739   */\n      0x2b\n        /* \"#utility.yul\":11717:11735   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11710:11740   */\n      mstore\n        /* \"#utility.yul\":11776:11810   */\n      0x507269766174652053616c652068617320656e646564206f7220646964206e6f\n        /* \"#utility.yul\":11756:11774   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11749:11811   */\n      mstore\n      shl(0xaa, 0x1d081cdd185c9d081e595d)\n        /* \"#utility.yul\":11827:11845   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11820:11861   */\n      mstore\n        /* \"#utility.yul\":11878:11897   */\n      0x84\n      add\n        /* \"Contracts/AccessBSC.sol\":2082:2188  require(sSBlock <= block.number && block.number <= sEBlock, \"Private Sale has ended or did not start yet\") */\n      tag_202\n        /* \"#utility.yul\":11496:11903   */\n      jump\n        /* \"Contracts/AccessBSC.sol\":2082:2188  require(sSBlock <= block.number && block.number <= sEBlock, \"Private Sale has ended or did not start yet\") */\n    tag_297:\n        /* \"Contracts/AccessBSC.sol\":2267:2270  min */\n      sload(0x0e)\n        /* \"Contracts/AccessBSC.sol\":2210:2219  msg.value */\n      callvalue\n      swap1\n        /* \"Contracts/AccessBSC.sol\":2195:2207  uint256 _eth */\n      0x00\n      swap1\n        /* \"Contracts/AccessBSC.sol\":2259:2270  _eth >= min */\n      dup3\n      lt\n      dup1\n      iszero\n      swap1\n        /* \"Contracts/AccessBSC.sol\":2259:2285  _eth >= min && _eth <= max */\n      tag_300\n      jumpi\n      pop\n        /* \"Contracts/AccessBSC.sol\":2282:2285  max */\n      sload(0x0d)\n        /* \"Contracts/AccessBSC.sol\":2274:2278  _eth */\n      dup3\n        /* \"Contracts/AccessBSC.sol\":2274:2285  _eth <= max */\n      gt\n      iszero\n        /* \"Contracts/AccessBSC.sol\":2259:2285  _eth >= min && _eth <= max */\n    tag_300:\n        /* \"Contracts/AccessBSC.sol\":2249:2329  require ( _eth >= min && _eth <= max , \"Less than Minimum or More than Maximum\") */\n      tag_301\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12110:12112   */\n      0x20\n        /* \"Contracts/AccessBSC.sol\":2249:2329  require ( _eth >= min && _eth <= max , \"Less than Minimum or More than Maximum\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12092:12113   */\n      mstore\n        /* \"#utility.yul\":12149:12151   */\n      0x26\n        /* \"#utility.yul\":12129:12147   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12122:12152   */\n      mstore\n        /* \"#utility.yul\":12188:12222   */\n      0x4c657373207468616e204d696e696d756d206f72204d6f7265207468616e204d\n        /* \"#utility.yul\":12168:12186   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12161:12223   */\n      mstore\n      shl(0xd0, 0x6178696d756d)\n        /* \"#utility.yul\":12239:12257   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12232:12268   */\n      mstore\n        /* \"#utility.yul\":12285:12304   */\n      0x84\n      add\n        /* \"Contracts/AccessBSC.sol\":2249:2329  require ( _eth >= min && _eth <= max , \"Less than Minimum or More than Maximum\") */\n      tag_202\n        /* \"#utility.yul\":11908:12310   */\n      jump\n        /* \"Contracts/AccessBSC.sol\":2249:2329  require ( _eth >= min && _eth <= max , \"Less than Minimum or More than Maximum\") */\n    tag_301:\n        /* \"Contracts/AccessBSC.sol\":2343:2374  (sPrice.mul(_eth)).div(1 ether) */\n      tag_304\n        /* \"Contracts/AccessBSC.sol\":2366:2373  1 ether */\n      0x0de0b6b3a7640000\n        /* \"Contracts/AccessBSC.sol\":2344:2360  sPrice.mul(_eth) */\n      tag_305\n        /* \"Contracts/AccessBSC.sol\":2355:2359  _eth */\n      dup5\n        /* \"Contracts/AccessBSC.sol\":2344:2350  sPrice */\n      sload(0x0b)\n        /* \"Contracts/AccessBSC.sol\":2344:2354  sPrice.mul */\n      tag_179\n      swap1\n        /* \"Contracts/AccessBSC.sol\":2344:2360  sPrice.mul(_eth) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_305:\n        /* \"Contracts/AccessBSC.sol\":2343:2365  (sPrice.mul(_eth)).div */\n      swap1\n      tag_178\n        /* \"Contracts/AccessBSC.sol\":2343:2374  (sPrice.mul(_eth)).div(1 ether) */\n      jump\t// in\n    tag_304:\n        /* \"Contracts/AccessBSC.sol\":2380:2384  sTot */\n      0x0a\n        /* \"Contracts/AccessBSC.sol\":2380:2387  sTot ++ */\n      dup1\n      sload\n        /* \"Contracts/AccessBSC.sol\":2335:2374  _tkns = (sPrice.mul(_eth)).div(1 ether) */\n      swap2\n      swap3\n      pop\n        /* \"Contracts/AccessBSC.sol\":2380:2384  sTot */\n      0x00\n        /* \"Contracts/AccessBSC.sol\":2380:2387  sTot ++ */\n      tag_306\n      dup4\n      tag_307\n      jump\t// in\n    tag_306:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"Contracts/AccessBSC.sol\":2398:2441  _transfer(address(this), msg.sender, _tkns) */\n      tag_308\n        /* \"Contracts/AccessBSC.sol\":2416:2420  this */\n      address\n        /* \"Contracts/AccessBSC.sol\":2423:2433  msg.sender */\n      caller\n        /* \"Contracts/AccessBSC.sol\":2435:2440  _tkns */\n      dup4\n        /* \"Contracts/AccessBSC.sol\":2398:2407  _transfer */\n      tag_198\n        /* \"Contracts/AccessBSC.sol\":2398:2441  _transfer(address(this), msg.sender, _tkns) */\n      jump\t// in\n    tag_308:\n        /* \"Contracts/AccessBSC.sol\":2472:2478  sPrice */\n      sload(0x0b)\n        /* \"Contracts/AccessBSC.sol\":2453:2479  PrivateSale(_tkns, sPrice) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":11013:11038   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":11069:11071   */\n      0x20\n        /* \"#utility.yul\":11054:11072   */\n      dup2\n      add\n        /* \"#utility.yul\":11047:11081   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"Contracts/AccessBSC.sol\":2453:2479  PrivateSale(_tkns, sPrice) */\n      0xb887e151dbfcc06b4ce4f67f9bbedaeb16ab224e34c6668858d0310c6d18ffc3\n      swap2\n        /* \"#utility.yul\":10986:11004   */\n      add\n        /* \"Contracts/AccessBSC.sol\":2453:2479  PrivateSale(_tkns, sPrice) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n      pop\n        /* \"Contracts/AccessBSC.sol\":2492:2496  true */\n      0x01\n      swap4\n        /* \"Contracts/AccessBSC.sol\":1897:2501  function privateSale(address) external payable returns (bool success){... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/AccessBSC.sol\":1688:1892  function transferOwnership(address _newOwner) external onlyOwner{... */\n    tag_169:\n        /* \"Contracts/AccessBSC.sol\":1362:1367  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"Contracts/AccessBSC.sol\":1348:1358  msg.sender */\n      caller\n        /* \"Contracts/AccessBSC.sol\":1348:1367  msg.sender == owner */\n      eq\n        /* \"Contracts/AccessBSC.sol\":1340:1388  require(msg.sender == owner, \"caller not owner\") */\n      tag_311\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_311:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/AccessBSC.sol\":1769:1792  _newOwner != address(0) */\n      dup2\n      and\n        /* \"Contracts/AccessBSC.sol\":1761:1808  require(_newOwner != address(0),\"Zero address\") */\n      tag_314\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7448:7450   */\n      0x20\n        /* \"Contracts/AccessBSC.sol\":1761:1808  require(_newOwner != address(0),\"Zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7430:7451   */\n      mstore\n        /* \"#utility.yul\":7487:7489   */\n      0x0c\n        /* \"#utility.yul\":7467:7485   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7460:7490   */\n      mstore\n      shl(0xa0, 0x5a65726f2061646472657373)\n        /* \"#utility.yul\":7506:7524   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7499:7541   */\n      mstore\n        /* \"#utility.yul\":7558:7576   */\n      0x64\n      add\n        /* \"Contracts/AccessBSC.sol\":1761:1808  require(_newOwner != address(0),\"Zero address\") */\n      tag_202\n        /* \"#utility.yul\":7246:7582   */\n      jump\n        /* \"Contracts/AccessBSC.sol\":1761:1808  require(_newOwner != address(0),\"Zero address\") */\n    tag_314:\n        /* \"Contracts/AccessBSC.sol\":1817:1822  owner */\n      0x05\n        /* \"Contracts/AccessBSC.sol\":1817:1834  owner = _newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Contracts/AccessBSC.sol\":1848:1886  OwnershipTransferred(owner, _newOwner) */\n      mload(0x40)\n        /* \"Contracts/AccessBSC.sol\":1817:1834  owner = _newOwner */\n      dup2\n      swap1\n        /* \"Contracts/AccessBSC.sol\":1848:1886  OwnershipTransferred(owner, _newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"Contracts/AccessBSC.sol\":1688:1892  function transferOwnership(address _newOwner) external onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"Contracts/AccessBSC.sol\":2676:2882  function startSale(uint256 _sEBlock, uint256 _sPrice) external onlyOwner{... */\n    tag_173:\n        /* \"Contracts/AccessBSC.sol\":1362:1367  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"Contracts/AccessBSC.sol\":1348:1358  msg.sender */\n      caller\n        /* \"Contracts/AccessBSC.sol\":1348:1367  msg.sender == owner */\n      eq\n        /* \"Contracts/AccessBSC.sol\":1340:1388  require(msg.sender == owner, \"caller not owner\") */\n      tag_317\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_317:\n        /* \"Contracts/AccessBSC.sol\":2762:2775  _sEBlock != 0 */\n      dup2\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"Contracts/AccessBSC.sol\":2762:2790  _sEBlock != 0 && _sPrice !=0 */\n      tag_320\n      jumpi\n      pop\n        /* \"Contracts/AccessBSC.sol\":2779:2790  _sPrice !=0 */\n      dup1\n      iszero\n      iszero\n        /* \"Contracts/AccessBSC.sol\":2762:2790  _sEBlock != 0 && _sPrice !=0 */\n    tag_320:\n        /* \"Contracts/AccessBSC.sol\":2754:2799  require(_sEBlock != 0 && _sPrice !=0,\"Zero!\") */\n      tag_321\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_219\n      jump\t// in\n    tag_321:\n        /* \"Contracts/AccessBSC.sol\":2805:2812  sEBlock */\n      0x09\n        /* \"Contracts/AccessBSC.sol\":2805:2823  sEBlock = _sEBlock */\n      dup3\n      swap1\n      sstore\n        /* \"Contracts/AccessBSC.sol\":2830:2836  sPrice */\n      0x0b\n        /* \"Contracts/AccessBSC.sol\":2830:2845  sPrice =_sPrice */\n      dup2\n      swap1\n      sstore\n        /* \"Contracts/AccessBSC.sol\":2856:2877  saleStarted(_sEBlock) */\n      mload(0x40)\n        /* \"#utility.yul\":1410:1435   */\n      dup3\n      dup2\n      mstore\n        /* \"Contracts/AccessBSC.sol\":2856:2877  saleStarted(_sEBlock) */\n      0x1dc13bd033e49239661ba80e30ae191b1c31c79277b531e88246c7517971b85d\n      swap1\n        /* \"#utility.yul\":1398:1400   */\n      0x20\n        /* \"#utility.yul\":1383:1401   */\n      add\n        /* \"Contracts/AccessBSC.sol\":2856:2877  saleStarted(_sEBlock) */\n      tag_288\n        /* \"#utility.yul\":1264:1441   */\n      jump\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_325\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_326\n      jump\t// in\n    tag_325:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_325\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_259\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10480  function _approve(... */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10241:10260  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_331\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12879:12881   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12861:12882   */\n      mstore\n        /* \"#utility.yul\":12918:12920   */\n      0x24\n        /* \"#utility.yul\":12898:12916   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":12891:12921   */\n      mstore\n        /* \"#utility.yul\":12957:12991   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":12937:12955   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12930:12992   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":13008:13026   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13001:13035   */\n      mstore\n        /* \"#utility.yul\":13052:13071   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_202\n        /* \"#utility.yul\":12677:13077   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_331:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10340  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_334\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13284:13286   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13266:13287   */\n      mstore\n        /* \"#utility.yul\":13323:13325   */\n      0x22\n        /* \"#utility.yul\":13303:13321   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13296:13326   */\n      mstore\n        /* \"#utility.yul\":13362:13396   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":13342:13360   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13335:13397   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":13413:13431   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13406:13438   */\n      mstore\n        /* \"#utility.yul\":13455:13474   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_202\n        /* \"#utility.yul\":13082:13480   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_334:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10408  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10401  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10408  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10417  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10426  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1410:1435   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1383:1401   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10480  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10761:11202  function _spendAllowance(... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10891:10915  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10918:10943  allowance(owner, spender) */\n      tag_339\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10928:10933  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10935:10942  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10918:10927  allowance */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10918:10943  allowance(owner, spender) */\n      jump\t// in\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10891:10943  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10957:10973  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10957:10994  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10953:11196  if (currentAllowance != type(uint256).max) {... */\n      tag_344\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11038:11044  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11018:11034  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11018:11044  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_341\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13687:13689   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13669:13690   */\n      mstore\n        /* \"#utility.yul\":13726:13728   */\n      0x1d\n        /* \"#utility.yul\":13706:13724   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13699:13729   */\n      mstore\n        /* \"#utility.yul\":13765:13796   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":13745:13763   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13738:13797   */\n      mstore\n        /* \"#utility.yul\":13814:13832   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_202\n        /* \"#utility.yul\":13485:13838   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11171  _approve(owner, spender, currentAllowance - amount) */\n      tag_344\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11129:11134  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11136:11143  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11164:11170  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11145:11161  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11145:11170  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11128  _approve */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11171  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_344:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11202  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10761:11202  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7475:8126  function _transfer(... */\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7619  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_346\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14045:14047   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14027:14048   */\n      mstore\n        /* \"#utility.yul\":14084:14086   */\n      0x25\n        /* \"#utility.yul\":14064:14082   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14057:14087   */\n      mstore\n        /* \"#utility.yul\":14123:14157   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":14103:14121   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14096:14158   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":14174:14192   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14167:14202   */\n      mstore\n        /* \"#utility.yul\":14219:14238   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_202\n        /* \"#utility.yul\":13843:14244   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_346:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7679:7695  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_349\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14451:14453   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14433:14454   */\n      mstore\n        /* \"#utility.yul\":14490:14492   */\n      0x23\n        /* \"#utility.yul\":14470:14488   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14463:14493   */\n      mstore\n        /* \"#utility.yul\":14529:14563   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":14509:14527   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14502:14564   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":14580:14598   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14573:14606   */\n      mstore\n        /* \"#utility.yul\":14623:14642   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_202\n        /* \"#utility.yul\":14249:14648   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_349:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7817:7832  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7795:7814  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7817:7832  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7850:7871  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_354\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14855:14857   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14837:14858   */\n      mstore\n        /* \"#utility.yul\":14894:14896   */\n      0x26\n        /* \"#utility.yul\":14874:14892   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14867:14897   */\n      mstore\n        /* \"#utility.yul\":14933:14967   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":14913:14931   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14906:14968   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":14984:15002   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14977:15013   */\n      mstore\n        /* \"#utility.yul\":15030:15049   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_202\n        /* \"#utility.yul\":14653:15055   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_354:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7963  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7957  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7963  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7966:7986  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7986  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8019  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7980:7986  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7957  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      tag_357\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7980:7986  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      tag_211\n      jump\t// in\n    tag_357:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8060:8062  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8058  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8064:8070  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_358\n      swap2\n        /* \"#utility.yul\":1410:1435   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1398:1400   */\n      0x20\n        /* \"#utility.yul\":1383:1401   */\n      add\n      swap1\n        /* \"#utility.yul\":1264:1441   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n    tag_358:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8082:8119  _afterTokenTransfer(from, to, amount) */\n      tag_344\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11786:11907  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:611   */\n    tag_45:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_369:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_369)\n    tag_371:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_372:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:747   */\n    tag_363:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":691:722   */\n      dup2\n      and\n        /* \"#utility.yul\":681:723   */\n      dup2\n      eq\n        /* \"#utility.yul\":671:741   */\n      tag_374\n      jumpi\n        /* \"#utility.yul\":737:738   */\n      0x00\n        /* \"#utility.yul\":734:735   */\n      dup1\n        /* \"#utility.yul\":727:739   */\n      revert\n        /* \"#utility.yul\":671:741   */\n    tag_374:\n        /* \"#utility.yul\":616:747   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":752:1067   */\n    tag_49:\n        /* \"#utility.yul\":820:826   */\n      0x00\n        /* \"#utility.yul\":828:834   */\n      dup1\n        /* \"#utility.yul\":881:883   */\n      0x40\n        /* \"#utility.yul\":869:878   */\n      dup4\n        /* \"#utility.yul\":860:867   */\n      dup6\n        /* \"#utility.yul\":856:879   */\n      sub\n        /* \"#utility.yul\":852:884   */\n      slt\n        /* \"#utility.yul\":849:901   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":897:898   */\n      0x00\n        /* \"#utility.yul\":894:895   */\n      dup1\n        /* \"#utility.yul\":887:899   */\n      revert\n        /* \"#utility.yul\":849:901   */\n    tag_376:\n        /* \"#utility.yul\":936:945   */\n      dup3\n        /* \"#utility.yul\":923:946   */\n      calldataload\n        /* \"#utility.yul\":955:986   */\n      tag_377\n        /* \"#utility.yul\":980:985   */\n      dup2\n        /* \"#utility.yul\":955:986   */\n      tag_363\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":1005:1010   */\n      swap5\n        /* \"#utility.yul\":1057:1059   */\n      0x20\n        /* \"#utility.yul\":1042:1060   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1029:1061   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":752:1067   */\n      jump\t// out\n        /* \"#utility.yul\":1446:1902   */\n    tag_61:\n        /* \"#utility.yul\":1523:1529   */\n      0x00\n        /* \"#utility.yul\":1531:1537   */\n      dup1\n        /* \"#utility.yul\":1539:1545   */\n      0x00\n        /* \"#utility.yul\":1592:1594   */\n      0x60\n        /* \"#utility.yul\":1580:1589   */\n      dup5\n        /* \"#utility.yul\":1571:1578   */\n      dup7\n        /* \"#utility.yul\":1567:1590   */\n      sub\n        /* \"#utility.yul\":1563:1595   */\n      slt\n        /* \"#utility.yul\":1560:1612   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":1608:1609   */\n      0x00\n        /* \"#utility.yul\":1605:1606   */\n      dup1\n        /* \"#utility.yul\":1598:1610   */\n      revert\n        /* \"#utility.yul\":1560:1612   */\n    tag_381:\n        /* \"#utility.yul\":1647:1656   */\n      dup4\n        /* \"#utility.yul\":1634:1657   */\n      calldataload\n        /* \"#utility.yul\":1666:1697   */\n      tag_382\n        /* \"#utility.yul\":1691:1696   */\n      dup2\n        /* \"#utility.yul\":1666:1697   */\n      tag_363\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":1716:1721   */\n      swap3\n      pop\n        /* \"#utility.yul\":1773:1775   */\n      0x20\n        /* \"#utility.yul\":1758:1776   */\n      dup5\n      add\n        /* \"#utility.yul\":1745:1777   */\n      calldataload\n        /* \"#utility.yul\":1786:1819   */\n      tag_383\n        /* \"#utility.yul\":1745:1777   */\n      dup2\n        /* \"#utility.yul\":1786:1819   */\n      tag_363\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":1446:1902   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1838:1845   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1892:1894   */\n      0x40\n        /* \"#utility.yul\":1877:1895   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1864:1896   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1446:1902   */\n      jump\t// out\n        /* \"#utility.yul\":2700:2880   */\n    tag_94:\n        /* \"#utility.yul\":2759:2765   */\n      0x00\n        /* \"#utility.yul\":2812:2814   */\n      0x20\n        /* \"#utility.yul\":2800:2809   */\n      dup3\n        /* \"#utility.yul\":2791:2798   */\n      dup5\n        /* \"#utility.yul\":2787:2810   */\n      sub\n        /* \"#utility.yul\":2783:2815   */\n      slt\n        /* \"#utility.yul\":2780:2832   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":2828:2829   */\n      0x00\n        /* \"#utility.yul\":2825:2826   */\n      dup1\n        /* \"#utility.yul\":2818:2830   */\n      revert\n        /* \"#utility.yul\":2780:2832   */\n    tag_388:\n      pop\n        /* \"#utility.yul\":2851:2874   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2700:2880   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2885:3132   */\n    tag_107:\n        /* \"#utility.yul\":2944:2950   */\n      0x00\n        /* \"#utility.yul\":2997:2999   */\n      0x20\n        /* \"#utility.yul\":2985:2994   */\n      dup3\n        /* \"#utility.yul\":2976:2983   */\n      dup5\n        /* \"#utility.yul\":2972:2995   */\n      sub\n        /* \"#utility.yul\":2968:3000   */\n      slt\n        /* \"#utility.yul\":2965:3017   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":3013:3014   */\n      0x00\n        /* \"#utility.yul\":3010:3011   */\n      dup1\n        /* \"#utility.yul\":3003:3015   */\n      revert\n        /* \"#utility.yul\":2965:3017   */\n    tag_390:\n        /* \"#utility.yul\":3052:3061   */\n      dup2\n        /* \"#utility.yul\":3039:3062   */\n      calldataload\n        /* \"#utility.yul\":3071:3102   */\n      tag_325\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3071:3102   */\n      tag_363\n      jump\t// in\n        /* \"#utility.yul\":3397:3780   */\n    tag_132:\n        /* \"#utility.yul\":3474:3480   */\n      0x00\n        /* \"#utility.yul\":3482:3488   */\n      dup1\n        /* \"#utility.yul\":3490:3496   */\n      0x00\n        /* \"#utility.yul\":3543:3545   */\n      0x60\n        /* \"#utility.yul\":3531:3540   */\n      dup5\n        /* \"#utility.yul\":3522:3529   */\n      dup7\n        /* \"#utility.yul\":3518:3541   */\n      sub\n        /* \"#utility.yul\":3514:3546   */\n      slt\n        /* \"#utility.yul\":3511:3563   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":3559:3560   */\n      0x00\n        /* \"#utility.yul\":3556:3557   */\n      dup1\n        /* \"#utility.yul\":3549:3561   */\n      revert\n        /* \"#utility.yul\":3511:3563   */\n    tag_396:\n        /* \"#utility.yul\":3595:3604   */\n      dup4\n        /* \"#utility.yul\":3582:3605   */\n      calldataload\n        /* \"#utility.yul\":3572:3605   */\n      swap3\n      pop\n        /* \"#utility.yul\":3652:3654   */\n      0x20\n        /* \"#utility.yul\":3641:3650   */\n      dup5\n        /* \"#utility.yul\":3637:3655   */\n      add\n        /* \"#utility.yul\":3624:3656   */\n      calldataload\n        /* \"#utility.yul\":3614:3656   */\n      swap2\n      pop\n        /* \"#utility.yul\":3706:3708   */\n      0x40\n        /* \"#utility.yul\":3695:3704   */\n      dup5\n        /* \"#utility.yul\":3691:3709   */\n      add\n        /* \"#utility.yul\":3678:3710   */\n      calldataload\n        /* \"#utility.yul\":3719:3750   */\n      tag_397\n        /* \"#utility.yul\":3744:3749   */\n      dup2\n        /* \"#utility.yul\":3719:3750   */\n      tag_363\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":3769:3774   */\n      dup1\n        /* \"#utility.yul\":3759:3774   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3397:3780   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3785:4310   */\n    tag_137:\n        /* \"#utility.yul\":3871:3877   */\n      0x00\n        /* \"#utility.yul\":3879:3885   */\n      dup1\n        /* \"#utility.yul\":3887:3893   */\n      0x00\n        /* \"#utility.yul\":3895:3901   */\n      dup1\n        /* \"#utility.yul\":3948:3951   */\n      0x80\n        /* \"#utility.yul\":3936:3945   */\n      dup6\n        /* \"#utility.yul\":3927:3934   */\n      dup8\n        /* \"#utility.yul\":3923:3946   */\n      sub\n        /* \"#utility.yul\":3919:3952   */\n      slt\n        /* \"#utility.yul\":3916:3969   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":3965:3966   */\n      0x00\n        /* \"#utility.yul\":3962:3963   */\n      dup1\n        /* \"#utility.yul\":3955:3967   */\n      revert\n        /* \"#utility.yul\":3916:3969   */\n    tag_399:\n        /* \"#utility.yul\":4004:4013   */\n      dup5\n        /* \"#utility.yul\":3991:4014   */\n      calldataload\n        /* \"#utility.yul\":4023:4054   */\n      tag_400\n        /* \"#utility.yul\":4048:4053   */\n      dup2\n        /* \"#utility.yul\":4023:4054   */\n      tag_363\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":4073:4078   */\n      swap4\n      pop\n        /* \"#utility.yul\":4125:4127   */\n      0x20\n        /* \"#utility.yul\":4110:4128   */\n      dup6\n      add\n        /* \"#utility.yul\":4097:4129   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":4176:4178   */\n      0x40\n        /* \"#utility.yul\":4161:4179   */\n      dup6\n      add\n        /* \"#utility.yul\":4148:4180   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":4232:4234   */\n      0x60\n        /* \"#utility.yul\":4217:4235   */\n      dup6\n      add\n        /* \"#utility.yul\":4204:4236   */\n      calldataload\n        /* \"#utility.yul\":4245:4278   */\n      tag_401\n        /* \"#utility.yul\":4204:4236   */\n      dup2\n        /* \"#utility.yul\":4245:4278   */\n      tag_363\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":3785:4310   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4315:4703   */\n    tag_146:\n        /* \"#utility.yul\":4383:4389   */\n      0x00\n        /* \"#utility.yul\":4391:4397   */\n      dup1\n        /* \"#utility.yul\":4444:4446   */\n      0x40\n        /* \"#utility.yul\":4432:4441   */\n      dup4\n        /* \"#utility.yul\":4423:4430   */\n      dup6\n        /* \"#utility.yul\":4419:4442   */\n      sub\n        /* \"#utility.yul\":4415:4447   */\n      slt\n        /* \"#utility.yul\":4412:4464   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":4460:4461   */\n      0x00\n        /* \"#utility.yul\":4457:4458   */\n      dup1\n        /* \"#utility.yul\":4450:4462   */\n      revert\n        /* \"#utility.yul\":4412:4464   */\n    tag_403:\n        /* \"#utility.yul\":4499:4508   */\n      dup3\n        /* \"#utility.yul\":4486:4509   */\n      calldataload\n        /* \"#utility.yul\":4518:4549   */\n      tag_404\n        /* \"#utility.yul\":4543:4548   */\n      dup2\n        /* \"#utility.yul\":4518:4549   */\n      tag_363\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":4568:4573   */\n      swap2\n      pop\n        /* \"#utility.yul\":4625:4627   */\n      0x20\n        /* \"#utility.yul\":4610:4628   */\n      dup4\n      add\n        /* \"#utility.yul\":4597:4629   */\n      calldataload\n        /* \"#utility.yul\":4638:4671   */\n      tag_405\n        /* \"#utility.yul\":4597:4629   */\n      dup2\n        /* \"#utility.yul\":4638:4671   */\n      tag_363\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":4690:4697   */\n      dup1\n        /* \"#utility.yul\":4680:4697   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4315:4703   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4708:4956   */\n    tag_156:\n        /* \"#utility.yul\":4776:4782   */\n      0x00\n        /* \"#utility.yul\":4784:4790   */\n      dup1\n        /* \"#utility.yul\":4837:4839   */\n      0x40\n        /* \"#utility.yul\":4825:4834   */\n      dup4\n        /* \"#utility.yul\":4816:4823   */\n      dup6\n        /* \"#utility.yul\":4812:4835   */\n      sub\n        /* \"#utility.yul\":4808:4840   */\n      slt\n        /* \"#utility.yul\":4805:4857   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":4853:4854   */\n      0x00\n        /* \"#utility.yul\":4850:4851   */\n      dup1\n        /* \"#utility.yul\":4843:4855   */\n      revert\n        /* \"#utility.yul\":4805:4857   */\n    tag_407:\n      pop\n      pop\n        /* \"#utility.yul\":4876:4899   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":4946:4948   */\n      0x20\n        /* \"#utility.yul\":4931:4949   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4918:4950   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":4708:4956   */\n      jump\t// out\n        /* \"#utility.yul\":4961:5341   */\n    tag_182:\n        /* \"#utility.yul\":5040:5041   */\n      0x01\n        /* \"#utility.yul\":5036:5048   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5083:5095   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5104:5165   */\n      tag_409\n      jumpi\n        /* \"#utility.yul\":5158:5162   */\n      0x7f\n        /* \"#utility.yul\":5150:5156   */\n      dup3\n        /* \"#utility.yul\":5146:5163   */\n      and\n        /* \"#utility.yul\":5136:5163   */\n      swap2\n      pop\n        /* \"#utility.yul\":5104:5165   */\n    tag_409:\n        /* \"#utility.yul\":5211:5213   */\n      0x20\n        /* \"#utility.yul\":5203:5209   */\n      dup3\n        /* \"#utility.yul\":5200:5214   */\n      lt\n        /* \"#utility.yul\":5180:5198   */\n      dup2\n        /* \"#utility.yul\":5177:5215   */\n      sub\n        /* \"#utility.yul\":5174:5335   */\n      tag_410\n      jumpi\n        /* \"#utility.yul\":5257:5267   */\n      0x4e487b71\n        /* \"#utility.yul\":5252:5255   */\n      0xe0\n        /* \"#utility.yul\":5248:5268   */\n      shl\n        /* \"#utility.yul\":5245:5246   */\n      0x00\n        /* \"#utility.yul\":5238:5269   */\n      mstore\n        /* \"#utility.yul\":5292:5296   */\n      0x22\n        /* \"#utility.yul\":5289:5290   */\n      0x04\n        /* \"#utility.yul\":5282:5297   */\n      mstore\n        /* \"#utility.yul\":5320:5324   */\n      0x24\n        /* \"#utility.yul\":5317:5318   */\n      0x00\n        /* \"#utility.yul\":5310:5325   */\n      revert\n        /* \"#utility.yul\":5174:5335   */\n    tag_410:\n      pop\n        /* \"#utility.yul\":4961:5341   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5346:5686   */\n    tag_203:\n        /* \"#utility.yul\":5548:5550   */\n      0x20\n        /* \"#utility.yul\":5530:5551   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5587:5589   */\n      0x10\n        /* \"#utility.yul\":5567:5585   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5560:5590   */\n      mstore\n      shl(0x81, 0x31b0b63632b9103737ba1037bbb732b9)\n        /* \"#utility.yul\":5621:5623   */\n      0x40\n        /* \"#utility.yul\":5606:5624   */\n      dup3\n      add\n        /* \"#utility.yul\":5599:5645   */\n      mstore\n        /* \"#utility.yul\":5677:5679   */\n      0x60\n        /* \"#utility.yul\":5662:5680   */\n      add\n      swap1\n        /* \"#utility.yul\":5346:5686   */\n      jump\t// out\n        /* \"#utility.yul\":5691:5818   */\n    tag_364:\n        /* \"#utility.yul\":5752:5762   */\n      0x4e487b71\n        /* \"#utility.yul\":5747:5750   */\n      0xe0\n        /* \"#utility.yul\":5743:5763   */\n      shl\n        /* \"#utility.yul\":5740:5741   */\n      0x00\n        /* \"#utility.yul\":5733:5764   */\n      mstore\n        /* \"#utility.yul\":5783:5787   */\n      0x11\n        /* \"#utility.yul\":5780:5781   */\n      0x04\n        /* \"#utility.yul\":5773:5788   */\n      mstore\n        /* \"#utility.yul\":5807:5811   */\n      0x24\n        /* \"#utility.yul\":5804:5805   */\n      0x00\n        /* \"#utility.yul\":5797:5812   */\n      revert\n        /* \"#utility.yul\":5823:5951   */\n    tag_211:\n        /* \"#utility.yul\":5863:5866   */\n      0x00\n        /* \"#utility.yul\":5894:5895   */\n      dup3\n        /* \"#utility.yul\":5890:5896   */\n      not\n        /* \"#utility.yul\":5887:5888   */\n      dup3\n        /* \"#utility.yul\":5884:5897   */\n      gt\n        /* \"#utility.yul\":5881:5920   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":5900:5918   */\n      tag_415\n      tag_364\n      jump\t// in\n    tag_415:\n      pop\n        /* \"#utility.yul\":5936:5945   */\n      add\n      swap1\n        /* \"#utility.yul\":5823:5951   */\n      jump\t// out\n        /* \"#utility.yul\":5956:6284   */\n    tag_219:\n        /* \"#utility.yul\":6158:6160   */\n      0x20\n        /* \"#utility.yul\":6140:6161   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6197:6198   */\n      0x05\n        /* \"#utility.yul\":6177:6195   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6170:6199   */\n      mstore\n      shl(0xd8, 0x5a65726f21)\n        /* \"#utility.yul\":6230:6232   */\n      0x40\n        /* \"#utility.yul\":6215:6233   */\n      dup3\n      add\n        /* \"#utility.yul\":6208:6243   */\n      mstore\n        /* \"#utility.yul\":6275:6277   */\n      0x60\n        /* \"#utility.yul\":6260:6278   */\n      add\n      swap1\n        /* \"#utility.yul\":5956:6284   */\n      jump\t// out\n        /* \"#utility.yul\":7587:8009   */\n    tag_365:\n        /* \"#utility.yul\":7676:7677   */\n      0x01\n        /* \"#utility.yul\":7719:7724   */\n      dup2\n        /* \"#utility.yul\":7676:7677   */\n      dup2\n        /* \"#utility.yul\":7733:8003   */\n    tag_422:\n        /* \"#utility.yul\":7754:7761   */\n      dup1\n        /* \"#utility.yul\":7744:7752   */\n      dup6\n        /* \"#utility.yul\":7741:7762   */\n      gt\n        /* \"#utility.yul\":7733:8003   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":7813:7817   */\n      dup2\n        /* \"#utility.yul\":7809:7810   */\n      0x00\n        /* \"#utility.yul\":7805:7811   */\n      not\n        /* \"#utility.yul\":7801:7818   */\n      div\n        /* \"#utility.yul\":7795:7799   */\n      dup3\n        /* \"#utility.yul\":7792:7819   */\n      gt\n        /* \"#utility.yul\":7789:7842   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":7822:7840   */\n      tag_426\n      tag_364\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":7872:7879   */\n      dup1\n        /* \"#utility.yul\":7862:7870   */\n      dup6\n        /* \"#utility.yul\":7858:7880   */\n      and\n        /* \"#utility.yul\":7855:7910   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":7892:7908   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":7855:7910   */\n    tag_427:\n        /* \"#utility.yul\":7971:7993   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":7931:7946   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":7733:8003   */\n      jump(tag_422)\n    tag_424:\n        /* \"#utility.yul\":7737:7740   */\n      pop\n        /* \"#utility.yul\":7587:8009   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8014:8820   */\n    tag_366:\n        /* \"#utility.yul\":8063:8068   */\n      0x00\n        /* \"#utility.yul\":8093:8101   */\n      dup3\n        /* \"#utility.yul\":8083:8163   */\n      tag_429\n      jumpi\n      pop\n        /* \"#utility.yul\":8134:8135   */\n      0x01\n        /* \"#utility.yul\":8148:8153   */\n      jump(tag_187)\n        /* \"#utility.yul\":8083:8163   */\n    tag_429:\n        /* \"#utility.yul\":8182:8186   */\n      dup2\n        /* \"#utility.yul\":8172:8248   */\n      tag_430\n      jumpi\n      pop\n        /* \"#utility.yul\":8219:8220   */\n      0x00\n        /* \"#utility.yul\":8233:8238   */\n      jump(tag_187)\n        /* \"#utility.yul\":8172:8248   */\n    tag_430:\n        /* \"#utility.yul\":8264:8268   */\n      dup2\n        /* \"#utility.yul\":8282:8283   */\n      0x01\n        /* \"#utility.yul\":8277:8336   */\n      dup2\n      eq\n      tag_432\n      jumpi\n        /* \"#utility.yul\":8350:8351   */\n      0x02\n        /* \"#utility.yul\":8345:8475   */\n      dup2\n      eq\n      tag_433\n      jumpi\n        /* \"#utility.yul\":8257:8475   */\n      jump(tag_431)\n        /* \"#utility.yul\":8277:8336   */\n    tag_432:\n        /* \"#utility.yul\":8307:8308   */\n      0x01\n        /* \"#utility.yul\":8298:8308   */\n      swap2\n      pop\n        /* \"#utility.yul\":8321:8326   */\n      pop\n      jump(tag_187)\n        /* \"#utility.yul\":8345:8475   */\n    tag_433:\n        /* \"#utility.yul\":8382:8385   */\n      0xff\n        /* \"#utility.yul\":8372:8380   */\n      dup5\n        /* \"#utility.yul\":8369:8386   */\n      gt\n        /* \"#utility.yul\":8366:8409   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":8389:8407   */\n      tag_435\n      tag_364\n      jump\t// in\n    tag_435:\n      pop\n      pop\n        /* \"#utility.yul\":8445:8446   */\n      0x01\n        /* \"#utility.yul\":8431:8447   */\n      dup3\n      shl\n        /* \"#utility.yul\":8460:8465   */\n      jump(tag_187)\n        /* \"#utility.yul\":8257:8475   */\n    tag_431:\n      pop\n        /* \"#utility.yul\":8559:8561   */\n      0x20\n        /* \"#utility.yul\":8549:8557   */\n      dup4\n        /* \"#utility.yul\":8546:8562   */\n      lt\n        /* \"#utility.yul\":8540:8543   */\n      0x0133\n        /* \"#utility.yul\":8534:8538   */\n      dup4\n        /* \"#utility.yul\":8531:8544   */\n      lt\n        /* \"#utility.yul\":8527:8563   */\n      and\n        /* \"#utility.yul\":8521:8523   */\n      0x4e\n        /* \"#utility.yul\":8511:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8524   */\n      lt\n        /* \"#utility.yul\":8503:8505   */\n      0x0b\n        /* \"#utility.yul\":8497:8501   */\n      dup5\n        /* \"#utility.yul\":8494:8506   */\n      lt\n        /* \"#utility.yul\":8490:8525   */\n      and\n        /* \"#utility.yul\":8487:8564   */\n      or\n        /* \"#utility.yul\":8484:8643   */\n      iszero\n      tag_436\n      jumpi\n      pop\n        /* \"#utility.yul\":8596:8615   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":8628:8633   */\n      jump(tag_187)\n        /* \"#utility.yul\":8484:8643   */\n    tag_436:\n        /* \"#utility.yul\":8675:8709   */\n      tag_437\n        /* \"#utility.yul\":8700:8708   */\n      dup4\n        /* \"#utility.yul\":8694:8698   */\n      dup4\n        /* \"#utility.yul\":8675:8709   */\n      tag_365\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":8745:8751   */\n      dup1\n        /* \"#utility.yul\":8741:8742   */\n      0x00\n        /* \"#utility.yul\":8737:8743   */\n      not\n        /* \"#utility.yul\":8733:8752   */\n      div\n        /* \"#utility.yul\":8724:8731   */\n      dup3\n        /* \"#utility.yul\":8721:8753   */\n      gt\n        /* \"#utility.yul\":8718:8776   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":8756:8774   */\n      tag_439\n      tag_364\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":8794:8814   */\n      mul\n      swap4\n        /* \"#utility.yul\":8014:8820   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8825:8956   */\n    tag_255:\n        /* \"#utility.yul\":8885:8890   */\n      0x00\n        /* \"#utility.yul\":8914:8950   */\n      tag_325\n        /* \"#utility.yul\":8941:8949   */\n      dup4\n        /* \"#utility.yul\":8935:8939   */\n      dup4\n        /* \"#utility.yul\":8914:8950   */\n      tag_366\n      jump\t// in\n        /* \"#utility.yul\":9311:9479   */\n    tag_259:\n        /* \"#utility.yul\":9351:9358   */\n      0x00\n        /* \"#utility.yul\":9417:9418   */\n      dup2\n        /* \"#utility.yul\":9413:9414   */\n      0x00\n        /* \"#utility.yul\":9409:9415   */\n      not\n        /* \"#utility.yul\":9405:9419   */\n      div\n        /* \"#utility.yul\":9402:9403   */\n      dup4\n        /* \"#utility.yul\":9399:9420   */\n      gt\n        /* \"#utility.yul\":9394:9395   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      iszero\n        /* \"#utility.yul\":9380:9397   */\n      iszero\n        /* \"#utility.yul\":9376:9421   */\n      and\n        /* \"#utility.yul\":9373:9444   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":9424:9442   */\n      tag_445\n      tag_364\n      jump\t// in\n    tag_445:\n      pop\n        /* \"#utility.yul\":9464:9473   */\n      mul\n      swap1\n        /* \"#utility.yul\":9311:9479   */\n      jump\t// out\n        /* \"#utility.yul\":10557:10834   */\n    tag_278:\n        /* \"#utility.yul\":10624:10630   */\n      0x00\n        /* \"#utility.yul\":10677:10679   */\n      0x20\n        /* \"#utility.yul\":10665:10674   */\n      dup3\n        /* \"#utility.yul\":10656:10663   */\n      dup5\n        /* \"#utility.yul\":10652:10675   */\n      sub\n        /* \"#utility.yul\":10648:10680   */\n      slt\n        /* \"#utility.yul\":10645:10697   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":10693:10694   */\n      0x00\n        /* \"#utility.yul\":10690:10691   */\n      dup1\n        /* \"#utility.yul\":10683:10695   */\n      revert\n        /* \"#utility.yul\":10645:10697   */\n    tag_450:\n        /* \"#utility.yul\":10725:10734   */\n      dup2\n        /* \"#utility.yul\":10719:10735   */\n      mload\n        /* \"#utility.yul\":10778:10783   */\n      dup1\n        /* \"#utility.yul\":10771:10784   */\n      iszero\n        /* \"#utility.yul\":10764:10785   */\n      iszero\n        /* \"#utility.yul\":10757:10762   */\n      dup2\n        /* \"#utility.yul\":10754:10786   */\n      eq\n        /* \"#utility.yul\":10744:10804   */\n      tag_325\n      jumpi\n        /* \"#utility.yul\":10800:10801   */\n      0x00\n        /* \"#utility.yul\":10797:10798   */\n      dup1\n        /* \"#utility.yul\":10790:10802   */\n      revert\n        /* \"#utility.yul\":12315:12450   */\n    tag_307:\n        /* \"#utility.yul\":12354:12357   */\n      0x00\n        /* \"#utility.yul\":12375:12392   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":12372:12415   */\n      tag_458\n      jumpi\n        /* \"#utility.yul\":12395:12413   */\n      tag_458\n      tag_364\n      jump\t// in\n    tag_458:\n      pop\n        /* \"#utility.yul\":12442:12443   */\n      0x01\n        /* \"#utility.yul\":12431:12444   */\n      add\n      swap1\n        /* \"#utility.yul\":12315:12450   */\n      jump\t// out\n        /* \"#utility.yul\":12455:12672   */\n    tag_326:\n        /* \"#utility.yul\":12495:12496   */\n      0x00\n        /* \"#utility.yul\":12521:12522   */\n      dup3\n        /* \"#utility.yul\":12511:12643   */\n      tag_460\n      jumpi\n        /* \"#utility.yul\":12565:12575   */\n      0x4e487b71\n        /* \"#utility.yul\":12560:12563   */\n      0xe0\n        /* \"#utility.yul\":12556:12576   */\n      shl\n        /* \"#utility.yul\":12553:12554   */\n      0x00\n        /* \"#utility.yul\":12546:12577   */\n      mstore\n        /* \"#utility.yul\":12600:12604   */\n      0x12\n        /* \"#utility.yul\":12597:12598   */\n      0x04\n        /* \"#utility.yul\":12590:12605   */\n      mstore\n        /* \"#utility.yul\":12628:12632   */\n      0x24\n        /* \"#utility.yul\":12625:12626   */\n      0x00\n        /* \"#utility.yul\":12618:12633   */\n      revert\n        /* \"#utility.yul\":12511:12643   */\n    tag_460:\n      pop\n        /* \"#utility.yul\":12657:12666   */\n      div\n      swap1\n        /* \"#utility.yul\":12455:12672   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200a963f3f13e8d262ea5b3eefd0d43cb3fd0d3285657c6dd13917b2294ea3dbe064736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1176": {
									"entryPoint": null,
									"id": 1176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_584": {
									"entryPoint": null,
									"id": 584,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_573": {
									"entryPoint": 649,
									"id": 573,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_402": {
									"entryPoint": 417,
									"id": 402,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@div_931": {
									"entryPoint": 380,
									"id": 931,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_916": {
									"entryPoint": 403,
									"id": 916,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1062,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 654,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 980,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5317:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:358:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "220:16:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "235:1:6",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "224:7:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "245:16:6",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "254:7:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "245:5:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "270:13:6",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "278:5:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "270:4:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "334:228:6",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "379:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "381:16:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "381:18:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "381:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "354:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "368:1:6",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "364:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "364:6:6"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "372:4:6"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "360:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "360:17:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "351:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "351:27:6"
																		},
																		"nodeType": "YulIf",
																		"src": "348:53:6"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "440:29:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "442:25:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "455:5:6"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "462:4:6"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "451:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "451:16:6"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "442:5:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "421:8:6"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "431:7:6"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "417:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "417:22:6"
																		},
																		"nodeType": "YulIf",
																		"src": "414:55:6"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "482:23:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "494:4:6"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "500:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "490:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "490:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "482:4:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "518:34:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "534:7:6"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "543:8:6"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "530:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "530:22:6"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "518:8:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "303:8:6"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "313:7:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "300:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "300:21:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "322:3:6",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "296:3:6",
																"statements": []
															},
															"src": "292:270:6"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "174:5:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "181:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "194:5:6",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "201:4:6",
														"type": ""
													}
												],
												"src": "146:422:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "632:747:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "670:52:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "684:10:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "693:1:6",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "684:5:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "707:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "652:8:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "645:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:16:6"
															},
															"nodeType": "YulIf",
															"src": "642:80:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "755:52:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "769:10:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "778:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "769:5:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "792:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "741:4:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "734:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "734:12:6"
															},
															"nodeType": "YulIf",
															"src": "731:76:6"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "843:52:6",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "857:10:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "866:1:6",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "857:5:6"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "880:5:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "836:59:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "841:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "911:123:6",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "946:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "948:16:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "948:18:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "948:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "931:8:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "941:3:6",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "928:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "928:17:6"
																				},
																				"nodeType": "YulIf",
																				"src": "925:43:6"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "981:25:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "994:8:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1004:1:6",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "990:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "990:16:6"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "981:5:6"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "1019:5:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "904:130:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "909:1:6",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "823:4:6"
															},
															"nodeType": "YulSwitch",
															"src": "816:218:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1132:70:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1146:28:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1159:4:6"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "1165:8:6"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "1155:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1155:19:6"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1146:5:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "1187:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1056:4:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1062:2:6",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1053:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1053:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1070:8:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1080:2:6",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1067:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1067:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1049:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1049:35:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1093:4:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1099:3:6",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1090:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1090:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1108:8:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1118:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1105:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1105:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1086:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1086:36:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1046:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1046:77:6"
															},
															"nodeType": "YulIf",
															"src": "1043:159:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1211:57:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1253:4:6"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1259:8:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "1234:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1234:34:6"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "1215:7:6",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "1224:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1313:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1315:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1315:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1315:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "1283:7:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1300:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1296:6:6"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "1304:6:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "1292:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1292:19:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1280:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1280:32:6"
															},
															"nodeType": "YulIf",
															"src": "1277:58:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "1357:7:6"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "1366:6:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:20:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "1344:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "603:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "609:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "622:5:6",
														"type": ""
													}
												],
												"src": "573:806:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1452:72:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1462:56:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1492:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "1502:8:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1512:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1498:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1498:19:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "1471:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1471:47:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "1462:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "1423:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "1429:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "1442:5:6",
														"type": ""
													}
												],
												"src": "1384:140:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1581:116:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1640:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1642:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1642:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1642:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1612:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1605:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1605:9:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1598:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1598:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1620:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1631:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1627:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1627:6:6"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1635:1:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "1623:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1623:14:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1617:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1617:21:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1594:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1594:45:6"
															},
															"nodeType": "YulIf",
															"src": "1591:71:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1671:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1686:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1689:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1682:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1682:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1671:7:6"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1560:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1563:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1569:7:6",
														"type": ""
													}
												],
												"src": "1529:168:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1734:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1751:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1758:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1763:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1754:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1754:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1744:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1744:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1744:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1791:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1794:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1784:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1784:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1818:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1808:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1808:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1702:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1889:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1899:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1913:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1916:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1909:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1909:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1899:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1930:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1960:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1966:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1956:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1956:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1934:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2007:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2009:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2023:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2031:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2019:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2019:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2009:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1987:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1980:26:6"
															},
															"nodeType": "YulIf",
															"src": "1977:61:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2097:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2118:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2125:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2130:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2121:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2121:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2111:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2111:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2111:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2162:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2165:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2155:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2155:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2155:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2190:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2193:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2183:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2183:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2183:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2053:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2076:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2084:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2073:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2073:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2050:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2050:38:6"
															},
															"nodeType": "YulIf",
															"src": "2047:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1869:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1878:6:6",
														"type": ""
													}
												],
												"src": "1834:380:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2275:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2292:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2295:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2285:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2285:14:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2285:14:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2308:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2326:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2329:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2316:9:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2316:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2308:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2258:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2266:4:6",
														"type": ""
													}
												],
												"src": "2219:121:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2426:464:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2459:425:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2473:11:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2483:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2477:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2504:2:6"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2508:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2497:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2497:17:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2497:17:6"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2527:31:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2549:2:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2539:9:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2539:19:6"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2531:4:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2571:57:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2594:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2604:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2611:10:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2623:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2607:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2607:19:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2600:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2600:27:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2590:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2590:38:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2575:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2665:23:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2667:19:6",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2682:4:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2667:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2647:10:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2659:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2644:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2644:20:6"
																		},
																		"nodeType": "YulIf",
																		"src": "2641:47:6"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2701:41:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2715:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2725:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2732:3:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2737:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2728:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2728:12:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2721:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2721:20:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2711:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2711:31:6"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2705:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2755:24:6",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2768:11:6"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2759:5:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2853:21:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2862:5:6"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2869:2:6"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2855:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2855:17:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2855:17:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2803:5:6"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2810:2:6"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2800:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2800:13:6"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2814:26:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2816:22:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2829:5:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2836:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2825:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2825:13:6"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2816:5:6"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2796:3:6",
																			"statements": []
																		},
																		"src": "2792:82:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2442:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2447:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2439:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2439:11:6"
															},
															"nodeType": "YulIf",
															"src": "2436:448:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2398:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2405:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2410:10:6",
														"type": ""
													}
												],
												"src": "2345:545:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2980:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2990:65:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "3005:4:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3023:1:6",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "3026:3:6"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "3019:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3019:11:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3036:1:6",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "3032:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3032:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "3015:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3015:24:6"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3011:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3011:29:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3001:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3001:40:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3047:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3050:3:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3043:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3043:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2998:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2998:57:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2990:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2957:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2963:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2971:4:6",
														"type": ""
													}
												],
												"src": "2895:166:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3162:1256:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3172:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3192:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3186:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3186:10:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3176:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3239:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3241:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3241:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3241:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3211:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3227:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3231:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3223:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3223:10:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3235:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3219:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3219:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3208:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3208:30:6"
															},
															"nodeType": "YulIf",
															"src": "3205:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3314:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3352:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3346:5:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3346:11:6"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3320:25:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3320:38:6"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3360:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "3270:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3270:97:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3270:97:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3376:18:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3393:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3380:9:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3403:23:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3422:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3407:11:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3435:24:6",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3448:11:6"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3435:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3505:656:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3519:35:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3538:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3550:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3546:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3546:7:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3534:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3534:20:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3523:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3567:49:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3611:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3581:29:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3581:35:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3571:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3629:10:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3638:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3633:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3716:172:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3741:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3759:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3764:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3755:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3755:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3749:5:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3749:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3734:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3734:42:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3734:42:6"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3793:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3807:6:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3815:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3803:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3803:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3793:6:6"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3834:40:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3851:9:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3862:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3847:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3847:27:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3834:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3663:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3666:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3660:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3660:14:6"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3675:28:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3677:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3686:1:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3689:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3682:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3682:19:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3677:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3656:3:6",
																					"statements": []
																				},
																				"src": "3652:236:6"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3936:166:6",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3954:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3981:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3986:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3977:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3977:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3971:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3971:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3958:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4021:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4033:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "4060:1:6",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "4063:6:6"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "4056:3:6"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "4056:14:6"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "4072:3:6",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "4052:3:6"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "4052:24:6"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "4082:1:6",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "4078:3:6"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "4078:6:6"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "4048:3:6"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "4048:37:6"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "4044:3:6"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4044:42:6"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "4029:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4029:58:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4014:6:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4014:74:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4014:74:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3907:7:6"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3916:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3904:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3904:19:6"
																				},
																				"nodeType": "YulIf",
																				"src": "3901:201:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4122:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4136:1:6",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4139:6:6"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "4132:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4132:14:6"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4148:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4128:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4128:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4115:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4115:36:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4115:36:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3498:663:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3503:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4178:234:6",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4192:14:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4205:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "4196:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4241:67:6",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4259:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4278:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4283:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4274:3:6"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4274:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4268:5:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4268:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4259:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "4222:6:6"
																				},
																				"nodeType": "YulIf",
																				"src": "4219:89:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4328:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4387:5:6"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4394:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4334:52:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4334:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4321:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4321:81:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4321:81:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4170:242:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3478:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3486:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3475:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3475:14:6"
															},
															"nodeType": "YulSwitch",
															"src": "3468:944:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3147:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3153:3:6",
														"type": ""
													}
												],
												"src": "3066:1352:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4469:171:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4500:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4521:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4528:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4533:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4524:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4524:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4514:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4514:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4514:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4565:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4568:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4558:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4558:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4558:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4593:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4596:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4586:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4586:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4586:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4489:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4482:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4482:9:6"
															},
															"nodeType": "YulIf",
															"src": "4479:132:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4620:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4629:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4632:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4625:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4625:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4620:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4454:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4457:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4463:1:6",
														"type": ""
													}
												],
												"src": "4423:217:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4819:181:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4836:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4847:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4829:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4829:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4870:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4881:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4866:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4866:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4886:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4859:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4859:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4909:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4920:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4905:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4905:18:6"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4925:33:6",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4898:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4898:61:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4898:61:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4968:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4980:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4991:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4976:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4976:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4968:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4796:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4810:4:6",
														"type": ""
													}
												],
												"src": "4645:355:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5053:80:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5080:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5082:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5082:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5082:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5069:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5076:1:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5072:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5072:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5066:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5066:13:6"
															},
															"nodeType": "YulIf",
															"src": "5063:39:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5111:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5122:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5125:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5118:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5118:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5111:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5036:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5039:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5045:3:6",
														"type": ""
													}
												],
												"src": "5005:128:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5239:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5249:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5261:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5272:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5257:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5257:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5249:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5291:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5302:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5284:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5284:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5284:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5208:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5219:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5230:4:6",
														"type": ""
													}
												],
												"src": "5138:177:6"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600780546001600160a01b03191661dead17905562000021601290565b6200002e90600a620003a1565b600c81905562000040906014620003b2565b600d55620000606064600d546200017c60201b62000f4c1790919060201c565b600e55620f4240600f55600c546200007d90631dcd6500620003b2565b601055604051806040016040528060088152602001674d6574616363657360c01b81525060405180604001604052806005815260200164416363657360d81b8152508160039081620000d0919062000478565b506004620000df828262000478565b505060058054336001600160a01b03199091161781556010546200013a92503091620001349160649162000120919062000193602090811b62000f5f17901c565b6200017c60201b62000f4c1790919060201c565b620001a1565b6200017673c6e5347d1a5fe685160429705e9e26bd3bba8fea62000134606462000120605f6010546200019360201b62000f5f1790919060201c565b62000582565b60006200018a828462000544565b90505b92915050565b60006200018a8284620003b2565b6001600160a01b038216620001fc5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000210919062000567565b90915550506001600160a01b038216600090815260208190526040812080548392906200023f90849062000567565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620002e5578160001904821115620002c957620002c96200028e565b80851615620002d757918102915b93841c9390800290620002a9565b509250929050565b600082620002fe575060016200018d565b816200030d575060006200018d565b8160018114620003265760028114620003315762000351565b60019150506200018d565b60ff8411156200034557620003456200028e565b50506001821b6200018d565b5060208310610133831016604e8410600b841016171562000376575081810a6200018d565b620003828383620002a4565b80600019048211156200039957620003996200028e565b029392505050565b60006200018a60ff841683620002ed565b6000816000190483118215151615620003cf57620003cf6200028e565b500290565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620003ff57607f821691505b6020821081036200042057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200028957600081815260208120601f850160051c810160208610156200044f5750805b601f850160051c820191505b8181101562000470578281556001016200045b565b505050505050565b81516001600160401b03811115620004945762000494620003d4565b620004ac81620004a58454620003ea565b8462000426565b602080601f831160018114620004e45760008415620004cb5750858301515b600019600386901b1c1916600185901b17855562000470565b600085815260208120601f198616915b828110156200051557888601518255948401946001909101908401620004f4565b5085821015620005345787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000826200056257634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156200057d576200057d6200028e565b500190565b61171880620005926000396000f3fe6080604052600436106101c65760003560e01c80638dd14802116100f7578063dd62ed3e11610095578063e7d53fcb11610064578063e7d53fcb1461051b578063f2fde38b1461052e578063f4f3122e1461054e578063f88979451461056e57600080fd5b8063dd62ed3e1461049d578063deea800d146104bd578063e181203a146104d3578063e4993d8c146104f357600080fd5b8063a9059cbb116100d1578063a9059cbb14610427578063adbc7cee14610447578063b2938bee14610467578063d5abeb011461048757600080fd5b80638dd14802146103d257806395d89b41146103f2578063a457c2d71461040757600080fd5b80633950935111610164578063534b14421161013e578063534b1442146103465780635fa2ef10146103665780636ac5db191461038657806370a082311461039c57600080fd5b806339509351146102d75780633c3b7995146102f75780634d1d03d11461030d57600080fd5b806323b872dd116101a057806323b872dd1461024c57806327c8f8351461026c578063313ce567146102a4578063380d831b146102c057600080fd5b806306fdde03146101d2578063095ea7b3146101fd57806318160ddd1461022d57600080fd5b366101cd57005b600080fd5b3480156101de57600080fd5b506101e7610584565b6040516101f491906112d7565b60405180910390f35b34801561020957600080fd5b5061021d610218366004611344565b610616565b60405190151581526020016101f4565b34801561023957600080fd5b506002545b6040519081526020016101f4565b34801561025857600080fd5b5061021d610267366004611370565b610630565b34801561027857600080fd5b5060075461028c906001600160a01b031681565b6040516001600160a01b0390911681526020016101f4565b3480156102b057600080fd5b50604051601281526020016101f4565b3480156102cc57600080fd5b506102d5610654565b005b3480156102e357600080fd5b5061021d6102f2366004611344565b6106c0565b34801561030357600080fd5b5061023e600f5481565b34801561031957600080fd5b50600854600954600a54600b546040805194855260208501939093529183015260608201526080016101f4565b34801561035257600080fd5b506102d56103613660046113b1565b6106e2565b34801561037257600080fd5b5060065461028c906001600160a01b031681565b34801561039257600080fd5b5061023e600d5481565b3480156103a857600080fd5b5061023e6103b73660046113ca565b6001600160a01b031660009081526020819052604090205490565b3480156103de57600080fd5b506102d56103ed3660046113ca565b610767565b3480156103fe57600080fd5b506101e76107ef565b34801561041357600080fd5b5061021d610422366004611344565b6107fe565b34801561043357600080fd5b5061021d610442366004611344565b610879565b34801561045357600080fd5b506102d56104623660046113e7565b610887565b34801561047357600080fd5b506102d5610482366004611420565b6109cf565b34801561049357600080fd5b5061023e60105481565b3480156104a957600080fd5b5061023e6104b836600461146a565b610b34565b3480156104c957600080fd5b5061023e600c5481565b3480156104df57600080fd5b506102d56104ee3660046114a3565b610b5f565b3480156104ff57600080fd5b5061028c73c6e5347d1a5fe685160429705e9e26bd3bba8fea81565b61021d6105293660046113ca565b610c0f565b34801561053a57600080fd5b506102d56105493660046113ca565b610e03565b34801561055a57600080fd5b506102d56105693660046114a3565b610ebe565b34801561057a57600080fd5b5061023e600e5481565b606060038054610593906114c5565b80601f01602080910402602001604051908101604052809291908181526020018280546105bf906114c5565b801561060c5780601f106105e15761010080835404028352916020019161060c565b820191906000526020600020905b8154815290600101906020018083116105ef57829003601f168201915b5050505050905090565b600033610624818585610f6b565b60019150505b92915050565b60003361063e85828561108f565b610649858585611109565b506001949350505050565b6005546001600160a01b031633146106875760405162461bcd60e51b815260040161067e906114ff565b60405180910390fd5b436009556040514281527fb144be0f16f8d30f2e18ef8f7938d5e90207932d96650e592ff47725716818fb9060200160405180910390a1565b6000336106248185856106d38383610b34565b6106dd919061153f565b610f6b565b6005546001600160a01b0316331461070c5760405162461bcd60e51b815260040161067e906114ff565b8060000361072c5760405162461bcd60e51b815260040161067e90611557565b600f8190556040518181527f6d487f3988610155b3a9ef590f8ac170134d24e6505b9ddd3160e34abaa0edaf9060200160405180910390a150565b6005546001600160a01b031633146107915760405162461bcd60e51b815260040161067e906114ff565b6040516001600160a01b03821681527fe605ac02ea219003ec58fc9cf4d4b3c5f2d62ec39807b1c63886ddd47a6fcd6e9060200160405180910390a1600680546001600160a01b0319166001600160a01b0392909216919091179055565b606060048054610593906114c5565b6000338161080c8286610b34565b90508381101561086c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161067e565b6106498286868403610f6b565b600033610624818585611109565b6005546001600160a01b031633146108b15760405162461bcd60e51b815260040161067e906114ff565b824710156108eb5760405162461bcd60e51b81526020600482015260076024820152664e6f20424e422160c81b604482015260640161067e565b6001600160a01b0381166109305760405162461bcd60e51b815260206004820152600c60248201526b5a65726f206164647265737360a01b604482015260640161067e565b600061093d83600a61165a565b60408051868152602081018690526001600160a01b0385168183015290519192507f4508977418b95bac209196e03356692c2d8f47957dec1c15af1a44cc40d39a04919081900360600190a16001600160a01b0382166108fc6109a08387611666565b6040518115909202916000818181858888f193505050501580156109c8573d6000803e3d6000fd5b5050505050565b6005546001600160a01b031633146109f95760405162461bcd60e51b815260040161067e906114ff565b6001600160a01b038416610a3f5760405162461bcd60e51b815260206004820152600d60248201526c61646472657373207a65726f2160981b604482015260640161067e565b6000610a4c83600a61165a565b604080516001600160a01b0388811682526020820188905281830187905285166060820152905191925086917f0206ca7f97d46974ed97b981f879b17e9e1fe17ead63770c806926d28aa5cbd59181900360800190a16001600160a01b03811663a9059cbb84610abc8589611666565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610b07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2b9190611685565b50505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546001600160a01b03163314610b895760405162461bcd60e51b815260040161067e906114ff565b8115801590610b9757508015155b610bb35760405162461bcd60e51b815260040161067e90611557565b600e829055600c54610bc59082611666565b600d819055600e546040517f3b06ffd21bedfb2c375d7b1bcf74ca4fe1afe205699e39610b3aced7adf6b9e992610c03928252602082015260400190565b60405180910390a15050565b6000600c54600f54610c219190611666565b336000908152602081905260409020541115610c8b5760405162461bcd60e51b815260206004820152602360248201527f596f75207265616368656420796f757220707269766174652073616c65206c696044820152621b5a5d60ea1b606482015260840161067e565b4360085411158015610c9f57506009544311155b610cff5760405162461bcd60e51b815260206004820152602b60248201527f507269766174652053616c652068617320656e646564206f7220646964206e6f60448201526a1d081cdd185c9d081e595d60aa1b606482015260840161067e565b600e5434906000908210801590610d185750600d548211155b610d735760405162461bcd60e51b815260206004820152602660248201527f4c657373207468616e204d696e696d756d206f72204d6f7265207468616e204d6044820152656178696d756d60d01b606482015260840161067e565b610d9a670de0b6b3a7640000610d9484600b54610f5f90919063ffffffff16565b90610f4c565b600a80549192506000610dac836116a7565b9190505550610dbc303383611109565b600b546040805183815260208101929092527fb887e151dbfcc06b4ce4f67f9bbedaeb16ab224e34c6668858d0310c6d18ffc3910160405180910390a15060019392505050565b6005546001600160a01b03163314610e2d5760405162461bcd60e51b815260040161067e906114ff565b6001600160a01b038116610e725760405162461bcd60e51b815260206004820152600c60248201526b5a65726f206164647265737360a01b604482015260640161067e565b600580546001600160a01b0319166001600160a01b03831690811790915560405181907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b6005546001600160a01b03163314610ee85760405162461bcd60e51b815260040161067e906114ff565b8115801590610ef657508015155b610f125760405162461bcd60e51b815260040161067e90611557565b6009829055600b8190556040518281527f1dc13bd033e49239661ba80e30ae191b1c31c79277b531e88246c7517971b85d90602001610c03565b6000610f5882846116c0565b9392505050565b6000610f588284611666565b6001600160a01b038316610fcd5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161067e565b6001600160a01b03821661102e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161067e565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061109b8484610b34565b9050600019811461110357818110156110f65760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161067e565b6111038484848403610f6b565b50505050565b6001600160a01b03831661116d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161067e565b6001600160a01b0382166111cf5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161067e565b6001600160a01b038316600090815260208190526040902054818110156112475760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161067e565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061127e90849061153f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516112ca91815260200190565b60405180910390a3611103565b600060208083528351808285015260005b81811015611304578581018301518582016040015282016112e8565b81811115611316576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b038116811461134157600080fd5b50565b6000806040838503121561135757600080fd5b82356113628161132c565b946020939093013593505050565b60008060006060848603121561138557600080fd5b83356113908161132c565b925060208401356113a08161132c565b929592945050506040919091013590565b6000602082840312156113c357600080fd5b5035919050565b6000602082840312156113dc57600080fd5b8135610f588161132c565b6000806000606084860312156113fc57600080fd5b833592506020840135915060408401356114158161132c565b809150509250925092565b6000806000806080858703121561143657600080fd5b84356114418161132c565b93506020850135925060408501359150606085013561145f8161132c565b939692955090935050565b6000806040838503121561147d57600080fd5b82356114888161132c565b915060208301356114988161132c565b809150509250929050565b600080604083850312156114b657600080fd5b50508035926020909101359150565b600181811c908216806114d957607f821691505b6020821081036114f957634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526010908201526f31b0b63632b9103737ba1037bbb732b960811b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561155257611552611529565b500190565b6020808252600590820152645a65726f2160d81b604082015260600190565b600181815b808511156115b157816000190482111561159757611597611529565b808516156115a457918102915b93841c939080029061157b565b509250929050565b6000826115c85750600161062a565b816115d55750600061062a565b81600181146115eb57600281146115f557611611565b600191505061062a565b60ff84111561160657611606611529565b50506001821b61062a565b5060208310610133831016604e8410600b8410161715611634575081810a61062a565b61163e8383611576565b806000190482111561165257611652611529565b029392505050565b6000610f5883836115b9565b600081600019048311821515161561168057611680611529565b500290565b60006020828403121561169757600080fd5b81518015158114610f5857600080fd5b6000600182016116b9576116b9611529565b5060010190565b6000826116dd57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212200a963f3f13e8d262ea5b3eefd0d43cb3fd0d3285657c6dd13917b2294ea3dbe064736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH2 0xDEAD OR SWAP1 SSTORE PUSH3 0x21 PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH3 0x2E SWAP1 PUSH1 0xA PUSH3 0x3A1 JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE PUSH3 0x40 SWAP1 PUSH1 0x14 PUSH3 0x3B2 JUMP JUMPDEST PUSH1 0xD SSTORE PUSH3 0x60 PUSH1 0x64 PUSH1 0xD SLOAD PUSH3 0x17C PUSH1 0x20 SHL PUSH3 0xF4C OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xE SSTORE PUSH3 0xF4240 PUSH1 0xF SSTORE PUSH1 0xC SLOAD PUSH3 0x7D SWAP1 PUSH4 0x1DCD6500 PUSH3 0x3B2 JUMP JUMPDEST PUSH1 0x10 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x4D65746163636573 PUSH1 0xC0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x4163636573 PUSH1 0xD8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xD0 SWAP2 SWAP1 PUSH3 0x478 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0xDF DUP3 DUP3 PUSH3 0x478 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR DUP2 SSTORE PUSH1 0x10 SLOAD PUSH3 0x13A SWAP3 POP ADDRESS SWAP2 PUSH3 0x134 SWAP2 PUSH1 0x64 SWAP2 PUSH3 0x120 SWAP2 SWAP1 PUSH3 0x193 PUSH1 0x20 SWAP1 DUP2 SHL PUSH3 0xF5F OR SWAP1 SHR JUMP JUMPDEST PUSH3 0x17C PUSH1 0x20 SHL PUSH3 0xF4C OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1A1 JUMP JUMPDEST PUSH3 0x176 PUSH20 0xC6E5347D1A5FE685160429705E9E26BD3BBA8FEA PUSH3 0x134 PUSH1 0x64 PUSH3 0x120 PUSH1 0x5F PUSH1 0x10 SLOAD PUSH3 0x193 PUSH1 0x20 SHL PUSH3 0xF5F OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x582 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18A DUP3 DUP5 PUSH3 0x544 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18A DUP3 DUP5 PUSH3 0x3B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x1FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x210 SWAP2 SWAP1 PUSH3 0x567 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x23F SWAP1 DUP5 SWAP1 PUSH3 0x567 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x2E5 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x2C9 JUMPI PUSH3 0x2C9 PUSH3 0x28E JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x2D7 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x2A9 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x2FE JUMPI POP PUSH1 0x1 PUSH3 0x18D JUMP JUMPDEST DUP2 PUSH3 0x30D JUMPI POP PUSH1 0x0 PUSH3 0x18D JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x326 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x331 JUMPI PUSH3 0x351 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x18D JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x345 JUMPI PUSH3 0x345 PUSH3 0x28E JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x18D JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x376 JUMPI POP DUP2 DUP2 EXP PUSH3 0x18D JUMP JUMPDEST PUSH3 0x382 DUP4 DUP4 PUSH3 0x2A4 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x399 JUMPI PUSH3 0x399 PUSH3 0x28E JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18A PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x2ED JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x3CF JUMPI PUSH3 0x3CF PUSH3 0x28E JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x3FF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x420 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x289 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x44F JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x470 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x45B JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x494 JUMPI PUSH3 0x494 PUSH3 0x3D4 JUMP JUMPDEST PUSH3 0x4AC DUP2 PUSH3 0x4A5 DUP5 SLOAD PUSH3 0x3EA JUMP JUMPDEST DUP5 PUSH3 0x426 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x4E4 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x4CB JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x470 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x515 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x4F4 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x534 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x562 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x57D JUMPI PUSH3 0x57D PUSH3 0x28E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH2 0x1718 DUP1 PUSH3 0x592 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DD14802 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE7D53FCB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE7D53FCB EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x52E JUMPI DUP1 PUSH4 0xF4F3122E EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0xF8897945 EQ PUSH2 0x56E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0xDEEA800D EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xE181203A EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0xE4993D8C EQ PUSH2 0x4F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0xADBC7CEE EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0xB2938BEE EQ PUSH2 0x467 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DD14802 EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x534B1442 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x534B1442 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x5FA2EF10 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x6AC5DB19 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x3C3B7995 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x4D1D03D1 EQ PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x27C8F835 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x380D831B EQ PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1CD JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x584 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x1344 JUMP JUMPDEST PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0x1370 JUMP JUMPDEST PUSH2 0x630 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x28C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x654 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1344 JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x1F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x361 CALLDATASIZE PUSH1 0x4 PUSH2 0x13B1 JUMP JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x28C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH2 0x3B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x13CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x3ED CALLDATASIZE PUSH1 0x4 PUSH2 0x13CA JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x7EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x422 CALLDATASIZE PUSH1 0x4 PUSH2 0x1344 JUMP JUMPDEST PUSH2 0x7FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x442 CALLDATASIZE PUSH1 0x4 PUSH2 0x1344 JUMP JUMPDEST PUSH2 0x879 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x462 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E7 JUMP JUMPDEST PUSH2 0x887 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x482 CALLDATASIZE PUSH1 0x4 PUSH2 0x1420 JUMP JUMPDEST PUSH2 0x9CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH2 0x4B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x146A JUMP JUMPDEST PUSH2 0xB34 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x4EE CALLDATASIZE PUSH1 0x4 PUSH2 0x14A3 JUMP JUMPDEST PUSH2 0xB5F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH20 0xC6E5347D1A5FE685160429705E9E26BD3BBA8FEA DUP2 JUMP JUMPDEST PUSH2 0x21D PUSH2 0x529 CALLDATASIZE PUSH1 0x4 PUSH2 0x13CA JUMP JUMPDEST PUSH2 0xC0F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x549 CALLDATASIZE PUSH1 0x4 PUSH2 0x13CA JUMP JUMPDEST PUSH2 0xE03 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x569 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A3 JUMP JUMPDEST PUSH2 0xEBE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x593 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5BF SWAP1 PUSH2 0x14C5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x60C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x60C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5EF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x624 DUP2 DUP6 DUP6 PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x63E DUP6 DUP3 DUP6 PUSH2 0x108F JUMP JUMPDEST PUSH2 0x649 DUP6 DUP6 DUP6 PUSH2 0x1109 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST NUMBER PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0xB144BE0F16F8D30F2E18EF8F7938D5E90207932D96650E592FF47725716818FB SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x624 DUP2 DUP6 DUP6 PUSH2 0x6D3 DUP4 DUP4 PUSH2 0xB34 JUMP JUMPDEST PUSH2 0x6DD SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x70C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0x14FF JUMP JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x72C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0x1557 JUMP JUMPDEST PUSH1 0xF DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x6D487F3988610155B3A9EF590F8AC170134D24E6505B9DDD3160E34ABAA0EDAF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x791 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 MSTORE PUSH32 0xE605AC02EA219003EC58FC9CF4D4B3C5F2D62EC39807B1C63886DDD47A6FCD6E SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x593 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x80C DUP3 DUP7 PUSH2 0xB34 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x67E JUMP JUMPDEST PUSH2 0x649 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x624 DUP2 DUP6 DUP6 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0x14FF JUMP JUMPDEST DUP3 SELFBALANCE LT ISZERO PUSH2 0x8EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x4E6F20424E4221 PUSH1 0xC8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x67E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A65726F2061646472657373 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x67E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93D DUP4 PUSH1 0xA PUSH2 0x165A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0x4508977418B95BAC209196E03356692C2D8F47957DEC1C15AF1A44CC40D39A04 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8FC PUSH2 0x9A0 DUP4 DUP8 PUSH2 0x1666 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xA3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x61646472657373207A65726F21 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x67E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA4C DUP4 PUSH1 0xA PUSH2 0x165A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 DUP4 ADD DUP8 SWAP1 MSTORE DUP6 AND PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP DUP7 SWAP2 PUSH32 0x206CA7F97D46974ED97B981F879B17E9E1FE17EAD63770C806926D28AA5CBD5 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH4 0xA9059CBB DUP5 PUSH2 0xABC DUP6 DUP10 PUSH2 0x1666 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB2B SWAP2 SWAP1 PUSH2 0x1685 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0x14FF JUMP JUMPDEST DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xB97 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST PUSH2 0xBB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0x1557 JUMP JUMPDEST PUSH1 0xE DUP3 SWAP1 SSTORE PUSH1 0xC SLOAD PUSH2 0xBC5 SWAP1 DUP3 PUSH2 0x1666 JUMP JUMPDEST PUSH1 0xD DUP2 SWAP1 SSTORE PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH32 0x3B06FFD21BEDFB2C375D7B1BCF74CA4FE1AFE205699E39610B3ACED7ADF6B9E9 SWAP3 PUSH2 0xC03 SWAP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD PUSH1 0xF SLOAD PUSH2 0xC21 SWAP2 SWAP1 PUSH2 0x1666 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0xC8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75207265616368656420796F757220707269766174652073616C65206C69 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1B5A5D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x67E JUMP JUMPDEST NUMBER PUSH1 0x8 SLOAD GT ISZERO DUP1 ISZERO PUSH2 0xC9F JUMPI POP PUSH1 0x9 SLOAD NUMBER GT ISZERO JUMPDEST PUSH2 0xCFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x507269766174652053616C652068617320656E646564206F7220646964206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1D081CDD185C9D081E595D PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x67E JUMP JUMPDEST PUSH1 0xE SLOAD CALLVALUE SWAP1 PUSH1 0x0 SWAP1 DUP3 LT DUP1 ISZERO SWAP1 PUSH2 0xD18 JUMPI POP PUSH1 0xD SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0xD73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C657373207468616E204D696E696D756D206F72204D6F7265207468616E204D PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6178696D756D PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x67E JUMP JUMPDEST PUSH2 0xD9A PUSH8 0xDE0B6B3A7640000 PUSH2 0xD94 DUP5 PUSH1 0xB SLOAD PUSH2 0xF5F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 PUSH2 0xDAC DUP4 PUSH2 0x16A7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0xDBC ADDRESS CALLER DUP4 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xB887E151DBFCC06B4CE4F67F9BBEDAEB16AB224E34C6668858D0310C6D18FFC3 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A65726F2061646472657373 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x67E JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0x14FF JUMP JUMPDEST DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xEF6 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST PUSH2 0xF12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0x1557 JUMP JUMPDEST PUSH1 0x9 DUP3 SWAP1 SSTORE PUSH1 0xB DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x1DC13BD033E49239661BA80E30AE191B1C31C79277B531E88246C7517971B85D SWAP1 PUSH1 0x20 ADD PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF58 DUP3 DUP5 PUSH2 0x16C0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF58 DUP3 DUP5 PUSH2 0x1666 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xFCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x67E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x102E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x67E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109B DUP5 DUP5 PUSH2 0xB34 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1103 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x10F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x67E JUMP JUMPDEST PUSH2 0x1103 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xF6B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x116D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x67E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x67E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1247 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x67E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x127E SWAP1 DUP5 SWAP1 PUSH2 0x153F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x12CA SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1304 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x12E8 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1316 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1362 DUP2 PUSH2 0x132C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1390 DUP2 PUSH2 0x132C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x13A0 DUP2 PUSH2 0x132C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF58 DUP2 PUSH2 0x132C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1415 DUP2 PUSH2 0x132C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1441 DUP2 PUSH2 0x132C JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x145F DUP2 PUSH2 0x132C JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x147D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1488 DUP2 PUSH2 0x132C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1498 DUP2 PUSH2 0x132C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x14D9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x14F9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x31B0B63632B9103737BA1037BBB732B9 PUSH1 0x81 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1552 JUMPI PUSH2 0x1552 PUSH2 0x1529 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x5 SWAP1 DUP3 ADD MSTORE PUSH5 0x5A65726F21 PUSH1 0xD8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x15B1 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1597 JUMPI PUSH2 0x1597 PUSH2 0x1529 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x15A4 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x157B JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x15C8 JUMPI POP PUSH1 0x1 PUSH2 0x62A JUMP JUMPDEST DUP2 PUSH2 0x15D5 JUMPI POP PUSH1 0x0 PUSH2 0x62A JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x15EB JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x15F5 JUMPI PUSH2 0x1611 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x62A JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1606 JUMPI PUSH2 0x1606 PUSH2 0x1529 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x62A JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1634 JUMPI POP DUP2 DUP2 EXP PUSH2 0x62A JUMP JUMPDEST PUSH2 0x163E DUP4 DUP4 PUSH2 0x1576 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1652 JUMPI PUSH2 0x1652 PUSH2 0x1529 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF58 DUP4 DUP4 PUSH2 0x15B9 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1680 JUMPI PUSH2 0x1680 PUSH2 0x1529 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1697 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x16B9 JUMPI PUSH2 0x16B9 PUSH2 0x1529 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x16DD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP SWAP7 EXTCODEHASH EXTCODEHASH SGT 0xE8 0xD2 PUSH3 0xEA5B3E 0xEF 0xD0 0xD4 EXTCODECOPY 0xB3 REVERT 0xD ORIGIN DUP6 PUSH6 0x7C6DD13917B2 0x29 0x4E LOG3 0xDB 0xE0 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "201:4365:5:-:0;;;406:71;;;-1:-1:-1;;;;;;406:71:5;435:42;406:71;;;617:10;3175:2:0;;3093:91;617:10:5;612:15;;:2;:15;:::i;:::-;590:37;;;;654:9;;:2;:9;:::i;:::-;633:30;;690:12;698:3;690;;:7;;;;;;:12;;;;:::i;:::-;669:33;;738:7;708:37;;790:4;;778:16;;:9;:16;:::i;:::-;751:43;;1978:113:0;;;;;;;;;;;;;-1:-1:-1;;;1978:113:0;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:0;;;2052:5;2044;:13;;;;;;:::i;:::-;-1:-1:-1;2067:7:0;:17;2077:7;2067;:17;:::i;:::-;-1:-1:-1;;1464:5:5::1;:18:::0;;1472:10:::1;-1:-1:-1::0;;;;;;1464:18:5;;::::1;;::::0;;1510:9:::1;::::0;1488:48:::1;::::0;-1:-1:-1;1503:4:5::1;::::0;1510:25:::1;::::0;1531:3:::1;::::0;1510:16:::1;::::0;:9;:13:::1;;::::0;;::::1;;;:16:::0;::::1;:::i;:::-;:20;;;;;;:25;;;;:::i;:::-;1488:5;:48::i;:::-;1548:46;358:42;1567:26;1589:3;1567:17;1581:2;1567:9;;:13;;;;;;:17;;;;:::i;1548:46::-;201:4365:::0;;3850:96:4;3908:7;3934:5;3938:1;3934;:5;:::i;:::-;3927:12;;3850:96;;;;;:::o;3465:::-;3523:7;3549:5;3553:1;3549;:5;:::i;8402:389:0:-;-1:-1:-1;;;;;8485:21:0;;8477:65;;;;-1:-1:-1;;;8477:65:0;;4847:2:6;8477:65:0;;;4829:21:6;4886:2;4866:18;;;4859:30;4925:33;4905:18;;;4898:61;4976:18;;8477:65:0;;;;;;;;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8645:18:0;;:9;:18;;;;;;;;;;:28;;8667:6;;8645:9;:28;;8667:6;;8645:28;:::i;:::-;;;;-1:-1:-1;;8688:37:0;;5284:25:6;;;-1:-1:-1;;;;;8688:37:0;;;8705:1;;8688:37;;5272:2:6;5257:18;8688:37:0;;;;;;;8402:389;;:::o;11786:121::-;;;;:::o;14:127:6:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:422;235:1;278:5;235:1;292:270;313:7;303:8;300:21;292:270;;;372:4;368:1;364:6;360:17;354:4;351:27;348:53;;;381:18;;:::i;:::-;431:7;421:8;417:22;414:55;;;451:16;;;;414:55;530:22;;;;490:15;;;;292:270;;;296:3;146:422;;;;;:::o;573:806::-;622:5;652:8;642:80;;-1:-1:-1;693:1:6;707:5;;642:80;741:4;731:76;;-1:-1:-1;778:1:6;792:5;;731:76;823:4;841:1;836:59;;;;909:1;904:130;;;;816:218;;836:59;866:1;857:10;;880:5;;;904:130;941:3;931:8;928:17;925:43;;;948:18;;:::i;:::-;-1:-1:-1;;1004:1:6;990:16;;1019:5;;816:218;;1118:2;1108:8;1105:16;1099:3;1093:4;1090:13;1086:36;1080:2;1070:8;1067:16;1062:2;1056:4;1053:12;1049:35;1046:77;1043:159;;;-1:-1:-1;1155:19:6;;;1187:5;;1043:159;1234:34;1259:8;1253:4;1234:34;:::i;:::-;1304:6;1300:1;1296:6;1292:19;1283:7;1280:32;1277:58;;;1315:18;;:::i;:::-;1353:20;;573:806;-1:-1:-1;;;573:806:6:o;1384:140::-;1442:5;1471:47;1512:4;1502:8;1498:19;1492:4;1471:47;:::i;1529:168::-;1569:7;1635:1;1631;1627:6;1623:14;1620:1;1617:21;1612:1;1605:9;1598:17;1594:45;1591:71;;;1642:18;;:::i;:::-;-1:-1:-1;1682:9:6;;1529:168::o;1702:127::-;1763:10;1758:3;1754:20;1751:1;1744:31;1794:4;1791:1;1784:15;1818:4;1815:1;1808:15;1834:380;1913:1;1909:12;;;;1956;;;1977:61;;2031:4;2023:6;2019:17;2009:27;;1977:61;2084:2;2076:6;2073:14;2053:18;2050:38;2047:161;;2130:10;2125:3;2121:20;2118:1;2111:31;2165:4;2162:1;2155:15;2193:4;2190:1;2183:15;2047:161;;1834:380;;;:::o;2345:545::-;2447:2;2442:3;2439:11;2436:448;;;2483:1;2508:5;2504:2;2497:17;2553:4;2549:2;2539:19;2623:2;2611:10;2607:19;2604:1;2600:27;2594:4;2590:38;2659:4;2647:10;2644:20;2641:47;;;-1:-1:-1;2682:4:6;2641:47;2737:2;2732:3;2728:12;2725:1;2721:20;2715:4;2711:31;2701:41;;2792:82;2810:2;2803:5;2800:13;2792:82;;;2855:17;;;2836:1;2825:13;2792:82;;;2796:3;;;2345:545;;;:::o;3066:1352::-;3186:10;;-1:-1:-1;;;;;3208:30:6;;3205:56;;;3241:18;;:::i;:::-;3270:97;3360:6;3320:38;3352:4;3346:11;3320:38;:::i;:::-;3314:4;3270:97;:::i;:::-;3422:4;;3486:2;3475:14;;3503:1;3498:663;;;;4205:1;4222:6;4219:89;;;-1:-1:-1;4274:19:6;;;4268:26;4219:89;-1:-1:-1;;3023:1:6;3019:11;;;3015:24;3011:29;3001:40;3047:1;3043:11;;;2998:57;4321:81;;3468:944;;3498:663;2292:1;2285:14;;;2329:4;2316:18;;-1:-1:-1;;3534:20:6;;;3652:236;3666:7;3663:1;3660:14;3652:236;;;3755:19;;;3749:26;3734:42;;3847:27;;;;3815:1;3803:14;;;;3682:19;;3652:236;;;3656:3;3916:6;3907:7;3904:19;3901:201;;;3977:19;;;3971:26;-1:-1:-1;;4060:1:6;4056:14;;;4072:3;4052:24;4048:37;4044:42;4029:58;4014:74;;3901:201;-1:-1:-1;;;;;4148:1:6;4132:14;;;4128:22;4115:36;;-1:-1:-1;3066:1352:6:o;4423:217::-;4463:1;4489;4479:132;;4533:10;4528:3;4524:20;4521:1;4514:31;4568:4;4565:1;4558:15;4596:4;4593:1;4586:15;4479:132;-1:-1:-1;4625:9:6;;4423:217::o;5005:128::-;5045:3;5076:1;5072:6;5069:1;5066:13;5063:39;;;5082:18;;:::i;:::-;-1:-1:-1;5118:9:6;;5005:128::o;5138:177::-;201:4365:5;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Bridge_1035": {
									"entryPoint": null,
									"id": 1035,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Path_1055": {
									"entryPoint": null,
									"id": 1055,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1543": {
									"entryPoint": null,
									"id": 1543,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_584": {
									"entryPoint": null,
									"id": 584,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_519": {
									"entryPoint": 3947,
									"id": 519,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_573": {
									"entryPoint": null,
									"id": 573,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_700": {
									"entryPoint": null,
									"id": 700,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_562": {
									"entryPoint": 4239,
									"id": 562,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_346": {
									"entryPoint": 4361,
									"id": 346,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_141": {
									"entryPoint": 2868,
									"id": 141,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_166": {
									"entryPoint": 1558,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_98": {
									"entryPoint": null,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@changeMinMaxPrivateSale_1392": {
									"entryPoint": 2911,
									"id": 1392,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@deadAddress_1041": {
									"entryPoint": null,
									"id": 1041,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_269": {
									"entryPoint": 2046,
									"id": 269,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_931": {
									"entryPoint": 3916,
									"id": 931,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@endSale_1356": {
									"entryPoint": 1620,
									"id": 1356,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@increaseAllowance_228": {
									"entryPoint": 1728,
									"id": 228,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@maxSupply_1074": {
									"entryPoint": null,
									"id": 1074,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@max_1060": {
									"entryPoint": null,
									"id": 1060,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@min_1066": {
									"entryPoint": null,
									"id": 1066,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_916": {
									"entryPoint": 3935,
									"id": 916,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_54": {
									"entryPoint": 1412,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@privateLimit_1069": {
									"entryPoint": null,
									"id": 1069,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSale_1289": {
									"entryPoint": 3087,
									"id": 1289,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setBridge_1539": {
									"entryPoint": 1895,
									"id": 1539,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPrivateLimit_1415": {
									"entryPoint": 1762,
									"id": 1415,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@startSale_1340": {
									"entryPoint": 3774,
									"id": 1340,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_64": {
									"entryPoint": 2031,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@theCompany_1038": {
									"entryPoint": null,
									"id": 1038,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 1584,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_1203": {
									"entryPoint": 3587,
									"id": 1203,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_123": {
									"entryPoint": 2169,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@viewSale_1307": {
									"entryPoint": null,
									"id": 1307,
									"parameterSlots": 0,
									"returnSlots": 4
								},
								"@withdrawalBNB_1523": {
									"entryPoint": 2183,
									"id": 1523,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@withdrawalToken_1468": {
									"entryPoint": 2511,
									"id": 1468,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_address": {
									"entryPoint": 5152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_address": {
									"entryPoint": 5095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_120d023a68dcb8cab4b4b31c143fc76ee23dd5a991f26e9b4032c89404dbdded__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_15899f662d7a614bf3c57644e7510671708691155c8806292fb4f45c1016663c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1c2d3c13e86f28ed18ad4b34d675b8ac811f8a03f815d44ab828417c04bb25b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_38786623120634324bd2170f44d0610e1fa516cac9a7f6e95c8969e3f13d035a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b56df502a2942e85cf034699d7908f5e5acd2577a219c55769be254bc3ea7d6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_46305072fb50c0438bd7a65f37da664a0a7c165dbfa7fd52c439a808fba616ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b8c03831c8bbcc5ea6afa167bff5a9451576692b7afd8364ac3181fc924bce33__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 5494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 5722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 5561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5417,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 4908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15057:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:6",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:6"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:6"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:6",
																"statements": []
															},
															"src": "294:140:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:6"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:6"
															},
															"nodeType": "YulIf",
															"src": "443:91:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:6",
														"type": ""
													}
												],
												"src": "14:597:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "661:86:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "725:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "734:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "737:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "727:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "727:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "727:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "684:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "695:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "710:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "715:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "706:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "706:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "719:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "702:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "702:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "691:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "691:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "681:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "681:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "674:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "674:50:6"
															},
															"nodeType": "YulIf",
															"src": "671:70:6"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "650:5:6",
														"type": ""
													}
												],
												"src": "616:131:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "839:228:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "885:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "894:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "897:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "887:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "887:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "887:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "860:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "869:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "856:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "856:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "881:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "852:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "852:32:6"
															},
															"nodeType": "YulIf",
															"src": "849:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "910:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "936:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "923:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "923:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "914:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "980:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "955:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "955:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "955:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "995:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1005:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "995:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1019:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1046:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1057:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1042:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1042:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1029:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1029:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1019:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "797:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "808:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "820:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "828:6:6",
														"type": ""
													}
												],
												"src": "752:315:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1167:92:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1177:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1189:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1200:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1185:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1185:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1177:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1219:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1244:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1237:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1237:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1230:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1230:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1212:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1212:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1136:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1147:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1158:4:6",
														"type": ""
													}
												],
												"src": "1072:187:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1365:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1375:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1387:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1398:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1383:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1383:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1375:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1417:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1428:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1410:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1410:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1410:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1334:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1345:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1356:4:6",
														"type": ""
													}
												],
												"src": "1264:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1550:352:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1596:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1605:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1608:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1598:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1598:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1598:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1571:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1580:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1567:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1567:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1563:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:32:6"
															},
															"nodeType": "YulIf",
															"src": "1560:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1621:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1647:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1634:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1634:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1625:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1691:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1666:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1666:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1666:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1706:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1716:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1706:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1730:47:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1762:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1773:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1758:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1758:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1745:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1745:32:6"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1734:7:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1811:7:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1786:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1786:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1786:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1828:17:6",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1838:7:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1828:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1854:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1881:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1892:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1877:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1877:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1864:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1854:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1500:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1511:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1523:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1531:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1539:6:6",
														"type": ""
													}
												],
												"src": "1446:456:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2008:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2018:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2030:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2041:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2026:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2026:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2018:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2060:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2075:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2091:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2096:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2087:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2087:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2100:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2083:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2083:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2071:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2071:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2053:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2053:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2053:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1977:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1988:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1999:4:6",
														"type": ""
													}
												],
												"src": "1907:203:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2212:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2222:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2234:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2245:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2230:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2230:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2222:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2264:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2279:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2287:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2275:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2275:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2257:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2257:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2257:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2181:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2192:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2203:4:6",
														"type": ""
													}
												],
												"src": "2115:184:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2489:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2499:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2511:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2522:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2507:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2507:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2499:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2542:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2553:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2535:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2535:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2535:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2580:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2591:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2576:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2576:18:6"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2596:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2569:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2569:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2569:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2623:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2634:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2619:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2619:18:6"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2639:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2612:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2612:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2612:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2666:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2677:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2662:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2662:18:6"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "2682:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2655:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2655:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2655:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2434:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2445:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2453:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2461:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2469:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2480:4:6",
														"type": ""
													}
												],
												"src": "2304:391:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2770:110:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2816:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2825:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2828:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2818:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2818:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2818:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2791:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2800:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2787:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2787:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2812:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2783:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2783:32:6"
															},
															"nodeType": "YulIf",
															"src": "2780:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2841:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2864:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2851:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2851:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2841:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2736:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2747:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2759:6:6",
														"type": ""
													}
												],
												"src": "2700:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2955:177:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3001:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3010:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3013:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3003:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3003:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3003:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2976:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2985:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2972:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2972:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2997:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2968:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2968:32:6"
															},
															"nodeType": "YulIf",
															"src": "2965:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3026:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3052:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3039:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3039:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3030:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3096:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3071:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3071:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3071:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3111:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3121:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3111:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2921:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2932:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2944:6:6",
														"type": ""
													}
												],
												"src": "2885:247:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3215:177:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3261:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3270:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3273:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3263:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3263:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3263:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3236:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3232:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3232:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3257:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3228:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3228:32:6"
															},
															"nodeType": "YulIf",
															"src": "3225:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3286:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3312:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3299:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3299:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3290:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3356:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3331:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3331:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3331:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3371:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3381:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3371:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3181:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3192:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3204:6:6",
														"type": ""
													}
												],
												"src": "3137:255:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3501:279:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3547:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3556:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3559:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3549:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3549:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3549:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3522:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3531:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3518:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3518:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3543:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3514:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3514:32:6"
															},
															"nodeType": "YulIf",
															"src": "3511:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3572:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3595:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3582:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3582:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3614:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3641:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3652:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3637:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3637:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3624:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3624:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3614:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3665:45:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3695:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3706:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3691:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3691:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3678:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3678:32:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3669:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3744:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3719:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3719:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3719:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3759:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3769:5:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3451:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3462:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3474:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3482:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3490:6:6",
														"type": ""
													}
												],
												"src": "3397:383:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3906:404:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3953:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3962:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3965:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3955:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3955:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3955:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3927:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3936:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3923:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3923:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3948:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3919:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3919:33:6"
															},
															"nodeType": "YulIf",
															"src": "3916:53:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3978:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4004:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3991:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3991:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3982:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4048:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4023:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4023:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4023:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4063:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4073:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4063:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4087:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4114:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4125:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4110:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4110:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4097:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4097:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4087:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4138:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4165:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4176:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4161:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4161:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4148:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4148:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4138:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4189:47:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4221:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4232:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4217:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4217:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4204:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:32:6"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "4193:7:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "4270:7:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4245:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4245:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4245:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4287:17:6",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "4297:7:6"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4287:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3848:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3859:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3871:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3879:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3887:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3895:6:6",
														"type": ""
													}
												],
												"src": "3785:525:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4402:301:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4448:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4457:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4460:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4450:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4450:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4450:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4423:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4432:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4419:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4419:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4444:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4415:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4415:32:6"
															},
															"nodeType": "YulIf",
															"src": "4412:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4473:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4499:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4486:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4486:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4477:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4543:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4518:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4518:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4518:31:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4558:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4568:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4558:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4582:47:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4614:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4625:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4610:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4610:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4597:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4597:32:6"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "4586:7:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "4663:7:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4638:24:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4638:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4638:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4680:17:6",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "4690:7:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4680:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4360:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4371:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4383:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4391:6:6",
														"type": ""
													}
												],
												"src": "4315:388:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4795:161:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4841:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4850:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4853:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4843:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4843:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4843:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4816:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4825:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4812:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4812:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4837:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4808:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4808:32:6"
															},
															"nodeType": "YulIf",
															"src": "4805:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4866:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4889:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4876:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4876:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4866:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4908:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4935:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4946:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4931:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4931:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4918:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4918:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4908:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4753:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4764:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4776:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4784:6:6",
														"type": ""
													}
												],
												"src": "4708:248:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5016:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5026:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5040:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5043:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5036:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5026:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5057:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5087:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5093:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5083:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5083:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5061:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5134:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5136:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5150:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5158:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5146:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5146:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5136:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5114:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5107:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5107:26:6"
															},
															"nodeType": "YulIf",
															"src": "5104:61:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5224:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5245:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5252:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5257:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5248:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5248:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5238:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5238:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5238:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5289:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5292:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5282:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5282:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5282:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5317:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5320:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5310:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5310:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5310:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5180:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5203:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5211:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5200:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5200:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5177:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5177:38:6"
															},
															"nodeType": "YulIf",
															"src": "5174:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4996:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5005:6:6",
														"type": ""
													}
												],
												"src": "4961:380:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5520:166:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5537:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5530:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5530:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5530:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5571:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5582:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5567:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5567:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5587:2:6",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5560:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5560:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5560:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5610:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5621:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5606:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5606:18:6"
																	},
																	{
																		"hexValue": "63616c6c6572206e6f74206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5626:18:6",
																		"type": "",
																		"value": "caller not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5599:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5599:46:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5599:46:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5654:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5666:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5677:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5662:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5662:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5654:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_38786623120634324bd2170f44d0610e1fa516cac9a7f6e95c8969e3f13d035a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5497:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5511:4:6",
														"type": ""
													}
												],
												"src": "5346:340:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5723:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5740:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5747:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5752:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5743:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5743:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5733:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5733:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5733:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5780:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5783:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5773:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5773:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5773:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5804:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5807:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5797:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5797:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5797:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5691:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5871:80:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5898:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5900:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5900:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5900:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5887:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5894:1:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5890:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5890:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5884:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5884:13:6"
															},
															"nodeType": "YulIf",
															"src": "5881:39:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5929:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5940:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5943:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5936:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5936:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5929:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5854:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5857:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5863:3:6",
														"type": ""
													}
												],
												"src": "5823:128:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6130:154:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6147:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6158:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6140:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6140:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6140:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6181:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6192:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6177:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6177:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6197:1:6",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6170:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6170:29:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6170:29:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6219:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6230:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6215:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6215:18:6"
																	},
																	{
																		"hexValue": "5a65726f21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6235:7:6",
																		"type": "",
																		"value": "Zero!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6208:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6208:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6208:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6252:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6264:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6275:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6260:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6260:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6252:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_46305072fb50c0438bd7a65f37da664a0a7c165dbfa7fd52c439a808fba616ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6107:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6121:4:6",
														"type": ""
													}
												],
												"src": "5956:328:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6398:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6408:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6420:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6431:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6416:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6416:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6408:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6450:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6465:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6481:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6486:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6477:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6477:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6490:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6473:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6473:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6461:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6461:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6443:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6443:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6443:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6367:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6378:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6389:4:6",
														"type": ""
													}
												],
												"src": "6289:211:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6679:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6696:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6707:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6689:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6689:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6689:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6730:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6741:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6726:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6726:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6746:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6719:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6719:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6719:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6769:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6780:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6765:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6765:18:6"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6785:34:6",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6758:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6758:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6758:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6840:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6851:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6836:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6836:18:6"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6856:7:6",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6829:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6829:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6829:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6873:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6885:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6896:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6881:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6881:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6873:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6656:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6670:4:6",
														"type": ""
													}
												],
												"src": "6505:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7085:156:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7102:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7113:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7095:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7095:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7095:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7136:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7147:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7132:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7132:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7152:1:6",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7125:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7125:29:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7125:29:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7174:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7185:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7170:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7170:18:6"
																	},
																	{
																		"hexValue": "4e6f20424e4221",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7190:9:6",
																		"type": "",
																		"value": "No BNB!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7163:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7163:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7163:37:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7209:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7221:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7232:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7217:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7217:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7209:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_120d023a68dcb8cab4b4b31c143fc76ee23dd5a991f26e9b4032c89404dbdded__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7062:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7076:4:6",
														"type": ""
													}
												],
												"src": "6911:330:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7420:162:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7437:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7448:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7430:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7430:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7430:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7471:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7482:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7467:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7467:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7487:2:6",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7460:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7460:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7460:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7510:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7521:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7506:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7506:18:6"
																	},
																	{
																		"hexValue": "5a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7526:14:6",
																		"type": "",
																		"value": "Zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7499:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7499:42:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7499:42:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7550:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7562:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7573:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7558:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7558:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7550:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7397:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7411:4:6",
														"type": ""
													}
												],
												"src": "7246:336:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7651:358:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7661:16:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7676:1:6",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "7665:7:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7686:16:6",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "7695:7:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7686:5:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7711:13:6",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "7719:5:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "7711:4:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7775:228:6",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7820:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "7822:16:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7822:18:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7822:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7795:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7809:1:6",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7805:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7805:6:6"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "7813:4:6"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "7801:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7801:17:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "7792:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7792:27:6"
																		},
																		"nodeType": "YulIf",
																		"src": "7789:53:6"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7881:29:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "7883:25:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "7896:5:6"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "7903:4:6"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "7892:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7892:16:6"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "7883:5:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "7862:8:6"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "7872:7:6"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7858:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7858:22:6"
																		},
																		"nodeType": "YulIf",
																		"src": "7855:55:6"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7923:23:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7935:4:6"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7941:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "7931:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7931:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "7923:4:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7959:34:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "7975:7:6"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "7984:8:6"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "7971:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7971:22:6"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "7959:8:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7744:8:6"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "7754:7:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7741:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7741:21:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7763:3:6",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7737:3:6",
																"statements": []
															},
															"src": "7733:270:6"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "7615:5:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "7622:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "7635:5:6",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "7642:4:6",
														"type": ""
													}
												],
												"src": "7587:422:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8073:747:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8111:52:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8125:10:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "8134:1:6",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "8125:5:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "8148:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "8093:8:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8086:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8086:16:6"
															},
															"nodeType": "YulIf",
															"src": "8083:80:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8196:52:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8210:10:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "8219:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "8210:5:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "8233:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8182:4:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8175:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8175:12:6"
															},
															"nodeType": "YulIf",
															"src": "8172:76:6"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8284:52:6",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "8298:10:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8307:1:6",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "8298:5:6"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "8321:5:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8277:59:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8282:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8352:123:6",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8387:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "8389:16:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8389:18:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8389:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "8372:8:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8382:3:6",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "8369:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8369:17:6"
																				},
																				"nodeType": "YulIf",
																				"src": "8366:43:6"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "8422:25:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "8435:8:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8445:1:6",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8431:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8431:16:6"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "8422:5:6"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "8460:5:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8345:130:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8350:1:6",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "8264:4:6"
															},
															"nodeType": "YulSwitch",
															"src": "8257:218:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8573:70:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8587:28:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "8600:4:6"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "8606:8:6"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "8596:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8596:19:6"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "8587:5:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "8628:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "8497:4:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8503:2:6",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "8494:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8494:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "8511:8:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8521:2:6",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "8508:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8508:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8490:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8490:35:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "8534:4:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8540:3:6",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "8531:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8531:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "8549:8:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8559:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "8546:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8546:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8527:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8527:36:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8487:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8487:77:6"
															},
															"nodeType": "YulIf",
															"src": "8484:159:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8652:57:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8694:4:6"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "8700:8:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "8675:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8675:34:6"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "8656:7:6",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "8665:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8754:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8756:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8756:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8756:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "8724:7:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8741:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "8737:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8737:6:6"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "8745:6:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "8733:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8733:19:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8721:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8721:32:6"
															},
															"nodeType": "YulIf",
															"src": "8718:58:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8785:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "8798:7:6"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "8807:6:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8794:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8794:20:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "8785:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "8044:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "8050:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "8063:5:6",
														"type": ""
													}
												],
												"src": "8014:806:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8895:61:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8905:45:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8935:4:6"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "8941:8:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "8914:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:36:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "8905:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "8866:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "8872:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "8885:5:6",
														"type": ""
													}
												],
												"src": "8825:131:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9118:188:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9128:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9140:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9151:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9136:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9136:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9128:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9170:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9181:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9163:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9163:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9163:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9208:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9219:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9204:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9204:18:6"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9224:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9197:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9197:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9197:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9251:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9262:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9247:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9247:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "9271:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9287:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9292:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9283:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9283:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9296:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9279:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9279:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9267:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9267:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9240:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9240:60:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9240:60:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9071:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9082:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9090:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9098:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9109:4:6",
														"type": ""
													}
												],
												"src": "8961:345:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9363:116:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9422:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9424:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9424:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9424:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9394:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9387:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9387:9:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9380:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9380:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9402:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9413:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "9409:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9409:6:6"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9417:1:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "9405:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9405:14:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9399:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9399:21:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9376:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9376:45:6"
															},
															"nodeType": "YulIf",
															"src": "9373:71:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9453:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9468:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9471:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9464:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9464:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9453:7:6"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9342:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9345:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9351:7:6",
														"type": ""
													}
												],
												"src": "9311:168:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9658:163:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9675:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9686:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9668:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9668:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9668:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9709:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9720:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9705:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9705:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9725:2:6",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9698:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9698:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9698:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9748:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9759:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9744:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9744:18:6"
																	},
																	{
																		"hexValue": "61646472657373207a65726f21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9764:15:6",
																		"type": "",
																		"value": "address zero!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9737:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9737:43:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9737:43:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9789:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9801:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9812:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9797:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9797:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9789:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_15899f662d7a614bf3c57644e7510671708691155c8806292fb4f45c1016663c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9635:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9649:4:6",
														"type": ""
													}
												],
												"src": "9484:337:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10011:262:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10021:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10033:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10044:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10029:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10029:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10021:4:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10057:29:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10075:3:6",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10080:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10071:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10071:11:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10084:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10067:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10067:19:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10061:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10102:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10117:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10125:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10113:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10113:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10095:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10095:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10095:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10149:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10160:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10145:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10145:18:6"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10165:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10138:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10138:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10138:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10192:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10203:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10188:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10188:18:6"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10208:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10181:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10181:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10181:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10235:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10246:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10231:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10231:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "10255:6:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10263:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10251:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10251:15:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10224:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10224:43:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10224:43:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9956:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9967:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9975:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9983:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9991:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10002:4:6",
														"type": ""
													}
												],
												"src": "9826:447:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10407:145:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10417:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10429:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10440:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10425:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10425:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10417:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10459:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10474:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10490:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10495:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "10486:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10486:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10499:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "10482:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10482:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10470:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10470:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10452:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10452:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10452:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10523:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10534:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10519:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10519:18:6"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10539:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10512:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10512:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10512:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10368:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10379:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10387:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10398:4:6",
														"type": ""
													}
												],
												"src": "10278:274:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10635:199:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10681:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10690:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10693:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10683:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10683:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10683:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10656:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10665:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10652:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10652:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10677:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10648:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10648:32:6"
															},
															"nodeType": "YulIf",
															"src": "10645:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10706:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10725:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10719:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10719:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "10710:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10788:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10797:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10800:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10790:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10790:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10790:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10757:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "10778:5:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "10771:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10771:13:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10764:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10764:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10754:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10754:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10747:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10747:40:6"
															},
															"nodeType": "YulIf",
															"src": "10744:60:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10813:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10823:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10813:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10601:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10612:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10624:6:6",
														"type": ""
													}
												],
												"src": "10557:277:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10968:119:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10978:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10990:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11001:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10986:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10986:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10978:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11020:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11031:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11013:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11013:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11013:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11058:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11069:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11054:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11054:18:6"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11074:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11047:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11047:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11047:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10929:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10940:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10948:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10959:4:6",
														"type": ""
													}
												],
												"src": "10839:248:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11266:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11283:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11294:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11276:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11276:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11276:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11317:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11328:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11313:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11313:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11333:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11306:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11306:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11306:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11356:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11367:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11352:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11352:18:6"
																	},
																	{
																		"hexValue": "596f75207265616368656420796f757220707269766174652073616c65206c69",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11372:34:6",
																		"type": "",
																		"value": "You reached your private sale li"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11345:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11345:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11345:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11427:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11438:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11423:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11423:18:6"
																	},
																	{
																		"hexValue": "6d6974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11443:5:6",
																		"type": "",
																		"value": "mit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11416:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11416:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11416:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11458:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11470:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11481:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11466:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11466:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11458:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1c2d3c13e86f28ed18ad4b34d675b8ac811f8a03f815d44ab828417c04bb25b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11243:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11257:4:6",
														"type": ""
													}
												],
												"src": "11092:399:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11670:233:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11687:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11698:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11680:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11680:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11680:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11721:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11732:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11717:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11717:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11737:2:6",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11710:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11710:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11710:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11760:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11771:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11756:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11756:18:6"
																	},
																	{
																		"hexValue": "507269766174652053616c652068617320656e646564206f7220646964206e6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11776:34:6",
																		"type": "",
																		"value": "Private Sale has ended or did no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11749:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11749:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11749:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11831:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11842:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11827:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11827:18:6"
																	},
																	{
																		"hexValue": "7420737461727420796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11847:13:6",
																		"type": "",
																		"value": "t start yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11820:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11820:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11820:41:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11870:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11882:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11893:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11878:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11878:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11870:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b56df502a2942e85cf034699d7908f5e5acd2577a219c55769be254bc3ea7d6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11647:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11661:4:6",
														"type": ""
													}
												],
												"src": "11496:407:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12082:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12099:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12110:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12092:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12092:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12092:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12133:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12144:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12129:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12129:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12149:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12122:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12122:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12122:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12172:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12183:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12168:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12168:18:6"
																	},
																	{
																		"hexValue": "4c657373207468616e204d696e696d756d206f72204d6f7265207468616e204d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12188:34:6",
																		"type": "",
																		"value": "Less than Minimum or More than M"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12161:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12161:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12161:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12243:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12254:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12239:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12239:18:6"
																	},
																	{
																		"hexValue": "6178696d756d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12259:8:6",
																		"type": "",
																		"value": "aximum"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12232:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12232:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12232:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12277:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12289:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12300:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12285:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12285:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12277:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b8c03831c8bbcc5ea6afa167bff5a9451576692b7afd8364ac3181fc924bce33__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12059:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12073:4:6",
														"type": ""
													}
												],
												"src": "11908:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12362:88:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12393:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12395:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12395:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12395:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12378:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12389:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12385:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12385:6:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12375:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12375:17:6"
															},
															"nodeType": "YulIf",
															"src": "12372:43:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12424:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12435:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12442:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12431:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12431:13:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12424:3:6"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12344:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12354:3:6",
														"type": ""
													}
												],
												"src": "12315:135:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12501:171:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12532:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12553:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12560:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12565:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "12556:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12556:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12546:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12546:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12546:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12597:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12600:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12590:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12590:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12590:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12625:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12628:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12618:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12618:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12618:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12521:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12514:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12514:9:6"
															},
															"nodeType": "YulIf",
															"src": "12511:132:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12652:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12661:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12664:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12657:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12657:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12652:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12486:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12489:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12495:1:6",
														"type": ""
													}
												],
												"src": "12455:217:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12851:226:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12868:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12879:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12861:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12861:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12861:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12902:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12913:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12898:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12898:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12918:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12891:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12891:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12891:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12941:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12952:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12937:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12937:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12957:34:6",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12930:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12930:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12930:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13012:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13023:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13008:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13008:18:6"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13028:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13001:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13001:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13001:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13044:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13056:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13067:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13052:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13052:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13044:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12828:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12842:4:6",
														"type": ""
													}
												],
												"src": "12677:400:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13256:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13273:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13284:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13266:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13266:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13266:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13307:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13318:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13303:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13303:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13323:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13296:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13296:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13296:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13346:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13357:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13342:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13342:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13362:34:6",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13335:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13335:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13335:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13417:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13428:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13413:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13413:18:6"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13433:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13406:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13406:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13406:32:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13447:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13459:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13470:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13455:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13455:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13447:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13233:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13247:4:6",
														"type": ""
													}
												],
												"src": "13082:398:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13659:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13676:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13687:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13669:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13669:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13669:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13710:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13721:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13706:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13706:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13726:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13699:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13699:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13699:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13749:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13760:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13745:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13745:18:6"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13765:31:6",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13738:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13738:59:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13738:59:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13806:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13818:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13829:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13814:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13814:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13806:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13636:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13650:4:6",
														"type": ""
													}
												],
												"src": "13485:353:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14017:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14034:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14045:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14027:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14027:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14027:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14068:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14079:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14064:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14064:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14084:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14057:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14057:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14057:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14107:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14118:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14103:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14103:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14123:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14096:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14096:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14096:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14178:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14189:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14174:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14174:18:6"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14194:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14167:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14167:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14167:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14211:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14223:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14234:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14219:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14219:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14211:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13994:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14008:4:6",
														"type": ""
													}
												],
												"src": "13843:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14423:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14440:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14451:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14433:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14433:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14433:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14474:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14485:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14470:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14470:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14490:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14463:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14463:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14463:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14513:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14524:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14509:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14509:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14529:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14502:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14502:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14502:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14584:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14595:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14580:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14580:18:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14600:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14573:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14573:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14573:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14615:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14627:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14638:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14623:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14623:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14615:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14400:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14414:4:6",
														"type": ""
													}
												],
												"src": "14249:399:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14827:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14844:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14855:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14837:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14837:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14837:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14878:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14889:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14874:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14874:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14894:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14867:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14867:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14867:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14917:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14928:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14913:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14913:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14933:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14906:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14906:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14906:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14988:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14999:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14984:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14984:18:6"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15004:8:6",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14977:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14977:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14977:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15022:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15034:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15045:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15030:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15030:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15022:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14804:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14818:4:6",
														"type": ""
													}
												],
												"src": "14653:402:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value3 := value_1\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_38786623120634324bd2170f44d0610e1fa516cac9a7f6e95c8969e3f13d035a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"caller not owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_46305072fb50c0438bd7a65f37da664a0a7c165dbfa7fd52c439a808fba616ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 5)\n        mstore(add(headStart, 64), \"Zero!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_120d023a68dcb8cab4b4b31c143fc76ee23dd5a991f26e9b4032c89404dbdded__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"No BNB!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_15899f662d7a614bf3c57644e7510671708691155c8806292fb4f45c1016663c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"address zero!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_1c2d3c13e86f28ed18ad4b34d675b8ac811f8a03f815d44ab828417c04bb25b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"You reached your private sale li\")\n        mstore(add(headStart, 96), \"mit\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b56df502a2942e85cf034699d7908f5e5acd2577a219c55769be254bc3ea7d6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Private Sale has ended or did no\")\n        mstore(add(headStart, 96), \"t start yet\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b8c03831c8bbcc5ea6afa167bff5a9451576692b7afd8364ac3181fc924bce33__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Less than Minimum or More than M\")\n        mstore(add(headStart, 96), \"aximum\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101c65760003560e01c80638dd14802116100f7578063dd62ed3e11610095578063e7d53fcb11610064578063e7d53fcb1461051b578063f2fde38b1461052e578063f4f3122e1461054e578063f88979451461056e57600080fd5b8063dd62ed3e1461049d578063deea800d146104bd578063e181203a146104d3578063e4993d8c146104f357600080fd5b8063a9059cbb116100d1578063a9059cbb14610427578063adbc7cee14610447578063b2938bee14610467578063d5abeb011461048757600080fd5b80638dd14802146103d257806395d89b41146103f2578063a457c2d71461040757600080fd5b80633950935111610164578063534b14421161013e578063534b1442146103465780635fa2ef10146103665780636ac5db191461038657806370a082311461039c57600080fd5b806339509351146102d75780633c3b7995146102f75780634d1d03d11461030d57600080fd5b806323b872dd116101a057806323b872dd1461024c57806327c8f8351461026c578063313ce567146102a4578063380d831b146102c057600080fd5b806306fdde03146101d2578063095ea7b3146101fd57806318160ddd1461022d57600080fd5b366101cd57005b600080fd5b3480156101de57600080fd5b506101e7610584565b6040516101f491906112d7565b60405180910390f35b34801561020957600080fd5b5061021d610218366004611344565b610616565b60405190151581526020016101f4565b34801561023957600080fd5b506002545b6040519081526020016101f4565b34801561025857600080fd5b5061021d610267366004611370565b610630565b34801561027857600080fd5b5060075461028c906001600160a01b031681565b6040516001600160a01b0390911681526020016101f4565b3480156102b057600080fd5b50604051601281526020016101f4565b3480156102cc57600080fd5b506102d5610654565b005b3480156102e357600080fd5b5061021d6102f2366004611344565b6106c0565b34801561030357600080fd5b5061023e600f5481565b34801561031957600080fd5b50600854600954600a54600b546040805194855260208501939093529183015260608201526080016101f4565b34801561035257600080fd5b506102d56103613660046113b1565b6106e2565b34801561037257600080fd5b5060065461028c906001600160a01b031681565b34801561039257600080fd5b5061023e600d5481565b3480156103a857600080fd5b5061023e6103b73660046113ca565b6001600160a01b031660009081526020819052604090205490565b3480156103de57600080fd5b506102d56103ed3660046113ca565b610767565b3480156103fe57600080fd5b506101e76107ef565b34801561041357600080fd5b5061021d610422366004611344565b6107fe565b34801561043357600080fd5b5061021d610442366004611344565b610879565b34801561045357600080fd5b506102d56104623660046113e7565b610887565b34801561047357600080fd5b506102d5610482366004611420565b6109cf565b34801561049357600080fd5b5061023e60105481565b3480156104a957600080fd5b5061023e6104b836600461146a565b610b34565b3480156104c957600080fd5b5061023e600c5481565b3480156104df57600080fd5b506102d56104ee3660046114a3565b610b5f565b3480156104ff57600080fd5b5061028c73c6e5347d1a5fe685160429705e9e26bd3bba8fea81565b61021d6105293660046113ca565b610c0f565b34801561053a57600080fd5b506102d56105493660046113ca565b610e03565b34801561055a57600080fd5b506102d56105693660046114a3565b610ebe565b34801561057a57600080fd5b5061023e600e5481565b606060038054610593906114c5565b80601f01602080910402602001604051908101604052809291908181526020018280546105bf906114c5565b801561060c5780601f106105e15761010080835404028352916020019161060c565b820191906000526020600020905b8154815290600101906020018083116105ef57829003601f168201915b5050505050905090565b600033610624818585610f6b565b60019150505b92915050565b60003361063e85828561108f565b610649858585611109565b506001949350505050565b6005546001600160a01b031633146106875760405162461bcd60e51b815260040161067e906114ff565b60405180910390fd5b436009556040514281527fb144be0f16f8d30f2e18ef8f7938d5e90207932d96650e592ff47725716818fb9060200160405180910390a1565b6000336106248185856106d38383610b34565b6106dd919061153f565b610f6b565b6005546001600160a01b0316331461070c5760405162461bcd60e51b815260040161067e906114ff565b8060000361072c5760405162461bcd60e51b815260040161067e90611557565b600f8190556040518181527f6d487f3988610155b3a9ef590f8ac170134d24e6505b9ddd3160e34abaa0edaf9060200160405180910390a150565b6005546001600160a01b031633146107915760405162461bcd60e51b815260040161067e906114ff565b6040516001600160a01b03821681527fe605ac02ea219003ec58fc9cf4d4b3c5f2d62ec39807b1c63886ddd47a6fcd6e9060200160405180910390a1600680546001600160a01b0319166001600160a01b0392909216919091179055565b606060048054610593906114c5565b6000338161080c8286610b34565b90508381101561086c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161067e565b6106498286868403610f6b565b600033610624818585611109565b6005546001600160a01b031633146108b15760405162461bcd60e51b815260040161067e906114ff565b824710156108eb5760405162461bcd60e51b81526020600482015260076024820152664e6f20424e422160c81b604482015260640161067e565b6001600160a01b0381166109305760405162461bcd60e51b815260206004820152600c60248201526b5a65726f206164647265737360a01b604482015260640161067e565b600061093d83600a61165a565b60408051868152602081018690526001600160a01b0385168183015290519192507f4508977418b95bac209196e03356692c2d8f47957dec1c15af1a44cc40d39a04919081900360600190a16001600160a01b0382166108fc6109a08387611666565b6040518115909202916000818181858888f193505050501580156109c8573d6000803e3d6000fd5b5050505050565b6005546001600160a01b031633146109f95760405162461bcd60e51b815260040161067e906114ff565b6001600160a01b038416610a3f5760405162461bcd60e51b815260206004820152600d60248201526c61646472657373207a65726f2160981b604482015260640161067e565b6000610a4c83600a61165a565b604080516001600160a01b0388811682526020820188905281830187905285166060820152905191925086917f0206ca7f97d46974ed97b981f879b17e9e1fe17ead63770c806926d28aa5cbd59181900360800190a16001600160a01b03811663a9059cbb84610abc8589611666565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610b07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2b9190611685565b50505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546001600160a01b03163314610b895760405162461bcd60e51b815260040161067e906114ff565b8115801590610b9757508015155b610bb35760405162461bcd60e51b815260040161067e90611557565b600e829055600c54610bc59082611666565b600d819055600e546040517f3b06ffd21bedfb2c375d7b1bcf74ca4fe1afe205699e39610b3aced7adf6b9e992610c03928252602082015260400190565b60405180910390a15050565b6000600c54600f54610c219190611666565b336000908152602081905260409020541115610c8b5760405162461bcd60e51b815260206004820152602360248201527f596f75207265616368656420796f757220707269766174652073616c65206c696044820152621b5a5d60ea1b606482015260840161067e565b4360085411158015610c9f57506009544311155b610cff5760405162461bcd60e51b815260206004820152602b60248201527f507269766174652053616c652068617320656e646564206f7220646964206e6f60448201526a1d081cdd185c9d081e595d60aa1b606482015260840161067e565b600e5434906000908210801590610d185750600d548211155b610d735760405162461bcd60e51b815260206004820152602660248201527f4c657373207468616e204d696e696d756d206f72204d6f7265207468616e204d6044820152656178696d756d60d01b606482015260840161067e565b610d9a670de0b6b3a7640000610d9484600b54610f5f90919063ffffffff16565b90610f4c565b600a80549192506000610dac836116a7565b9190505550610dbc303383611109565b600b546040805183815260208101929092527fb887e151dbfcc06b4ce4f67f9bbedaeb16ab224e34c6668858d0310c6d18ffc3910160405180910390a15060019392505050565b6005546001600160a01b03163314610e2d5760405162461bcd60e51b815260040161067e906114ff565b6001600160a01b038116610e725760405162461bcd60e51b815260206004820152600c60248201526b5a65726f206164647265737360a01b604482015260640161067e565b600580546001600160a01b0319166001600160a01b03831690811790915560405181907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b6005546001600160a01b03163314610ee85760405162461bcd60e51b815260040161067e906114ff565b8115801590610ef657508015155b610f125760405162461bcd60e51b815260040161067e90611557565b6009829055600b8190556040518281527f1dc13bd033e49239661ba80e30ae191b1c31c79277b531e88246c7517971b85d90602001610c03565b6000610f5882846116c0565b9392505050565b6000610f588284611666565b6001600160a01b038316610fcd5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161067e565b6001600160a01b03821661102e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161067e565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061109b8484610b34565b9050600019811461110357818110156110f65760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161067e565b6111038484848403610f6b565b50505050565b6001600160a01b03831661116d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161067e565b6001600160a01b0382166111cf5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161067e565b6001600160a01b038316600090815260208190526040902054818110156112475760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161067e565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061127e90849061153f565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516112ca91815260200190565b60405180910390a3611103565b600060208083528351808285015260005b81811015611304578581018301518582016040015282016112e8565b81811115611316576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b038116811461134157600080fd5b50565b6000806040838503121561135757600080fd5b82356113628161132c565b946020939093013593505050565b60008060006060848603121561138557600080fd5b83356113908161132c565b925060208401356113a08161132c565b929592945050506040919091013590565b6000602082840312156113c357600080fd5b5035919050565b6000602082840312156113dc57600080fd5b8135610f588161132c565b6000806000606084860312156113fc57600080fd5b833592506020840135915060408401356114158161132c565b809150509250925092565b6000806000806080858703121561143657600080fd5b84356114418161132c565b93506020850135925060408501359150606085013561145f8161132c565b939692955090935050565b6000806040838503121561147d57600080fd5b82356114888161132c565b915060208301356114988161132c565b809150509250929050565b600080604083850312156114b657600080fd5b50508035926020909101359150565b600181811c908216806114d957607f821691505b6020821081036114f957634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526010908201526f31b0b63632b9103737ba1037bbb732b960811b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561155257611552611529565b500190565b6020808252600590820152645a65726f2160d81b604082015260600190565b600181815b808511156115b157816000190482111561159757611597611529565b808516156115a457918102915b93841c939080029061157b565b509250929050565b6000826115c85750600161062a565b816115d55750600061062a565b81600181146115eb57600281146115f557611611565b600191505061062a565b60ff84111561160657611606611529565b50506001821b61062a565b5060208310610133831016604e8410600b8410161715611634575081810a61062a565b61163e8383611576565b806000190482111561165257611652611529565b029392505050565b6000610f5883836115b9565b600081600019048311821515161561168057611680611529565b500290565b60006020828403121561169757600080fd5b81518015158114610f5857600080fd5b6000600182016116b9576116b9611529565b5060010190565b6000826116dd57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212200a963f3f13e8d262ea5b3eefd0d43cb3fd0d3285657c6dd13917b2294ea3dbe064736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DD14802 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE7D53FCB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE7D53FCB EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x52E JUMPI DUP1 PUSH4 0xF4F3122E EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0xF8897945 EQ PUSH2 0x56E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0xDEEA800D EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xE181203A EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0xE4993D8C EQ PUSH2 0x4F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0xADBC7CEE EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0xB2938BEE EQ PUSH2 0x467 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DD14802 EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x534B1442 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x534B1442 EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x5FA2EF10 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x6AC5DB19 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x3C3B7995 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x4D1D03D1 EQ PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x27C8F835 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x380D831B EQ PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1CD JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x584 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x1344 JUMP JUMPDEST PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0x1370 JUMP JUMPDEST PUSH2 0x630 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x28C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x654 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1344 JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x1F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x361 CALLDATASIZE PUSH1 0x4 PUSH2 0x13B1 JUMP JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x28C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH2 0x3B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x13CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x3ED CALLDATASIZE PUSH1 0x4 PUSH2 0x13CA JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x7EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x422 CALLDATASIZE PUSH1 0x4 PUSH2 0x1344 JUMP JUMPDEST PUSH2 0x7FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0x442 CALLDATASIZE PUSH1 0x4 PUSH2 0x1344 JUMP JUMPDEST PUSH2 0x879 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x462 CALLDATASIZE PUSH1 0x4 PUSH2 0x13E7 JUMP JUMPDEST PUSH2 0x887 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x482 CALLDATASIZE PUSH1 0x4 PUSH2 0x1420 JUMP JUMPDEST PUSH2 0x9CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH2 0x4B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x146A JUMP JUMPDEST PUSH2 0xB34 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x4EE CALLDATASIZE PUSH1 0x4 PUSH2 0x14A3 JUMP JUMPDEST PUSH2 0xB5F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH20 0xC6E5347D1A5FE685160429705E9E26BD3BBA8FEA DUP2 JUMP JUMPDEST PUSH2 0x21D PUSH2 0x529 CALLDATASIZE PUSH1 0x4 PUSH2 0x13CA JUMP JUMPDEST PUSH2 0xC0F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x549 CALLDATASIZE PUSH1 0x4 PUSH2 0x13CA JUMP JUMPDEST PUSH2 0xE03 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x569 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A3 JUMP JUMPDEST PUSH2 0xEBE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x593 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5BF SWAP1 PUSH2 0x14C5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x60C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5E1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x60C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5EF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x624 DUP2 DUP6 DUP6 PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x63E DUP6 DUP3 DUP6 PUSH2 0x108F JUMP JUMPDEST PUSH2 0x649 DUP6 DUP6 DUP6 PUSH2 0x1109 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST NUMBER PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0xB144BE0F16F8D30F2E18EF8F7938D5E90207932D96650E592FF47725716818FB SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x624 DUP2 DUP6 DUP6 PUSH2 0x6D3 DUP4 DUP4 PUSH2 0xB34 JUMP JUMPDEST PUSH2 0x6DD SWAP2 SWAP1 PUSH2 0x153F JUMP JUMPDEST PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x70C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0x14FF JUMP JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x72C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0x1557 JUMP JUMPDEST PUSH1 0xF DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x6D487F3988610155B3A9EF590F8AC170134D24E6505B9DDD3160E34ABAA0EDAF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x791 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 MSTORE PUSH32 0xE605AC02EA219003EC58FC9CF4D4B3C5F2D62EC39807B1C63886DDD47A6FCD6E SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x593 SWAP1 PUSH2 0x14C5 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x80C DUP3 DUP7 PUSH2 0xB34 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x67E JUMP JUMPDEST PUSH2 0x649 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x624 DUP2 DUP6 DUP6 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0x14FF JUMP JUMPDEST DUP3 SELFBALANCE LT ISZERO PUSH2 0x8EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x4E6F20424E4221 PUSH1 0xC8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x67E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A65726F2061646472657373 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x67E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x93D DUP4 PUSH1 0xA PUSH2 0x165A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0x4508977418B95BAC209196E03356692C2D8F47957DEC1C15AF1A44CC40D39A04 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8FC PUSH2 0x9A0 DUP4 DUP8 PUSH2 0x1666 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xA3F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x61646472657373207A65726F21 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x67E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA4C DUP4 PUSH1 0xA PUSH2 0x165A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 DUP4 ADD DUP8 SWAP1 MSTORE DUP6 AND PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP DUP7 SWAP2 PUSH32 0x206CA7F97D46974ED97B981F879B17E9E1FE17EAD63770C806926D28AA5CBD5 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH4 0xA9059CBB DUP5 PUSH2 0xABC DUP6 DUP10 PUSH2 0x1666 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB2B SWAP2 SWAP1 PUSH2 0x1685 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0x14FF JUMP JUMPDEST DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xB97 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST PUSH2 0xBB3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0x1557 JUMP JUMPDEST PUSH1 0xE DUP3 SWAP1 SSTORE PUSH1 0xC SLOAD PUSH2 0xBC5 SWAP1 DUP3 PUSH2 0x1666 JUMP JUMPDEST PUSH1 0xD DUP2 SWAP1 SSTORE PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH32 0x3B06FFD21BEDFB2C375D7B1BCF74CA4FE1AFE205699E39610B3ACED7ADF6B9E9 SWAP3 PUSH2 0xC03 SWAP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD PUSH1 0xF SLOAD PUSH2 0xC21 SWAP2 SWAP1 PUSH2 0x1666 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0xC8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75207265616368656420796F757220707269766174652073616C65206C69 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1B5A5D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x67E JUMP JUMPDEST NUMBER PUSH1 0x8 SLOAD GT ISZERO DUP1 ISZERO PUSH2 0xC9F JUMPI POP PUSH1 0x9 SLOAD NUMBER GT ISZERO JUMPDEST PUSH2 0xCFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x507269766174652053616C652068617320656E646564206F7220646964206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1D081CDD185C9D081E595D PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x67E JUMP JUMPDEST PUSH1 0xE SLOAD CALLVALUE SWAP1 PUSH1 0x0 SWAP1 DUP3 LT DUP1 ISZERO SWAP1 PUSH2 0xD18 JUMPI POP PUSH1 0xD SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0xD73 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C657373207468616E204D696E696D756D206F72204D6F7265207468616E204D PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6178696D756D PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x67E JUMP JUMPDEST PUSH2 0xD9A PUSH8 0xDE0B6B3A7640000 PUSH2 0xD94 DUP5 PUSH1 0xB SLOAD PUSH2 0xF5F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 PUSH2 0xDAC DUP4 PUSH2 0x16A7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0xDBC ADDRESS CALLER DUP4 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xB887E151DBFCC06B4CE4F67F9BBEDAEB16AB224E34C6668858D0310C6D18FFC3 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE2D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x5A65726F2061646472657373 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x67E JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0x14FF JUMP JUMPDEST DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xEF6 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST PUSH2 0xF12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0x1557 JUMP JUMPDEST PUSH1 0x9 DUP3 SWAP1 SSTORE PUSH1 0xB DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x1DC13BD033E49239661BA80E30AE191B1C31C79277B531E88246C7517971B85D SWAP1 PUSH1 0x20 ADD PUSH2 0xC03 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF58 DUP3 DUP5 PUSH2 0x16C0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF58 DUP3 DUP5 PUSH2 0x1666 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xFCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x67E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x102E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x67E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109B DUP5 DUP5 PUSH2 0xB34 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1103 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x10F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x67E JUMP JUMPDEST PUSH2 0x1103 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xF6B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x116D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x67E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x67E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1247 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x67E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x127E SWAP1 DUP5 SWAP1 PUSH2 0x153F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x12CA SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1103 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1304 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x12E8 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1316 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1362 DUP2 PUSH2 0x132C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1390 DUP2 PUSH2 0x132C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x13A0 DUP2 PUSH2 0x132C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xF58 DUP2 PUSH2 0x132C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1415 DUP2 PUSH2 0x132C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1441 DUP2 PUSH2 0x132C JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x145F DUP2 PUSH2 0x132C JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x147D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1488 DUP2 PUSH2 0x132C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1498 DUP2 PUSH2 0x132C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x14D9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x14F9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x31B0B63632B9103737BA1037BBB732B9 PUSH1 0x81 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1552 JUMPI PUSH2 0x1552 PUSH2 0x1529 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x5 SWAP1 DUP3 ADD MSTORE PUSH5 0x5A65726F21 PUSH1 0xD8 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x15B1 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1597 JUMPI PUSH2 0x1597 PUSH2 0x1529 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x15A4 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x157B JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x15C8 JUMPI POP PUSH1 0x1 PUSH2 0x62A JUMP JUMPDEST DUP2 PUSH2 0x15D5 JUMPI POP PUSH1 0x0 PUSH2 0x62A JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x15EB JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x15F5 JUMPI PUSH2 0x1611 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x62A JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1606 JUMPI PUSH2 0x1606 PUSH2 0x1529 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x62A JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1634 JUMPI POP DUP2 DUP2 EXP PUSH2 0x62A JUMP JUMPDEST PUSH2 0x163E DUP4 DUP4 PUSH2 0x1576 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1652 JUMPI PUSH2 0x1652 PUSH2 0x1529 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF58 DUP4 DUP4 PUSH2 0x15B9 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1680 JUMPI PUSH2 0x1680 PUSH2 0x1529 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1697 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x16B9 JUMPI PUSH2 0x16B9 PUSH2 0x1529 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x16DD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP SWAP7 EXTCODEHASH EXTCODEHASH SGT 0xE8 0xD2 PUSH3 0xEA5B3E 0xEF 0xD0 0xD4 EXTCODECOPY 0xB3 REVERT 0xD ORIGIN DUP6 PUSH6 0x7C6DD13917B2 0x29 0x4E LOG3 0xDB 0xE0 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
							"sourceMap": "201:4365:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;;;;;-1:-1:-1;4433:197:0;;;;;:::i;:::-;;:::i;:::-;;;1237:14:6;;1230:22;1212:41;;1200:2;1185:18;4433:197:0;1072:187:6;3244:106:0;;;;;;;;;;-1:-1:-1;3331:12:0;;3244:106;;;1410:25:6;;;1398:2;1383:18;3244:106:0;1264:177:6;5192:286:0;;;;;;;;;;-1:-1:-1;5192:286:0;;;;;:::i;:::-;;:::i;406:71:5:-;;;;;;;;;;-1:-1:-1;406:71:5;;;;-1:-1:-1;;;;;406:71:5;;;;;;-1:-1:-1;;;;;2071:32:6;;;2053:51;;2041:2;2026:18;406:71:5;1907:203:6;3093:91:0;;;;;;;;;;-1:-1:-1;3093:91:0;;3175:2;2257:36:6;;2245:2;2230:18;3093:91:0;2115:184:6;2888:108:5;;;;;;;;;;;;;:::i;:::-;;5873:234:0;;;;;;;;;;-1:-1:-1;5873:234:0;;;;;:::i;:::-;;:::i;708:37:5:-;;;;;;;;;;;;;;;;2505:165;;;;;;;;;;-1:-1:-1;2633:7:5;;2642;;2651:4;;2658:6;;2505:165;;;2535:25:6;;;2591:2;2576:18;;2569:34;;;;2619:18;;;2612:34;2677:2;2662:18;;2655:34;2522:3;2507:19;2505:165:5;2304:391:6;3237:162:5;;;;;;;;;;-1:-1:-1;3237:162:5;;;;;:::i;:::-;;:::i;294:21::-;;;;;;;;;;-1:-1:-1;294:21:5;;;;-1:-1:-1;;;;;294:21:5;;;633:30;;;;;;;;;;;;;;;;3408:125:0;;;;;;;;;;-1:-1:-1;3408:125:0;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:0;3482:7;3508:18;;;;;;;;;;;;3408:125;4399:129:5;;;;;;;;;;-1:-1:-1;4399:129:5;;;;;:::i;:::-;;:::i;2367:102:0:-;;;;;;;;;;;;;:::i;6594:427::-;;;;;;;;;;-1:-1:-1;6594:427:0;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;;;;;-1:-1:-1;3729:189:0;;;;;:::i;:::-;;:::i;4049:346:5:-;;;;;;;;;;-1:-1:-1;4049:346:5;;;;;:::i;:::-;;:::i;3541:364::-;;;;;;;;;;-1:-1:-1;3541:364:5;;;;;:::i;:::-;;:::i;751:43::-;;;;;;;;;;;;;;;;3976:149:0;;;;;;;;;;-1:-1:-1;3976:149:0;;;;;:::i;:::-;;:::i;590:37:5:-;;;;;;;;;;;;;;;;3000:233;;;;;;;;;;-1:-1:-1;3000:233:5;;;;;:::i;:::-;;:::i;321:79::-;;;;;;;;;;;;358:42;321:79;;1897:604;;;;;;:::i;:::-;;:::i;1688:204::-;;;;;;;;;;-1:-1:-1;1688:204:5;;;;;:::i;:::-;;:::i;2676:206::-;;;;;;;;;;-1:-1:-1;2676:206:5;;;;;:::i;:::-;;:::i;669:33::-;;;;;;;;;;;;;;;;2156:98:0;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:3;4570:32:0;719:10:3;4586:7:0;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;;:::o;5192:286::-;5319:4;719:10:3;5375:38:0;5391:4;719:10:3;5406:6:0;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:0;;5192:286;-1:-1:-1;;;;5192:286:0:o;2888:108:5:-;1362:5;;-1:-1:-1;;;;;1362:5:5;1348:10;:19;1340:48;;;;-1:-1:-1;;;1340:48:5;;;;;;;:::i;:::-;;;;;;;;;2942:12:::1;2932:7;:22:::0;2965:26:::1;::::0;2975:15:::1;1410:25:6::0;;2965:26:5::1;::::0;1398:2:6;1383:18;2965:26:5::1;;;;;;;2888:108::o:0;5873:234:0:-;5961:4;719:10:3;6015:64:0;719:10:3;6031:7:0;6068:10;6040:25;719:10:3;6031:7:0;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;3237:162:5:-;1362:5;;-1:-1:-1;;;;;1362:5:5;1348:10;:19;1340:48;;;;-1:-1:-1;;;1340:48:5;;;;;;;:::i;:::-;3313:6:::1;3322:1;3313:10:::0;3305:27:::1;;;;-1:-1:-1::0;;;3305:27:5::1;;;;;;;:::i;:::-;3340:12;:21:::0;;;3374:20:::1;::::0;1410:25:6;;;3374:20:5::1;::::0;1398:2:6;1383:18;3374:20:5::1;;;;;;;3237:162:::0;:::o;4399:129::-;1362:5;;-1:-1:-1;;;;;1362:5:5;1348:10;:19;1340:48;;;;-1:-1:-1;;;1340:48:5;;;;;;;:::i;:::-;4477:20:::1;::::0;-1:-1:-1;;;;;2071:32:6;;2053:51;;4477:20:5::1;::::0;2041:2:6;2026:18;4477:20:5::1;;;;;;;4505:6;:18:::0;;-1:-1:-1;;;;;;4505:18:5::1;-1:-1:-1::0;;;;;4505:18:5;;;::::1;::::0;;;::::1;::::0;;4399:129::o;2367:102:0:-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:3;6687:4:0;6768:25;719:10:3;6785:7:0;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:0;;6707:2:6;6803:85:0;;;6689:21:6;6746:2;6726:18;;;6719:30;6785:34;6765:18;;;6758:62;-1:-1:-1;;;6836:18:6;;;6829:35;6881:19;;6803:85:0;6505:401:6;6803:85:0;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:3;3862:28:0;719:10:3;3879:2:0;3883:6;3862:9;:28::i;4049:346:5:-;1362:5;;-1:-1:-1;;;;;1362:5:5;1348:10;:19;1340:48;;;;-1:-1:-1;;;1340:48:5;;;;;;;:::i;:::-;4182:7:::1;4157:21;:32;;4149:51;;;::::0;-1:-1:-1;;;4149:51:5;;7113:2:6;4149:51:5::1;::::0;::::1;7095:21:6::0;7152:1;7132:18;;;7125:29;-1:-1:-1;;;7170:18:6;;;7163:37;7217:18;;4149:51:5::1;6911:330:6::0;4149:51:5::1;-1:-1:-1::0;;;;;4218:16:5;::::1;4210:40;;;::::0;-1:-1:-1;;;4210:40:5;;7448:2:6;4210:40:5::1;::::0;::::1;7430:21:6::0;7487:2;7467:18;;;7460:30;-1:-1:-1;;;7506:18:6;;;7499:42;7558:18;;4210:40:5::1;7246:336:6::0;4210:40:5::1;4260:12;4275:13;4281:7:::0;4275:2:::1;:13;:::i;:::-;4303:35;::::0;;9163:25:6;;;9219:2;9204:18;;9197:34;;;-1:-1:-1;;;;;9267:32:6;;9247:18;;;9240:60;4303:35:5;;4260:28;;-1:-1:-1;4303:35:5::1;::::0;;;;;9151:2:6;4303:35:5;;::::1;-1:-1:-1::0;;;;;4348:20:5;::::1;:34;4369:12;4377:4:::0;4369:7;:12:::1;:::i;:::-;4348:34;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;4139:256;4049:346:::0;;;:::o;3541:364::-;1362:5;;-1:-1:-1;;;;;1362:5:5;1348:10;:19;1340:48;;;;-1:-1:-1;;;1340:48:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;3671:24:5;::::1;3663:49;;;::::0;-1:-1:-1;;;3663:49:5;;9686:2:6;3663:49:5::1;::::0;::::1;9668:21:6::0;9725:2;9705:18;;;9698:30;-1:-1:-1;;;9744:18:6;;;9737:43;9797:18;;3663:49:5::1;9484:337:6::0;3663:49:5::1;3722:12;3737:13;3743:7:::0;3737:2:::1;:13;:::i;:::-;3806:49;::::0;;-1:-1:-1;;;;;10113:15:6;;;10095:34;;10160:2;10145:18;;10138:34;;;10188:18;;;10181:34;;;10251:15;;10246:2;10231:18;;10224:43;3806:49:5;;3722:28;;-1:-1:-1;10113:15:6;;3806:49:5::1;::::0;;;;10044:3:6;3806:49:5;;::::1;-1:-1:-1::0;;;;;3865:14:5;::::1;;3880:2:::0;3884:12:::1;3892:4:::0;3884:7;:12:::1;:::i;:::-;3865:32;::::0;-1:-1:-1;;;;;;3865:32:5::1;::::0;;;;;;-1:-1:-1;;;;;10470:32:6;;;3865::5::1;::::0;::::1;10452:51:6::0;10519:18;;;10512:34;10425:18;;3865:32:5::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3653:252;;3541:364:::0;;;;:::o;3976:149:0:-;-1:-1:-1;;;;;4091:18:0;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;3000:233:5:-;1362:5;;-1:-1:-1;;;;;1362:5:5;1348:10;:19;1340:48;;;;-1:-1:-1;;;1340:48:5;;;;;;;:::i;:::-;3106:14;;;::::1;::::0;:31:::1;;-1:-1:-1::0;3124:13:5;;::::1;3106:31;3098:48;;;;-1:-1:-1::0;;;3098:48:5::1;;;;;;;:::i;:::-;3154:3;:15:::0;;;3195:4:::1;::::0;3183:16:::1;::::0;:9;:16:::1;:::i;:::-;3177:3;:22:::0;;;3219:3:::1;::::0;3212:16:::1;::::0;::::1;::::0;::::1;::::0;11013:25:6;;11069:2;11054:18;;11047:34;11001:2;10986:18;;10839:248;3212:16:5::1;;;;;;;;3000:233:::0;;:::o;1897:604::-;1953:12;2029:4;;2014:12;;:19;;;;:::i;:::-;1998:10;3482:7:0;3508:18;;;;;;;;;;;1980:53:5;;1972:102;;;;-1:-1:-1;;;1972:102:5;;11294:2:6;1972:102:5;;;11276:21:6;11333:2;11313:18;;;11306:30;11372:34;11352:18;;;11345:62;-1:-1:-1;;;11423:18:6;;;11416:33;11466:19;;1972:102:5;11092:399:6;1972:102:5;2101:12;2090:7;;:23;;:50;;;;;2133:7;;2117:12;:23;;2090:50;2082:106;;;;-1:-1:-1;;;2082:106:5;;11698:2:6;2082:106:5;;;11680:21:6;11737:2;11717:18;;;11710:30;11776:34;11756:18;;;11749:62;-1:-1:-1;;;11827:18:6;;;11820:41;11878:19;;2082:106:5;11496:407:6;2082:106:5;2267:3;;2210:9;;2195:12;;2259:11;;;;;:26;;;2282:3;;2274:4;:11;;2259:26;2249:80;;;;-1:-1:-1;;;2249:80:5;;12110:2:6;2249:80:5;;;12092:21:6;12149:2;12129:18;;;12122:30;12188:34;12168:18;;;12161:62;-1:-1:-1;;;12239:18:6;;;12232:36;12285:19;;2249:80:5;11908:402:6;2249:80:5;2343:31;2366:7;2344:16;2355:4;2344:6;;:10;;:16;;;;:::i;:::-;2343:22;;:31::i;:::-;2380:4;:7;;2335:39;;-1:-1:-1;2380:4:5;:7;;;:::i;:::-;;;;;;2398:43;2416:4;2423:10;2435:5;2398:9;:43::i;:::-;2472:6;;2453:26;;;11013:25:6;;;11069:2;11054:18;;11047:34;;;;2453:26:5;;10986:18:6;2453:26:5;;;;;;;-1:-1:-1;2492:4:5;;1897:604;-1:-1:-1;;;1897:604:5:o;1688:204::-;1362:5;;-1:-1:-1;;;;;1362:5:5;1348:10;:19;1340:48;;;;-1:-1:-1;;;1340:48:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;1769:23:5;::::1;1761:47;;;::::0;-1:-1:-1;;;1761:47:5;;7448:2:6;1761:47:5::1;::::0;::::1;7430:21:6::0;7487:2;7467:18;;;7460:30;-1:-1:-1;;;7506:18:6;;;7499:42;7558:18;;1761:47:5::1;7246:336:6::0;1761:47:5::1;1817:5;:17:::0;;-1:-1:-1;;;;;;1817:17:5::1;-1:-1:-1::0;;;;;1817:17:5;::::1;::::0;;::::1;::::0;;;1848:38:::1;::::0;1817:17;;1848:38:::1;::::0;-1:-1:-1;;1848:38:5::1;1688:204:::0;:::o;2676:206::-;1362:5;;-1:-1:-1;;;;;1362:5:5;1348:10;:19;1340:48;;;;-1:-1:-1;;;1340:48:5;;;;;;;:::i;:::-;2762:13;;;::::1;::::0;:28:::1;;-1:-1:-1::0;2779:11:5;;::::1;2762:28;2754:45;;;;-1:-1:-1::0;;;2754:45:5::1;;;;;;;:::i;:::-;2805:7;:18:::0;;;2830:6:::1;:15:::0;;;2856:21:::1;::::0;1410:25:6;;;2856:21:5::1;::::0;1398:2:6;1383:18;2856:21:5::1;1264:177:6::0;3850:96:4;3908:7;3934:5;3938:1;3934;:5;:::i;:::-;3927:12;3850:96;-1:-1:-1;;;3850:96:4:o;3465:::-;3523:7;3549:5;3553:1;3549;:5;:::i;10110:370:0:-;-1:-1:-1;;;;;10241:19:0;;10233:68;;;;-1:-1:-1;;;10233:68:0;;12879:2:6;10233:68:0;;;12861:21:6;12918:2;12898:18;;;12891:30;12957:34;12937:18;;;12930:62;-1:-1:-1;;;13008:18:6;;;13001:34;13052:19;;10233:68:0;12677:400:6;10233:68:0;-1:-1:-1;;;;;10319:21:0;;10311:68;;;;-1:-1:-1;;;10311:68:0;;13284:2:6;10311:68:0;;;13266:21:6;13323:2;13303:18;;;13296:30;13362:34;13342:18;;;13335:62;-1:-1:-1;;;13413:18:6;;;13406:32;13455:19;;10311:68:0;13082:398:6;10311:68:0;-1:-1:-1;;;;;10390:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;1410:25:6;;;10441:32:0;;1383:18:6;10441:32:0;;;;;;;10110:370;;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;-1:-1:-1;;10957:16:0;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:0;;13687:2:6;11010:68:0;;;13669:21:6;13726:2;13706:18;;;13699:30;13765:31;13745:18;;;13738:59;13814:18;;11010:68:0;13485:353:6;11010:68:0;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:0;;7593:68;;;;-1:-1:-1;;;7593:68:0;;14045:2:6;7593:68:0;;;14027:21:6;14084:2;14064:18;;;14057:30;14123:34;14103:18;;;14096:62;-1:-1:-1;;;14174:18:6;;;14167:35;14219:19;;7593:68:0;13843:401:6;7593:68:0;-1:-1:-1;;;;;7679:16:0;;7671:64;;;;-1:-1:-1;;;7671:64:0;;14451:2:6;7671:64:0;;;14433:21:6;14490:2;14470:18;;;14463:30;14529:34;14509:18;;;14502:62;-1:-1:-1;;;14580:18:6;;;14573:33;14623:19;;7671:64:0;14249:399:6;7671:64:0;-1:-1:-1;;;;;7817:15:0;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:0;;14855:2:6;7842:72:0;;;14837:21:6;14894:2;14874:18;;;14867:30;14933:34;14913:18;;;14906:62;-1:-1:-1;;;14984:18:6;;;14977:36;15030:19;;7842:72:0;14653:402:6;7842:72:0;-1:-1:-1;;;;;7948:15:0;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:0;8054:4;-1:-1:-1;;;;;8045:26:0;;8064:6;8045:26;;;;1410:25:6;;1398:2;1383:18;;1264:177;8045:26:0;;;;;;;;8082:37;11786:121;14:597:6;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:6;574:15;-1:-1:-1;;570:29:6;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:6:o;616:131::-;-1:-1:-1;;;;;691:31:6;;681:42;;671:70;;737:1;734;727:12;671:70;616:131;:::o;752:315::-;820:6;828;881:2;869:9;860:7;856:23;852:32;849:52;;;897:1;894;887:12;849:52;936:9;923:23;955:31;980:5;955:31;:::i;:::-;1005:5;1057:2;1042:18;;;;1029:32;;-1:-1:-1;;;752:315:6:o;1446:456::-;1523:6;1531;1539;1592:2;1580:9;1571:7;1567:23;1563:32;1560:52;;;1608:1;1605;1598:12;1560:52;1647:9;1634:23;1666:31;1691:5;1666:31;:::i;:::-;1716:5;-1:-1:-1;1773:2:6;1758:18;;1745:32;1786:33;1745:32;1786:33;:::i;:::-;1446:456;;1838:7;;-1:-1:-1;;;1892:2:6;1877:18;;;;1864:32;;1446:456::o;2700:180::-;2759:6;2812:2;2800:9;2791:7;2787:23;2783:32;2780:52;;;2828:1;2825;2818:12;2780:52;-1:-1:-1;2851:23:6;;2700:180;-1:-1:-1;2700:180:6:o;2885:247::-;2944:6;2997:2;2985:9;2976:7;2972:23;2968:32;2965:52;;;3013:1;3010;3003:12;2965:52;3052:9;3039:23;3071:31;3096:5;3071:31;:::i;3397:383::-;3474:6;3482;3490;3543:2;3531:9;3522:7;3518:23;3514:32;3511:52;;;3559:1;3556;3549:12;3511:52;3595:9;3582:23;3572:33;;3652:2;3641:9;3637:18;3624:32;3614:42;;3706:2;3695:9;3691:18;3678:32;3719:31;3744:5;3719:31;:::i;:::-;3769:5;3759:15;;;3397:383;;;;;:::o;3785:525::-;3871:6;3879;3887;3895;3948:3;3936:9;3927:7;3923:23;3919:33;3916:53;;;3965:1;3962;3955:12;3916:53;4004:9;3991:23;4023:31;4048:5;4023:31;:::i;:::-;4073:5;-1:-1:-1;4125:2:6;4110:18;;4097:32;;-1:-1:-1;4176:2:6;4161:18;;4148:32;;-1:-1:-1;4232:2:6;4217:18;;4204:32;4245:33;4204:32;4245:33;:::i;:::-;3785:525;;;;-1:-1:-1;3785:525:6;;-1:-1:-1;;3785:525:6:o;4315:388::-;4383:6;4391;4444:2;4432:9;4423:7;4419:23;4415:32;4412:52;;;4460:1;4457;4450:12;4412:52;4499:9;4486:23;4518:31;4543:5;4518:31;:::i;:::-;4568:5;-1:-1:-1;4625:2:6;4610:18;;4597:32;4638:33;4597:32;4638:33;:::i;:::-;4690:7;4680:17;;;4315:388;;;;;:::o;4708:248::-;4776:6;4784;4837:2;4825:9;4816:7;4812:23;4808:32;4805:52;;;4853:1;4850;4843:12;4805:52;-1:-1:-1;;4876:23:6;;;4946:2;4931:18;;;4918:32;;-1:-1:-1;4708:248:6:o;4961:380::-;5040:1;5036:12;;;;5083;;;5104:61;;5158:4;5150:6;5146:17;5136:27;;5104:61;5211:2;5203:6;5200:14;5180:18;5177:38;5174:161;;5257:10;5252:3;5248:20;5245:1;5238:31;5292:4;5289:1;5282:15;5320:4;5317:1;5310:15;5174:161;;4961:380;;;:::o;5346:340::-;5548:2;5530:21;;;5587:2;5567:18;;;5560:30;-1:-1:-1;;;5621:2:6;5606:18;;5599:46;5677:2;5662:18;;5346:340::o;5691:127::-;5752:10;5747:3;5743:20;5740:1;5733:31;5783:4;5780:1;5773:15;5807:4;5804:1;5797:15;5823:128;5863:3;5894:1;5890:6;5887:1;5884:13;5881:39;;;5900:18;;:::i;:::-;-1:-1:-1;5936:9:6;;5823:128::o;5956:328::-;6158:2;6140:21;;;6197:1;6177:18;;;6170:29;-1:-1:-1;;;6230:2:6;6215:18;;6208:35;6275:2;6260:18;;5956:328::o;7587:422::-;7676:1;7719:5;7676:1;7733:270;7754:7;7744:8;7741:21;7733:270;;;7813:4;7809:1;7805:6;7801:17;7795:4;7792:27;7789:53;;;7822:18;;:::i;:::-;7872:7;7862:8;7858:22;7855:55;;;7892:16;;;;7855:55;7971:22;;;;7931:15;;;;7733:270;;;7737:3;7587:422;;;;;:::o;8014:806::-;8063:5;8093:8;8083:80;;-1:-1:-1;8134:1:6;8148:5;;8083:80;8182:4;8172:76;;-1:-1:-1;8219:1:6;8233:5;;8172:76;8264:4;8282:1;8277:59;;;;8350:1;8345:130;;;;8257:218;;8277:59;8307:1;8298:10;;8321:5;;;8345:130;8382:3;8372:8;8369:17;8366:43;;;8389:18;;:::i;:::-;-1:-1:-1;;8445:1:6;8431:16;;8460:5;;8257:218;;8559:2;8549:8;8546:16;8540:3;8534:4;8531:13;8527:36;8521:2;8511:8;8508:16;8503:2;8497:4;8494:12;8490:35;8487:77;8484:159;;;-1:-1:-1;8596:19:6;;;8628:5;;8484:159;8675:34;8700:8;8694:4;8675:34;:::i;:::-;8745:6;8741:1;8737:6;8733:19;8724:7;8721:32;8718:58;;;8756:18;;:::i;:::-;8794:20;;8014:806;-1:-1:-1;;;8014:806:6:o;8825:131::-;8885:5;8914:36;8941:8;8935:4;8914:36;:::i;9311:168::-;9351:7;9417:1;9413;9409:6;9405:14;9402:1;9399:21;9394:1;9387:9;9380:17;9376:45;9373:71;;;9424:18;;:::i;:::-;-1:-1:-1;9464:9:6;;9311:168::o;10557:277::-;10624:6;10677:2;10665:9;10656:7;10652:23;10648:32;10645:52;;;10693:1;10690;10683:12;10645:52;10725:9;10719:16;10778:5;10771:13;10764:21;10757:5;10754:32;10744:60;;10800:1;10797;10790:12;12315:135;12354:3;12375:17;;;12372:43;;12395:18;;:::i;:::-;-1:-1:-1;12442:1:6;12431:13;;12315:135::o;12455:217::-;12495:1;12521;12511:132;;12565:10;12560:3;12556:20;12553:1;12546:31;12600:4;12597:1;12590:15;12628:4;12625:1;12618:15;12511:132;-1:-1:-1;12657:9:6;;12455:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1182400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Bridge()": "2404",
								"Path()": "2362",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24668",
								"balanceOf(address)": "2645",
								"changeMinMaxPrivateSale(uint256,uint256)": "52390",
								"deadAddress()": "2405",
								"decimals()": "267",
								"decreaseAllowance(address,uint256)": "27034",
								"endSale()": "25557",
								"increaseAllowance(address,uint256)": "27022",
								"max()": "2384",
								"maxSupply()": "2406",
								"min()": "2405",
								"name()": "infinite",
								"privateLimit()": "2363",
								"privateSale(address)": "infinite",
								"setBridge(address)": "27826",
								"setPrivateLimit(uint256)": "25597",
								"startSale(uint256,uint256)": "47817",
								"symbol()": "infinite",
								"theCompany()": "327",
								"totalSupply()": "2372",
								"transfer(address,uint256)": "51225",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28326",
								"viewSale()": "8736",
								"withdrawalBNB(uint256,uint256,address)": "infinite",
								"withdrawalToken(address,uint256,uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 201,
									"end": 4566,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 201,
									"end": 4566,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 201,
									"end": 4566,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 406,
									"end": 477,
									"name": "PUSH",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 406,
									"end": 477,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 406,
									"end": 477,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 406,
									"end": 477,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 435,
									"end": 477,
									"name": "PUSH",
									"source": 5,
									"value": "DEAD"
								},
								{
									"begin": 406,
									"end": 477,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 406,
									"end": 477,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 406,
									"end": 477,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 617,
									"end": 627,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3175,
									"end": 3177,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 3175,
									"end": 3177,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3093,
									"end": 3184,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 617,
									"end": 627,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 617,
									"end": 627,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 612,
									"end": 627,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 612,
									"end": 627,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 612,
									"end": 614,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 612,
									"end": 627,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 612,
									"end": 627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 612,
									"end": 627,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 612,
									"end": 627,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 590,
									"end": 627,
									"name": "PUSH",
									"source": 5,
									"value": "C"
								},
								{
									"begin": 590,
									"end": 627,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 590,
									"end": 627,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 590,
									"end": 627,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 654,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 654,
									"end": 663,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 654,
									"end": 656,
									"name": "PUSH",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 654,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 654,
									"end": 663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 654,
									"end": 663,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 654,
									"end": 663,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 633,
									"end": 663,
									"name": "PUSH",
									"source": 5,
									"value": "D"
								},
								{
									"begin": 633,
									"end": 663,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 690,
									"end": 702,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 698,
									"end": 701,
									"name": "PUSH",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 690,
									"end": 693,
									"name": "PUSH",
									"source": 5,
									"value": "D"
								},
								{
									"begin": 690,
									"end": 693,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 690,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 690,
									"end": 697,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 690,
									"end": 697,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 690,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18446744073709551794"
								},
								{
									"begin": 690,
									"end": 697,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 690,
									"end": 697,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 690,
									"end": 702,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 690,
									"end": 702,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 690,
									"end": 702,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 690,
									"end": 702,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 690,
									"end": 702,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 690,
									"end": 702,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 690,
									"end": 702,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 669,
									"end": 702,
									"name": "PUSH",
									"source": 5,
									"value": "E"
								},
								{
									"begin": 669,
									"end": 702,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 738,
									"end": 745,
									"name": "PUSH",
									"source": 5,
									"value": "F4240"
								},
								{
									"begin": 708,
									"end": 745,
									"name": "PUSH",
									"source": 5,
									"value": "F"
								},
								{
									"begin": 708,
									"end": 745,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 790,
									"end": 794,
									"name": "PUSH",
									"source": 5,
									"value": "C"
								},
								{
									"begin": 790,
									"end": 794,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 778,
									"end": 794,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 778,
									"end": 794,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 778,
									"end": 787,
									"name": "PUSH",
									"source": 5,
									"value": "1DCD6500"
								},
								{
									"begin": 778,
									"end": 794,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 778,
									"end": 794,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 778,
									"end": 794,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 778,
									"end": 794,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 751,
									"end": 794,
									"name": "PUSH",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 751,
									"end": 794,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D65746163636573"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4163636573"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2052,
									"end": 2057,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2044,
									"end": 2057,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2077,
									"end": 2084,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2067,
									"end": 2084,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1464,
									"end": 1469,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1464,
									"end": 1482,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1464,
									"end": 1482,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1472,
									"end": 1482,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1464,
									"end": 1482,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1464,
									"end": 1482,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1464,
									"end": 1482,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1464,
									"end": 1482,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1464,
									"end": 1482,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1464,
									"end": 1482,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1519,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1510,
									"end": 1519,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1488,
									"end": 1536,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1488,
									"end": 1536,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1503,
									"end": 1507,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 1503,
									"end": 1507,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1535,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 1510,
									"end": 1535,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1531,
									"end": 1534,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 1531,
									"end": 1534,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1526,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1510,
									"end": 1526,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1519,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1523,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1510,
									"end": 1523,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1510,
									"end": 1523,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1523,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1523,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1523,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18446744073709551795"
								},
								{
									"begin": 1510,
									"end": 1523,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1526,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1526,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1526,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1526,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1510,
									"end": 1526,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1530,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 1510,
									"end": 1530,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1510,
									"end": 1530,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1530,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18446744073709551794"
								},
								{
									"begin": 1510,
									"end": 1530,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1530,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1535,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1535,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1535,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1510,
									"end": 1535,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1535,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1535,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 1510,
									"end": 1535,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1488,
									"end": 1493,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1488,
									"end": 1536,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1488,
									"end": 1536,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1488,
									"end": 1536,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1548,
									"end": 1594,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 358,
									"end": 400,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "C6E5347D1A5FE685160429705E9E26BD3BBA8FEA"
								},
								{
									"begin": 1567,
									"end": 1593,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 1589,
									"end": 1592,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 1567,
									"end": 1584,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1581,
									"end": 1583,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "5F"
								},
								{
									"begin": 1567,
									"end": 1576,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1567,
									"end": 1576,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1567,
									"end": 1580,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1567,
									"end": 1580,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1567,
									"end": 1580,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1567,
									"end": 1580,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18446744073709551795"
								},
								{
									"begin": 1567,
									"end": 1580,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1567,
									"end": 1580,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1567,
									"end": 1584,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1567,
									"end": 1584,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1567,
									"end": 1584,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1567,
									"end": 1584,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1567,
									"end": 1584,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1548,
									"end": 1594,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1548,
									"end": 1594,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 201,
									"end": 4566,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 201,
									"end": 4566,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3908,
									"end": 3915,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3934,
									"end": 3939,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 3938,
									"end": 3939,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3934,
									"end": 3935,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3934,
									"end": 3939,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 3934,
									"end": 3939,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3934,
									"end": 3939,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 3934,
									"end": 3939,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3927,
									"end": 3939,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3927,
									"end": 3939,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3850,
									"end": 3946,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3465,
									"end": 3561,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3465,
									"end": 3561,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3523,
									"end": 3530,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3549,
									"end": 3554,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 3553,
									"end": 3554,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3549,
									"end": 3550,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3549,
									"end": 3554,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 3549,
									"end": 3554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 8402,
									"end": 8791,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 8402,
									"end": 8791,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8485,
									"end": 8506,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8485,
									"end": 8506,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4847,
									"end": 4849,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4886,
									"end": 4888,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4866,
									"end": 4884,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4866,
									"end": 4884,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4866,
									"end": 4884,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4859,
									"end": 4889,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4925,
									"end": 4958,
									"name": "PUSH",
									"source": 6,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 4905,
									"end": 4923,
									"name": "PUSH",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 4905,
									"end": 4923,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4905,
									"end": 4923,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4898,
									"end": 4959,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4976,
									"end": 4994,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 4976,
									"end": 4994,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8629,
									"end": 8635,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8625,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8613,
									"end": 8625,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 8613,
									"end": 8635,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8654,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8667,
									"end": 8673,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8667,
									"end": 8673,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8654,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8667,
									"end": 8673,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 8667,
									"end": 8673,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 8645,
									"end": 8673,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5284,
									"end": 5309,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5284,
									"end": 5309,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5284,
									"end": 5309,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8705,
									"end": 8706,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8705,
									"end": 8706,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5272,
									"end": 5274,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5257,
									"end": 5275,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 8402,
									"end": 8791,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8402,
									"end": 8791,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8402,
									"end": 8791,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 11786,
									"end": 11907,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 11786,
									"end": 11907,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11786,
									"end": 11907,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11786,
									"end": 11907,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11786,
									"end": 11907,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11786,
									"end": 11907,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 146,
									"end": 568,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 146,
									"end": 568,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 235,
									"end": 236,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 278,
									"end": 283,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 235,
									"end": 236,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 292,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 292,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 313,
									"end": 320,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 303,
									"end": 311,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 300,
									"end": 321,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 292,
									"end": 562,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 292,
									"end": 562,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 292,
									"end": 562,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 372,
									"end": 376,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 368,
									"end": 369,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 364,
									"end": 370,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 360,
									"end": 377,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 354,
									"end": 358,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 351,
									"end": 378,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 348,
									"end": 401,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 348,
									"end": 401,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 348,
									"end": 401,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 381,
									"end": 399,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 381,
									"end": 399,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 381,
									"end": 399,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 381,
									"end": 399,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 381,
									"end": 399,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 431,
									"end": 438,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 421,
									"end": 429,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 417,
									"end": 439,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 414,
									"end": 469,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 414,
									"end": 469,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 414,
									"end": 469,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 451,
									"end": 467,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 451,
									"end": 467,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 451,
									"end": 467,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 451,
									"end": 467,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 414,
									"end": 469,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 414,
									"end": 469,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 530,
									"end": 552,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 530,
									"end": 552,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 530,
									"end": 552,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 530,
									"end": 552,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 490,
									"end": 505,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 490,
									"end": 505,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 490,
									"end": 505,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 490,
									"end": 505,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 292,
									"end": 562,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 292,
									"end": 562,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 292,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 292,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 296,
									"end": 299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 568,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 568,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 568,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 146,
									"end": 568,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 146,
									"end": 568,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 146,
									"end": 568,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 622,
									"end": 627,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 652,
									"end": 660,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 642,
									"end": 722,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 642,
									"end": 722,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 693,
									"end": 694,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 712,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 707,
									"end": 712,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 642,
									"end": 722,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 642,
									"end": 722,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 741,
									"end": 745,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 731,
									"end": 807,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 731,
									"end": 807,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 778,
									"end": 779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 792,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 792,
									"end": 797,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 731,
									"end": 807,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 731,
									"end": 807,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 823,
									"end": 827,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 841,
									"end": 842,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 836,
									"end": 895,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 836,
									"end": 895,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 836,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 836,
									"end": 895,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 909,
									"end": 910,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 836,
									"end": 895,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 836,
									"end": 895,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 866,
									"end": 867,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 857,
									"end": 867,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 857,
									"end": 867,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 880,
									"end": 885,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 880,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 880,
									"end": 885,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 941,
									"end": 944,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 931,
									"end": 939,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 928,
									"end": 945,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 925,
									"end": 968,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 925,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 925,
									"end": 968,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 948,
									"end": 966,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 948,
									"end": 966,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 948,
									"end": 966,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 948,
									"end": 966,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 948,
									"end": 966,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1004,
									"end": 1005,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 990,
									"end": 1006,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 990,
									"end": 1006,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1118,
									"end": 1120,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1108,
									"end": 1116,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1105,
									"end": 1121,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1099,
									"end": 1102,
									"name": "PUSH",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 1093,
									"end": 1097,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1090,
									"end": 1103,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1086,
									"end": 1122,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1080,
									"end": 1082,
									"name": "PUSH",
									"source": 6,
									"value": "4E"
								},
								{
									"begin": 1070,
									"end": 1078,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1067,
									"end": 1083,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1062,
									"end": 1064,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 1056,
									"end": 1060,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1053,
									"end": 1065,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1049,
									"end": 1084,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1046,
									"end": 1123,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1155,
									"end": 1174,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1155,
									"end": 1174,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1155,
									"end": 1174,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1259,
									"end": 1267,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1253,
									"end": 1257,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1234,
									"end": 1268,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1304,
									"end": 1310,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1300,
									"end": 1301,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1296,
									"end": 1302,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1292,
									"end": 1311,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1283,
									"end": 1290,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1280,
									"end": 1312,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1277,
									"end": 1335,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1277,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 1277,
									"end": 1335,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1315,
									"end": 1333,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1353,
									"end": 1373,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1353,
									"end": 1373,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 573,
									"end": 1379,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1384,
									"end": 1524,
									"name": "tag",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1384,
									"end": 1524,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1442,
									"end": 1447,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1471,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 1512,
									"end": 1516,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 1502,
									"end": 1510,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1498,
									"end": 1517,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1492,
									"end": 1496,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1471,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1471,
									"end": 1518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1697,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1529,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1569,
									"end": 1576,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1631,
									"end": 1632,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1627,
									"end": 1633,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1623,
									"end": 1637,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1620,
									"end": 1621,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1617,
									"end": 1638,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1612,
									"end": 1613,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1605,
									"end": 1614,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1598,
									"end": 1615,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1594,
									"end": 1639,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1591,
									"end": 1662,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1591,
									"end": 1662,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1591,
									"end": 1662,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1642,
									"end": 1660,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1642,
									"end": 1660,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1642,
									"end": 1660,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1642,
									"end": 1660,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1642,
									"end": 1660,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1682,
									"end": 1691,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1682,
									"end": 1691,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1697,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1702,
									"end": 1829,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1702,
									"end": 1829,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1763,
									"end": 1773,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 1758,
									"end": 1761,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1754,
									"end": 1774,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1752,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1744,
									"end": 1775,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1794,
									"end": 1798,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1791,
									"end": 1792,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1784,
									"end": 1799,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1818,
									"end": 1822,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1808,
									"end": 1823,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 2214,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1834,
									"end": 2214,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1913,
									"end": 1914,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1909,
									"end": 1921,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1909,
									"end": 1921,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1909,
									"end": 1921,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1909,
									"end": 1921,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1956,
									"end": 1968,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1956,
									"end": 1968,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1956,
									"end": 1968,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1977,
									"end": 2038,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 1977,
									"end": 2038,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2031,
									"end": 2035,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 2023,
									"end": 2029,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2019,
									"end": 2036,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2009,
									"end": 2036,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2009,
									"end": 2036,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1977,
									"end": 2038,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 1977,
									"end": 2038,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2084,
									"end": 2086,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2076,
									"end": 2082,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2073,
									"end": 2087,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2053,
									"end": 2071,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2050,
									"end": 2088,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2047,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 2047,
									"end": 2208,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2130,
									"end": 2140,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 2125,
									"end": 2128,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 2121,
									"end": 2141,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2118,
									"end": 2119,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2111,
									"end": 2142,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2165,
									"end": 2169,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2162,
									"end": 2163,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2155,
									"end": 2170,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2193,
									"end": 2197,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2190,
									"end": 2191,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2183,
									"end": 2198,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2047,
									"end": 2208,
									"name": "tag",
									"source": 6,
									"value": "84"
								},
								{
									"begin": 2047,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2047,
									"end": 2208,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 2214,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 2214,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 2214,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1834,
									"end": 2214,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2345,
									"end": 2890,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 2345,
									"end": 2890,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2447,
									"end": 2449,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2442,
									"end": 2445,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2439,
									"end": 2450,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 2436,
									"end": 2884,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2436,
									"end": 2884,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 2436,
									"end": 2884,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2508,
									"end": 2513,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2504,
									"end": 2506,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2497,
									"end": 2514,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2553,
									"end": 2557,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2549,
									"end": 2551,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2539,
									"end": 2558,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2623,
									"end": 2625,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2611,
									"end": 2621,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2607,
									"end": 2626,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2604,
									"end": 2605,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2600,
									"end": 2627,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2594,
									"end": 2598,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2590,
									"end": 2628,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2659,
									"end": 2663,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2647,
									"end": 2657,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2644,
									"end": 2664,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2641,
									"end": 2688,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2641,
									"end": 2688,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 2641,
									"end": 2688,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2682,
									"end": 2686,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2641,
									"end": 2688,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 2641,
									"end": 2688,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2737,
									"end": 2739,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2732,
									"end": 2735,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2728,
									"end": 2740,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2725,
									"end": 2726,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 2721,
									"end": 2741,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2715,
									"end": 2719,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2711,
									"end": 2742,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2701,
									"end": 2742,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2701,
									"end": 2742,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2792,
									"end": 2874,
									"name": "tag",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 2792,
									"end": 2874,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2810,
									"end": 2812,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2803,
									"end": 2808,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2800,
									"end": 2813,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2792,
									"end": 2874,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2792,
									"end": 2874,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 2792,
									"end": 2874,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2855,
									"end": 2872,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2855,
									"end": 2872,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2855,
									"end": 2872,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2836,
									"end": 2837,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2825,
									"end": 2838,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2792,
									"end": 2874,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "89"
								},
								{
									"begin": 2792,
									"end": 2874,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2792,
									"end": 2874,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 2792,
									"end": 2874,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2796,
									"end": 2799,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2796,
									"end": 2799,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2796,
									"end": 2799,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2345,
									"end": 2890,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2345,
									"end": 2890,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2345,
									"end": 2890,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2345,
									"end": 2890,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3066,
									"end": 4418,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 3066,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3186,
									"end": 3196,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3186,
									"end": 3196,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3208,
									"end": 3238,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3208,
									"end": 3238,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3205,
									"end": 3261,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3205,
									"end": 3261,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 3205,
									"end": 3261,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3241,
									"end": 3259,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 3241,
									"end": 3259,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 3241,
									"end": 3259,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3241,
									"end": 3259,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 3241,
									"end": 3259,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3270,
									"end": 3367,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 3360,
									"end": 3366,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3320,
									"end": 3358,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 3352,
									"end": 3356,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3346,
									"end": 3357,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3320,
									"end": 3358,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 3320,
									"end": 3358,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3320,
									"end": 3358,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 3320,
									"end": 3358,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3314,
									"end": 3318,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3270,
									"end": 3367,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 3270,
									"end": 3367,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3270,
									"end": 3367,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 3270,
									"end": 3367,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3422,
									"end": 3426,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3422,
									"end": 3426,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3486,
									"end": 3488,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 3475,
									"end": 3489,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3475,
									"end": 3489,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3503,
									"end": 3504,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3498,
									"end": 4161,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3498,
									"end": 4161,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 3498,
									"end": 4161,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 3498,
									"end": 4161,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4205,
									"end": 4206,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4222,
									"end": 4228,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4219,
									"end": 4308,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4219,
									"end": 4308,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 4219,
									"end": 4308,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4274,
									"end": 4293,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4274,
									"end": 4293,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4274,
									"end": 4293,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4268,
									"end": 4294,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 4219,
									"end": 4308,
									"name": "tag",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 4219,
									"end": 4308,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3023,
									"end": 3024,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3019,
									"end": 3030,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3019,
									"end": 3030,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3019,
									"end": 3030,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3015,
									"end": 3039,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 3011,
									"end": 3040,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3001,
									"end": 3041,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3047,
									"end": 3048,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3043,
									"end": 3054,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3043,
									"end": 3054,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3043,
									"end": 3054,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2998,
									"end": 3055,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4321,
									"end": 4402,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4321,
									"end": 4402,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3468,
									"end": 4412,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 3468,
									"end": 4412,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3498,
									"end": 4161,
									"name": "tag",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 3498,
									"end": 4161,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2292,
									"end": 2293,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2285,
									"end": 2299,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2285,
									"end": 2299,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2285,
									"end": 2299,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2329,
									"end": 2333,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2316,
									"end": 2334,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2334,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3534,
									"end": 3554,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3554,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3554,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3652,
									"end": 3888,
									"name": "tag",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 3652,
									"end": 3888,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3666,
									"end": 3673,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3663,
									"end": 3664,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3660,
									"end": 3674,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3652,
									"end": 3888,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3652,
									"end": 3888,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 3652,
									"end": 3888,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3755,
									"end": 3774,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 3755,
									"end": 3774,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3755,
									"end": 3774,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3749,
									"end": 3775,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 3734,
									"end": 3776,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3734,
									"end": 3776,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3847,
									"end": 3874,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3847,
									"end": 3874,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3847,
									"end": 3874,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3847,
									"end": 3874,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 3815,
									"end": 3816,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3803,
									"end": 3817,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3803,
									"end": 3817,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3803,
									"end": 3817,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3803,
									"end": 3817,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3682,
									"end": 3701,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3682,
									"end": 3701,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3652,
									"end": 3888,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 3652,
									"end": 3888,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3652,
									"end": 3888,
									"name": "tag",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 3652,
									"end": 3888,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3656,
									"end": 3659,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3916,
									"end": 3922,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3907,
									"end": 3914,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3904,
									"end": 3923,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3901,
									"end": 4102,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3901,
									"end": 4102,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 3901,
									"end": 4102,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3977,
									"end": 3996,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 3977,
									"end": 3996,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3977,
									"end": 3996,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3971,
									"end": 3997,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4060,
									"end": 4061,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 4056,
									"end": 4070,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 4056,
									"end": 4070,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4056,
									"end": 4070,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4072,
									"end": 4075,
									"name": "PUSH",
									"source": 6,
									"value": "F8"
								},
								{
									"begin": 4052,
									"end": 4076,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4048,
									"end": 4085,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 4044,
									"end": 4086,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4029,
									"end": 4087,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4014,
									"end": 4088,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4014,
									"end": 4088,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3901,
									"end": 4102,
									"name": "tag",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 3901,
									"end": 4102,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4148,
									"end": 4149,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4132,
									"end": 4146,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4132,
									"end": 4146,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4132,
									"end": 4146,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4128,
									"end": 4150,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4115,
									"end": 4151,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4115,
									"end": 4151,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3066,
									"end": 4418,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4423,
									"end": 4640,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 4423,
									"end": 4640,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4463,
									"end": 4464,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4489,
									"end": 4490,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4479,
									"end": 4611,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 4479,
									"end": 4611,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4533,
									"end": 4543,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 4528,
									"end": 4531,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 4524,
									"end": 4544,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 4521,
									"end": 4522,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4514,
									"end": 4545,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4568,
									"end": 4572,
									"name": "PUSH",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 4565,
									"end": 4566,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 4558,
									"end": 4573,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4596,
									"end": 4600,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4593,
									"end": 4594,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4586,
									"end": 4601,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4479,
									"end": 4611,
									"name": "tag",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 4479,
									"end": 4611,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4625,
									"end": 4634,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 4625,
									"end": 4634,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4423,
									"end": 4640,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5005,
									"end": 5133,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 5005,
									"end": 5133,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5045,
									"end": 5048,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5076,
									"end": 5077,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5072,
									"end": 5078,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5069,
									"end": 5070,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5066,
									"end": 5079,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 5063,
									"end": 5102,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5063,
									"end": 5102,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5063,
									"end": 5102,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5082,
									"end": 5100,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5082,
									"end": 5100,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 5082,
									"end": 5100,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5082,
									"end": 5100,
									"name": "tag",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 5082,
									"end": 5100,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5118,
									"end": 5127,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5118,
									"end": 5127,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5005,
									"end": 5133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5138,
									"end": 5315,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 5138,
									"end": 5315,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 201,
									"end": 4566,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 201,
									"end": 4566,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 201,
									"end": 4566,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 201,
									"end": 4566,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 4566,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 201,
									"end": 4566,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 201,
									"end": 4566,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200a963f3f13e8d262ea5b3eefd0d43cb3fd0d3285657c6dd13917b2294ea3dbe064736f6c634300080f0033",
									".code": [
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "8DD14802"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "E7D53FCB"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "E7D53FCB"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "F4F3122E"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "F8897945"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "DEEA800D"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "E181203A"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "E4993D8C"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "ADBC7CEE"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "B2938BEE"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "D5ABEB01"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "8DD14802"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "A457C2D7"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "39509351"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "534B1442"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "534B1442"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "5FA2EF10"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "6AC5DB19"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "39509351"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "3C3B7995"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "4D1D03D1"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "27C8F835"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "380D831B"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 201,
											"end": 4566,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2156,
											"end": 2254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2156,
											"end": 2254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4433,
											"end": 4630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4433,
											"end": 4630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1237,
											"end": 1251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1237,
											"end": 1251,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1230,
											"end": 1252,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1212,
											"end": 1253,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1212,
											"end": 1253,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1202,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1185,
											"end": 1203,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1072,
											"end": 1259,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1435,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1398,
											"end": 1400,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1264,
											"end": 1441,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5192,
											"end": 5478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5192,
											"end": 5478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 406,
											"end": 477,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 406,
											"end": 477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 406,
											"end": 477,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 406,
											"end": 477,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 406,
											"end": 477,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 406,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 406,
											"end": 477,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 406,
											"end": 477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 477,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 406,
											"end": 477,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 406,
											"end": 477,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 406,
											"end": 477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 406,
											"end": 477,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 406,
											"end": 477,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 406,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 406,
											"end": 477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 406,
											"end": 477,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 406,
											"end": 477,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 406,
											"end": 477,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 406,
											"end": 477,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 406,
											"end": 477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 406,
											"end": 477,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 406,
											"end": 477,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2071,
											"end": 2103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2103,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2103,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2104,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2104,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2043,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2026,
											"end": 2044,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 406,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1907,
											"end": 2110,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3177,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2257,
											"end": 2293,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2245,
											"end": 2247,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2230,
											"end": 2248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2115,
											"end": 2299,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 2996,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2888,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2996,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2996,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2996,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2888,
											"end": 2996,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2996,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2888,
											"end": 2996,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2996,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2996,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2888,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2996,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2888,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2888,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2996,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2888,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2996,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 5873,
											"end": 6107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5873,
											"end": 6107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 708,
											"end": 745,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 708,
											"end": 745,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 708,
											"end": 745,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 708,
											"end": 745,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 708,
											"end": 745,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 708,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 708,
											"end": 745,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 708,
											"end": 745,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 745,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 708,
											"end": 745,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 708,
											"end": 745,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 708,
											"end": 745,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 708,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 708,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 708,
											"end": 745,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 708,
											"end": 745,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 708,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 708,
											"end": 745,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2670,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2505,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2670,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2670,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2670,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2505,
											"end": 2670,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2670,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2670,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2670,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2670,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2505,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2633,
											"end": 2640,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2633,
											"end": 2640,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2642,
											"end": 2649,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2642,
											"end": 2649,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2651,
											"end": 2655,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2651,
											"end": 2655,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2658,
											"end": 2664,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2658,
											"end": 2664,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2670,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2505,
											"end": 2670,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2670,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2535,
											"end": 2560,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2593,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2576,
											"end": 2594,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2576,
											"end": 2594,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2603,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2603,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2603,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2646,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2677,
											"end": 2679,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2662,
											"end": 2680,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2662,
											"end": 2680,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2655,
											"end": 2689,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2525,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2505,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2304,
											"end": 2695,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3399,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 3237,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3399,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3399,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3399,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3237,
											"end": 3399,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3399,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3237,
											"end": 3399,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3399,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3399,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3237,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3237,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 3237,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3237,
											"end": 3399,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3399,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3237,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3237,
											"end": 3399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3399,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3237,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3237,
											"end": 3399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 294,
											"end": 315,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 294,
											"end": 315,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 294,
											"end": 315,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 294,
											"end": 315,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 294,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 294,
											"end": 315,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 294,
											"end": 315,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 294,
											"end": 315,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 294,
											"end": 315,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 294,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 294,
											"end": 315,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 294,
											"end": 315,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 294,
											"end": 315,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 633,
											"end": 663,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 633,
											"end": 663,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 633,
											"end": 663,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 633,
											"end": 663,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 633,
											"end": 663,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 633,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 633,
											"end": 663,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 633,
											"end": 663,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 663,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 633,
											"end": 663,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 633,
											"end": 663,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 633,
											"end": 663,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 633,
											"end": 663,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 633,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 633,
											"end": 663,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 633,
											"end": 663,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 633,
											"end": 663,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 633,
											"end": 663,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3408,
											"end": 3533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4399,
											"end": 4528,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 4399,
											"end": 4528,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4399,
											"end": 4528,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 4399,
											"end": 4528,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4399,
											"end": 4528,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4399,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4399,
											"end": 4528,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4399,
											"end": 4528,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4399,
											"end": 4528,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4399,
											"end": 4528,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4399,
											"end": 4528,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4399,
											"end": 4528,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4399,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4399,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4399,
											"end": 4528,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4399,
											"end": 4528,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4399,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4399,
											"end": 4528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4399,
											"end": 4528,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4399,
											"end": 4528,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4399,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4399,
											"end": 4528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2367,
											"end": 2469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 6594,
											"end": 7021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6594,
											"end": 7021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3729,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3729,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4049,
											"end": 4395,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 4049,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4049,
											"end": 4395,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 4049,
											"end": 4395,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4049,
											"end": 4395,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4049,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 4049,
											"end": 4395,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4049,
											"end": 4395,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4049,
											"end": 4395,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4049,
											"end": 4395,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4049,
											"end": 4395,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 4049,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4049,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 4049,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 4049,
											"end": 4395,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4049,
											"end": 4395,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4049,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4049,
											"end": 4395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4049,
											"end": 4395,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 4049,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4049,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4049,
											"end": 4395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3541,
											"end": 3905,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3541,
											"end": 3905,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3541,
											"end": 3905,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3541,
											"end": 3905,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3541,
											"end": 3905,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3541,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 3541,
											"end": 3905,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3541,
											"end": 3905,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3905,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3541,
											"end": 3905,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3541,
											"end": 3905,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 3541,
											"end": 3905,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3541,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 3541,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3541,
											"end": 3905,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3541,
											"end": 3905,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3541,
											"end": 3905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3541,
											"end": 3905,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3541,
											"end": 3905,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3541,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3541,
											"end": 3905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 751,
											"end": 794,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 751,
											"end": 794,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 751,
											"end": 794,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 751,
											"end": 794,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 751,
											"end": 794,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 751,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 751,
											"end": 794,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 751,
											"end": 794,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 794,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 751,
											"end": 794,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 751,
											"end": 794,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 751,
											"end": 794,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 751,
											"end": 794,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 751,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 751,
											"end": 794,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 751,
											"end": 794,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 751,
											"end": 794,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 751,
											"end": 794,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3976,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3976,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 590,
											"end": 627,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 590,
											"end": 627,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 590,
											"end": 627,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 590,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 590,
											"end": 627,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 590,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 590,
											"end": 627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 590,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 590,
											"end": 627,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 590,
											"end": 627,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 590,
											"end": 627,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 590,
											"end": 627,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 590,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 590,
											"end": 627,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 590,
											"end": 627,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 590,
											"end": 627,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 590,
											"end": 627,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3233,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3000,
											"end": 3233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3233,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3233,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3233,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3000,
											"end": 3233,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3233,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3000,
											"end": 3233,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3233,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3233,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3000,
											"end": 3233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3000,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 3000,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 3000,
											"end": 3233,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3233,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3000,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 3000,
											"end": 3233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3233,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 3000,
											"end": 3233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 3000,
											"end": 3233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 321,
											"end": 400,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 321,
											"end": 400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 321,
											"end": 400,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 321,
											"end": 400,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 321,
											"end": 400,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 321,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 321,
											"end": 400,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 321,
											"end": 400,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 400,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 321,
											"end": 400,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 321,
											"end": 400,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 321,
											"end": 400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 321,
											"end": 400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 321,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 358,
											"end": 400,
											"name": "PUSH",
											"source": 5,
											"value": "C6E5347D1A5FE685160429705E9E26BD3BBA8FEA"
										},
										{
											"begin": 321,
											"end": 400,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 321,
											"end": 400,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1897,
											"end": 2501,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1897,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1897,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1897,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1897,
											"end": 2501,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1897,
											"end": 2501,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1897,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1897,
											"end": 2501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1897,
											"end": 2501,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1897,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1897,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1897,
											"end": 2501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1688,
											"end": 1892,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1688,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1688,
											"end": 1892,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1688,
											"end": 1892,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1688,
											"end": 1892,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1688,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 1688,
											"end": 1892,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1688,
											"end": 1892,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1892,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1688,
											"end": 1892,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1688,
											"end": 1892,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 1688,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1688,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1688,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1688,
											"end": 1892,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1688,
											"end": 1892,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1688,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1688,
											"end": 1892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1688,
											"end": 1892,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1688,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1688,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1688,
											"end": 1892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2882,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2676,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2882,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2882,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2882,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2676,
											"end": 2882,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2882,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2882,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2882,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2882,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2676,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2676,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2676,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2676,
											"end": 2882,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2882,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2676,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2676,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2882,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2676,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2676,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 669,
											"end": 702,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 669,
											"end": 702,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 669,
											"end": 702,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 669,
											"end": 702,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 669,
											"end": 702,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 669,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 669,
											"end": 702,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 669,
											"end": 702,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 669,
											"end": 702,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 669,
											"end": 702,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 669,
											"end": 702,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 669,
											"end": 702,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 669,
											"end": 702,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 669,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 669,
											"end": 702,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 669,
											"end": 702,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 669,
											"end": 702,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 669,
											"end": 702,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2223,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2242,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2235,
											"end": 2247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2235,
											"end": 2247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4586,
											"end": 4593,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 4570,
											"end": 4602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4612,
											"end": 4623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5406,
											"end": 5412,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 5375,
											"end": 5413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 5433,
											"end": 5437,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 5423,
											"end": 5450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2888,
											"end": 2996,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2888,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1358,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1367,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1340,
											"end": 1388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 2954,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 2932,
											"end": 2939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2932,
											"end": 2954,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2965,
											"end": 2991,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2975,
											"end": 2990,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1410,
											"end": 1435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1435,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "B144BE0F16F8D30F2E18EF8F7938D5E90207932D96650E592FF47725716818FB"
										},
										{
											"begin": 2965,
											"end": 2991,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1400,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 6078,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 6040,
											"end": 6065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 6040,
											"end": 6078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6015,
											"end": 6079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3237,
											"end": 3399,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3237,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1358,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1367,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1340,
											"end": 1388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3313,
											"end": 3319,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3313,
											"end": 3323,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3332,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 3305,
											"end": 3332,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3332,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3305,
											"end": 3332,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3305,
											"end": 3332,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3332,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3332,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3305,
											"end": 3332,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3332,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3305,
											"end": 3332,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3332,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 3305,
											"end": 3332,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3332,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 3305,
											"end": 3332,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3340,
											"end": 3352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 3340,
											"end": 3361,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3340,
											"end": 3361,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3340,
											"end": 3361,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 3394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3374,
											"end": 3394,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1410,
											"end": 1435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1435,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "6D487F3988610155B3A9EF590F8AC170134D24E6505B9DDD3160E34ABAA0EDAF"
										},
										{
											"begin": 3374,
											"end": 3394,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1400,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3374,
											"end": 3394,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 3394,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 3394,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 3394,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 3394,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 3394,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3399,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4399,
											"end": 4528,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4399,
											"end": 4528,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1358,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1367,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1340,
											"end": 1388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4477,
											"end": 4497,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2071,
											"end": 2103,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2103,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2104,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2104,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4477,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "E605AC02EA219003EC58FC9CF4D4B3C5F2D62EC39807B1C63886DDD47A6FCD6E"
										},
										{
											"begin": 4477,
											"end": 4497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2043,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2026,
											"end": 2044,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4477,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4477,
											"end": 4497,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4497,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4497,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4497,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4497,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4497,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4505,
											"end": 4523,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4523,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4505,
											"end": 4523,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4505,
											"end": 4523,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4523,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4523,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4523,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4523,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4523,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4505,
											"end": 4523,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4399,
											"end": 4528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2436,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2448,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6792,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 6768,
											"end": 6793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6741,
											"end": 6793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6741,
											"end": 6793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6831,
											"end": 6846,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6707,
											"end": 6709,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6689,
											"end": 6710,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6746,
											"end": 6748,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 6726,
											"end": 6744,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6726,
											"end": 6744,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6726,
											"end": 6744,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6719,
											"end": 6749,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6819,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 6765,
											"end": 6783,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6765,
											"end": 6783,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6765,
											"end": 6783,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6758,
											"end": 6820,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6836,
											"end": 6854,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6836,
											"end": 6854,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6836,
											"end": 6854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6829,
											"end": 6864,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6881,
											"end": 6900,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6881,
											"end": 6900,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 6505,
											"end": 6906,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 6931,
											"end": 6936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 6945,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 6981,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6963,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6981,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6922,
											"end": 6982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3879,
											"end": 3881,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 3862,
											"end": 3890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4049,
											"end": 4395,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 4049,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1358,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1367,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1340,
											"end": 1388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4182,
											"end": 4189,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4157,
											"end": 4178,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 4157,
											"end": 4189,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4157,
											"end": 4189,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4149,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 4149,
											"end": 4200,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4149,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4149,
											"end": 4200,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4149,
											"end": 4200,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4149,
											"end": 4200,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7113,
											"end": 7115,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4149,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4149,
											"end": 4200,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4149,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7095,
											"end": 7116,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7152,
											"end": 7153,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 7132,
											"end": 7150,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7132,
											"end": 7150,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7132,
											"end": 7150,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7125,
											"end": 7154,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F20424E4221"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7170,
											"end": 7188,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7170,
											"end": 7188,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7170,
											"end": 7188,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7163,
											"end": 7200,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7217,
											"end": 7235,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7217,
											"end": 7235,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4149,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 6911,
											"end": 7241,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4149,
											"end": 4200,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 4149,
											"end": 4200,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4218,
											"end": 4234,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4218,
											"end": 4234,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4210,
											"end": 4250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 4210,
											"end": 4250,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4210,
											"end": 4250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4210,
											"end": 4250,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4210,
											"end": 4250,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4210,
											"end": 4250,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7448,
											"end": 7450,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4210,
											"end": 4250,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4210,
											"end": 4250,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4210,
											"end": 4250,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7430,
											"end": 7451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7487,
											"end": 7489,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 7467,
											"end": 7485,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7467,
											"end": 7485,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7467,
											"end": 7485,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7460,
											"end": 7490,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7506,
											"end": 7524,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7506,
											"end": 7524,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7506,
											"end": 7524,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7499,
											"end": 7541,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4210,
											"end": 4250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 7246,
											"end": 7582,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4210,
											"end": 4250,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 4210,
											"end": 4250,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4260,
											"end": 4272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4288,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 4281,
											"end": 4288,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 4275,
											"end": 4288,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 4275,
											"end": 4288,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4288,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 4275,
											"end": 4288,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4303,
											"end": 4338,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4303,
											"end": 4338,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4303,
											"end": 4338,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9163,
											"end": 9188,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9163,
											"end": 9188,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9163,
											"end": 9188,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9219,
											"end": 9221,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9204,
											"end": 9222,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9204,
											"end": 9222,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9197,
											"end": 9231,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9197,
											"end": 9231,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9197,
											"end": 9231,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9267,
											"end": 9299,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9267,
											"end": 9299,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9247,
											"end": 9265,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9247,
											"end": 9265,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9247,
											"end": 9265,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9240,
											"end": 9300,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4303,
											"end": 4338,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4303,
											"end": 4338,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4260,
											"end": 4288,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4260,
											"end": 4288,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4303,
											"end": 4338,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4508977418B95BAC209196E03356692C2D8F47957DEC1C15AF1A44CC40D39A04"
										},
										{
											"begin": 4303,
											"end": 4338,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4303,
											"end": 4338,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4303,
											"end": 4338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4303,
											"end": 4338,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4303,
											"end": 4338,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9151,
											"end": 9153,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4303,
											"end": 4338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4303,
											"end": 4338,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4303,
											"end": 4338,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4348,
											"end": 4368,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4368,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8FC"
										},
										{
											"begin": 4369,
											"end": 4381,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 4377,
											"end": 4381,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4369,
											"end": 4376,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4369,
											"end": 4381,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 4369,
											"end": 4381,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4369,
											"end": 4381,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 4369,
											"end": 4381,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4348,
											"end": 4382,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4382,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 4348,
											"end": 4382,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4382,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4382,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 4348,
											"end": 4382,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4382,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4139,
											"end": 4395,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4049,
											"end": 4395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4049,
											"end": 4395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4049,
											"end": 4395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4049,
											"end": 4395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3541,
											"end": 3905,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3541,
											"end": 3905,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1358,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1367,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1340,
											"end": 1388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3671,
											"end": 3695,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3671,
											"end": 3695,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3712,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 3663,
											"end": 3712,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3663,
											"end": 3712,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3663,
											"end": 3712,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3712,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9686,
											"end": 9688,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3663,
											"end": 3712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3663,
											"end": 3712,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3712,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9668,
											"end": 9689,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9725,
											"end": 9727,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9705,
											"end": 9723,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9698,
											"end": 9728,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61646472657373207A65726F21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9744,
											"end": 9762,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9744,
											"end": 9762,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9744,
											"end": 9762,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9737,
											"end": 9780,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9797,
											"end": 9815,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 9797,
											"end": 9815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3712,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 9484,
											"end": 9821,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3712,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 3663,
											"end": 3712,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 3734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3737,
											"end": 3750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 3743,
											"end": 3750,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 3737,
											"end": 3750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 3737,
											"end": 3750,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3737,
											"end": 3750,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 3737,
											"end": 3750,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3806,
											"end": 3855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3806,
											"end": 3855,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3806,
											"end": 3855,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10095,
											"end": 10129,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10095,
											"end": 10129,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10160,
											"end": 10162,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10145,
											"end": 10163,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10145,
											"end": 10163,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10138,
											"end": 10172,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 10138,
											"end": 10172,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10138,
											"end": 10172,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10188,
											"end": 10206,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10181,
											"end": 10215,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10181,
											"end": 10215,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10181,
											"end": 10215,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10251,
											"end": 10266,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10251,
											"end": 10266,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10248,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 10231,
											"end": 10249,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10231,
											"end": 10249,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10224,
											"end": 10267,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3855,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3806,
											"end": 3855,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 3750,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 3750,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10113,
											"end": 10128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "206CA7F97D46974ED97B981F879B17E9E1FE17EAD63770C806926D28AA5CBD5"
										},
										{
											"begin": 3806,
											"end": 3855,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3806,
											"end": 3855,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3806,
											"end": 3855,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3806,
											"end": 3855,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10044,
											"end": 10047,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3806,
											"end": 3855,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3806,
											"end": 3855,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3806,
											"end": 3855,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3865,
											"end": 3879,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3879,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 3880,
											"end": 3882,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3884,
											"end": 3896,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 3892,
											"end": 3896,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3884,
											"end": 3891,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3884,
											"end": 3896,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 3884,
											"end": 3896,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3884,
											"end": 3896,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 3884,
											"end": 3896,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3865,
											"end": 3897,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3865,
											"end": 3897,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10470,
											"end": 10502,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10470,
											"end": 10502,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10470,
											"end": 10502,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3865,
											"end": 3897,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10452,
											"end": 10503,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10519,
											"end": 10537,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 10519,
											"end": 10537,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10519,
											"end": 10537,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10512,
											"end": 10546,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10425,
											"end": 10443,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 10425,
											"end": 10443,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3865,
											"end": 3897,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 3865,
											"end": 3897,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3653,
											"end": 3905,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3653,
											"end": 3905,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3541,
											"end": 3905,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3541,
											"end": 3905,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3541,
											"end": 3905,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3541,
											"end": 3905,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3541,
											"end": 3905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3000,
											"end": 3233,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 3000,
											"end": 3233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1358,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1367,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1340,
											"end": 1388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3106,
											"end": 3120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3106,
											"end": 3120,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3106,
											"end": 3120,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3106,
											"end": 3120,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3106,
											"end": 3120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3106,
											"end": 3137,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 3106,
											"end": 3137,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3124,
											"end": 3137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3124,
											"end": 3137,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3124,
											"end": 3137,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3106,
											"end": 3137,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 3106,
											"end": 3137,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 3098,
											"end": 3146,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3146,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3098,
											"end": 3146,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3146,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3098,
											"end": 3146,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3098,
											"end": 3146,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 3098,
											"end": 3146,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3098,
											"end": 3146,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 3098,
											"end": 3146,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3154,
											"end": 3157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 3154,
											"end": 3169,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3154,
											"end": 3169,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3154,
											"end": 3169,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3195,
											"end": 3199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 3195,
											"end": 3199,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3199,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 3183,
											"end": 3199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3192,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3199,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 3183,
											"end": 3199,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3199,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 3183,
											"end": 3199,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3177,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 3177,
											"end": 3199,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3177,
											"end": 3199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3177,
											"end": 3199,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 3219,
											"end": 3222,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3212,
											"end": 3228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3212,
											"end": 3228,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3212,
											"end": 3228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3B06FFD21BEDFB2C375D7B1BCF74CA4FE1AFE205699E39610B3ACED7ADF6B9E9"
										},
										{
											"begin": 3212,
											"end": 3228,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3212,
											"end": 3228,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 3212,
											"end": 3228,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11013,
											"end": 11038,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11013,
											"end": 11038,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11069,
											"end": 11071,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11054,
											"end": 11072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11054,
											"end": 11072,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11047,
											"end": 11081,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11001,
											"end": 11003,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10839,
											"end": 11087,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3228,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 3212,
											"end": 3228,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3212,
											"end": 3228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3212,
											"end": 3228,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3212,
											"end": 3228,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3212,
											"end": 3228,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3212,
											"end": 3228,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3212,
											"end": 3228,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3212,
											"end": 3228,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3233,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3233,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1897,
											"end": 2501,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1897,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1953,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2026,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 2014,
											"end": 2026,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 2014,
											"end": 2033,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2033,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 2014,
											"end": 2033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2033,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 2014,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2008,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2033,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2033,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 1972,
											"end": 2074,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1972,
											"end": 2074,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1972,
											"end": 2074,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11294,
											"end": 11296,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1972,
											"end": 2074,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1972,
											"end": 2074,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2074,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11276,
											"end": 11297,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11333,
											"end": 11335,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 11313,
											"end": 11331,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 11313,
											"end": 11331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11313,
											"end": 11331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11306,
											"end": 11336,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11372,
											"end": 11406,
											"name": "PUSH",
											"source": 6,
											"value": "596F75207265616368656420796F757220707269766174652073616C65206C69"
										},
										{
											"begin": 11352,
											"end": 11370,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 11352,
											"end": 11370,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11352,
											"end": 11370,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11345,
											"end": 11407,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B5A5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11423,
											"end": 11441,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 11423,
											"end": 11441,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11423,
											"end": 11441,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11449,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11466,
											"end": 11485,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 11466,
											"end": 11485,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 11092,
											"end": 11491,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 2074,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 1972,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2113,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 2090,
											"end": 2097,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2090,
											"end": 2097,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2090,
											"end": 2113,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2090,
											"end": 2113,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2090,
											"end": 2140,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2090,
											"end": 2140,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2090,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 2090,
											"end": 2140,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2090,
											"end": 2140,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2140,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2133,
											"end": 2140,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2129,
											"name": "NUMBER",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2140,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2090,
											"end": 2140,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 2090,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 2082,
											"end": 2188,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2188,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2082,
											"end": 2188,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2082,
											"end": 2188,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2188,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11698,
											"end": 11700,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2082,
											"end": 2188,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2082,
											"end": 2188,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2188,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11680,
											"end": 11701,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11737,
											"end": 11739,
											"name": "PUSH",
											"source": 6,
											"value": "2B"
										},
										{
											"begin": 11717,
											"end": 11735,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 11717,
											"end": 11735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11717,
											"end": 11735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11710,
											"end": 11740,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11776,
											"end": 11810,
											"name": "PUSH",
											"source": 6,
											"value": "507269766174652053616C652068617320656E646564206F7220646964206E6F"
										},
										{
											"begin": 11756,
											"end": 11774,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 11756,
											"end": 11774,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11756,
											"end": 11774,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11749,
											"end": 11811,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D081CDD185C9D081E595D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11827,
											"end": 11845,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 11827,
											"end": 11845,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11827,
											"end": 11845,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11820,
											"end": 11861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11878,
											"end": 11897,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 11878,
											"end": 11897,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2082,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 11496,
											"end": 11903,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2082,
											"end": 2188,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 2082,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2270,
											"name": "PUSH",
											"source": 5,
											"value": "E"
										},
										{
											"begin": 2267,
											"end": 2270,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2219,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2219,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2195,
											"end": 2207,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2207,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2270,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2270,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2270,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2270,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2270,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 2259,
											"end": 2285,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2285,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2282,
											"end": 2285,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 2282,
											"end": 2285,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2278,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2285,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2285,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2285,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 2259,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 2249,
											"end": 2329,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2329,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2249,
											"end": 2329,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2249,
											"end": 2329,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2329,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12110,
											"end": 12112,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2249,
											"end": 2329,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2249,
											"end": 2329,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2329,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12092,
											"end": 12113,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12149,
											"end": 12151,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 12129,
											"end": 12147,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 12129,
											"end": 12147,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12129,
											"end": 12147,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12122,
											"end": 12152,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12188,
											"end": 12222,
											"name": "PUSH",
											"source": 6,
											"value": "4C657373207468616E204D696E696D756D206F72204D6F7265207468616E204D"
										},
										{
											"begin": 12168,
											"end": 12186,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 12168,
											"end": 12186,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12168,
											"end": 12186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12161,
											"end": 12223,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6178696D756D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12239,
											"end": 12257,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 12239,
											"end": 12257,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12239,
											"end": 12257,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12232,
											"end": 12268,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12285,
											"end": 12304,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 12285,
											"end": 12304,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 11908,
											"end": 12310,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 2329,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 2249,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2343,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 2366,
											"end": 2373,
											"name": "PUSH",
											"source": 5,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2344,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 2355,
											"end": 2359,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2350,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2344,
											"end": 2350,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 2344,
											"end": 2354,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2360,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2360,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2360,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2344,
											"end": 2360,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2344,
											"end": 2360,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 2344,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2343,
											"end": 2365,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2343,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2343,
											"end": 2374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2343,
											"end": 2374,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 2343,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2380,
											"end": 2384,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2380,
											"end": 2387,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2380,
											"end": 2387,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2380,
											"end": 2384,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2380,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 2380,
											"end": 2387,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2380,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 2380,
											"end": 2387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2380,
											"end": 2387,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 2380,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2380,
											"end": 2387,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2380,
											"end": 2387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2380,
											"end": 2387,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2380,
											"end": 2387,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2380,
											"end": 2387,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2398,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 2416,
											"end": 2420,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2433,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2398,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2398,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2398,
											"end": 2441,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 2398,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2472,
											"end": 2478,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2472,
											"end": 2478,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2453,
											"end": 2479,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2479,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2453,
											"end": 2479,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 11013,
											"end": 11038,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11013,
											"end": 11038,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11013,
											"end": 11038,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11069,
											"end": 11071,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11054,
											"end": 11072,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11054,
											"end": 11072,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11047,
											"end": 11081,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11047,
											"end": 11081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11047,
											"end": 11081,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11047,
											"end": 11081,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2479,
											"name": "PUSH",
											"source": 5,
											"value": "B887E151DBFCC06B4CE4F67F9BBEDAEB16AB224E34C6668858D0310C6D18FFC3"
										},
										{
											"begin": 2453,
											"end": 2479,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2479,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2453,
											"end": 2479,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2453,
											"end": 2479,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2453,
											"end": 2479,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2453,
											"end": 2479,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2453,
											"end": 2479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2453,
											"end": 2479,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2492,
											"end": 2496,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2492,
											"end": 2496,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1897,
											"end": 2501,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1897,
											"end": 2501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1688,
											"end": 1892,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1688,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1358,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1367,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1340,
											"end": 1388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1769,
											"end": 1792,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1769,
											"end": 1792,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1761,
											"end": 1808,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 1761,
											"end": 1808,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1761,
											"end": 1808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1808,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1761,
											"end": 1808,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1761,
											"end": 1808,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7448,
											"end": 7450,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1761,
											"end": 1808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1761,
											"end": 1808,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1761,
											"end": 1808,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7430,
											"end": 7451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7487,
											"end": 7489,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 7467,
											"end": 7485,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7467,
											"end": 7485,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7467,
											"end": 7485,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7460,
											"end": 7490,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7506,
											"end": 7524,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 7506,
											"end": 7524,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7506,
											"end": 7524,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7499,
											"end": 7541,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1808,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 7246,
											"end": 7582,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1808,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 1761,
											"end": 1808,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1817,
											"end": 1834,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1834,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1817,
											"end": 1834,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1817,
											"end": 1834,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1834,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1834,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1834,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1834,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1834,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1834,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1848,
											"end": 1886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1848,
											"end": 1886,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1817,
											"end": 1834,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1848,
											"end": 1886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1848,
											"end": 1886,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1848,
											"end": 1886,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 1688,
											"end": 1892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1688,
											"end": 1892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2882,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2676,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1358,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1348,
											"end": 1367,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 1340,
											"end": 1388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 1340,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2762,
											"end": 2775,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2762,
											"end": 2775,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2762,
											"end": 2775,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2762,
											"end": 2775,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2762,
											"end": 2775,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2762,
											"end": 2790,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 2762,
											"end": 2790,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2779,
											"end": 2790,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2779,
											"end": 2790,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2779,
											"end": 2790,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2762,
											"end": 2790,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 2762,
											"end": 2790,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2754,
											"end": 2799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 2754,
											"end": 2799,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2754,
											"end": 2799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2754,
											"end": 2799,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2754,
											"end": 2799,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2754,
											"end": 2799,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2754,
											"end": 2799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2754,
											"end": 2799,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2754,
											"end": 2799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2754,
											"end": 2799,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2754,
											"end": 2799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 2754,
											"end": 2799,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2754,
											"end": 2799,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 2754,
											"end": 2799,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2805,
											"end": 2823,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2823,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2823,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2830,
											"end": 2845,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2845,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2845,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2856,
											"end": 2877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2856,
											"end": 2877,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1410,
											"end": 1435,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1435,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2856,
											"end": 2877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1DC13BD033E49239661BA80E30AE191B1C31C79277B531E88246C7517971B85D"
										},
										{
											"begin": 2856,
											"end": 2877,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1400,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2856,
											"end": 2877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 1264,
											"end": 1441,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "325"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12879,
											"end": 12881,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12861,
											"end": 12882,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12918,
											"end": 12920,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 12898,
											"end": 12916,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12898,
											"end": 12916,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12898,
											"end": 12916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12891,
											"end": 12921,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12957,
											"end": 12991,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 12937,
											"end": 12955,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 12937,
											"end": 12955,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12937,
											"end": 12955,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12930,
											"end": 12992,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13008,
											"end": 13026,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 13008,
											"end": 13026,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13008,
											"end": 13026,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13001,
											"end": 13035,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13052,
											"end": 13071,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 13052,
											"end": 13071,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 12677,
											"end": 13077,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13284,
											"end": 13286,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13266,
											"end": 13287,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13323,
											"end": 13325,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 13303,
											"end": 13321,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 13303,
											"end": 13321,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13303,
											"end": 13321,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13296,
											"end": 13326,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13362,
											"end": 13396,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 13342,
											"end": 13360,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 13342,
											"end": 13360,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13342,
											"end": 13360,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13335,
											"end": 13397,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13413,
											"end": 13431,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 13413,
											"end": 13431,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13413,
											"end": 13431,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13406,
											"end": 13438,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13455,
											"end": 13474,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 13455,
											"end": 13474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 13082,
											"end": 13480,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10401,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1435,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1435,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10891,
											"end": 10915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 10928,
											"end": 10933,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10935,
											"end": 10942,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10918,
											"end": 10927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 10918,
											"end": 10943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10891,
											"end": 10943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10891,
											"end": 10943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10957,
											"end": 10973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10957,
											"end": 10994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11038,
											"end": 11044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11044,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13687,
											"end": 13689,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13669,
											"end": 13690,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13726,
											"end": 13728,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 13706,
											"end": 13724,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 13706,
											"end": 13724,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13706,
											"end": 13724,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13699,
											"end": 13729,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13765,
											"end": 13796,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 13745,
											"end": 13763,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 13745,
											"end": 13763,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13745,
											"end": 13763,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13738,
											"end": 13797,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13814,
											"end": 13832,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 13814,
											"end": 13832,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 13485,
											"end": 13838,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 11129,
											"end": 11134,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11136,
											"end": 11143,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11164,
											"end": 11170,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11161,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11170,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 11120,
											"end": 11171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10881,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14045,
											"end": 14047,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14027,
											"end": 14048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14084,
											"end": 14086,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 14064,
											"end": 14082,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 14064,
											"end": 14082,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14064,
											"end": 14082,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14057,
											"end": 14087,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14123,
											"end": 14157,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 14103,
											"end": 14121,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 14103,
											"end": 14121,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14103,
											"end": 14121,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14096,
											"end": 14158,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14174,
											"end": 14192,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 14174,
											"end": 14192,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14174,
											"end": 14192,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14167,
											"end": 14202,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14219,
											"end": 14238,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 14219,
											"end": 14238,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 13843,
											"end": 14244,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14453,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14433,
											"end": 14454,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14490,
											"end": 14492,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 14470,
											"end": 14488,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 14470,
											"end": 14488,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14470,
											"end": 14488,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14463,
											"end": 14493,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14529,
											"end": 14563,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 14509,
											"end": 14527,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 14509,
											"end": 14527,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14509,
											"end": 14527,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14502,
											"end": 14564,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14580,
											"end": 14598,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 14580,
											"end": 14598,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14580,
											"end": 14598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14573,
											"end": 14606,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14623,
											"end": 14642,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 14623,
											"end": 14642,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 14249,
											"end": 14648,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7795,
											"end": 7814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 14857,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14837,
											"end": 14858,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14894,
											"end": 14896,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 14874,
											"end": 14892,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 14874,
											"end": 14892,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14874,
											"end": 14892,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14867,
											"end": 14897,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14933,
											"end": 14967,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 14913,
											"end": 14931,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 14913,
											"end": 14931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14913,
											"end": 14931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14906,
											"end": 14968,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14984,
											"end": 15002,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 14984,
											"end": 15002,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14984,
											"end": 15002,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14977,
											"end": 15013,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15030,
											"end": 15049,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 15030,
											"end": 15049,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 14653,
											"end": 15055,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 8006,
											"end": 8029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8060,
											"end": 8062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8054,
											"end": 8058,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8064,
											"end": 8070,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1435,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1398,
											"end": 1400,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1401,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1441,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8082,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 11786,
											"end": 11907,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 616,
											"end": 747,
											"name": "tag",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 616,
											"end": 747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 691,
											"end": 722,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 691,
											"end": 722,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 681,
											"end": 723,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 681,
											"end": 723,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 671,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 671,
											"end": 741,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 737,
											"end": 738,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 727,
											"end": 739,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 671,
											"end": 741,
											"name": "tag",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 671,
											"end": 741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 616,
											"end": 747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 616,
											"end": 747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 752,
											"end": 1067,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 752,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 820,
											"end": 826,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 860,
											"end": 867,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 856,
											"end": 879,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 852,
											"end": 884,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 849,
											"end": 901,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 849,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 849,
											"end": 901,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 897,
											"end": 898,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 894,
											"end": 895,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 899,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 849,
											"end": 901,
											"name": "tag",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 849,
											"end": 901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 936,
											"end": 945,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 923,
											"end": 946,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 955,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 980,
											"end": 985,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 955,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 955,
											"end": 986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 955,
											"end": 986,
											"name": "tag",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 955,
											"end": 986,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1005,
											"end": 1010,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1059,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1060,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1060,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1060,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1060,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1061,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1029,
											"end": 1061,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 752,
											"end": 1067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1446,
											"end": 1902,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1446,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1523,
											"end": 1529,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1539,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1594,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1580,
											"end": 1589,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1578,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1567,
											"end": 1590,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1595,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1560,
											"end": 1612,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1560,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 1560,
											"end": 1612,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1608,
											"end": 1609,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1606,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1560,
											"end": 1612,
											"name": "tag",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 1560,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1647,
											"end": 1656,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1657,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 1691,
											"end": 1696,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 1666,
											"end": 1697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1666,
											"end": 1697,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 1666,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1773,
											"end": 1775,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1758,
											"end": 1776,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1758,
											"end": 1776,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1777,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 1745,
											"end": 1777,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 1786,
											"end": 1819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "tag",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1446,
											"end": 1902,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1446,
											"end": 1902,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1845,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1845,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1892,
											"end": 1894,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1864,
											"end": 1896,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1864,
											"end": 1896,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1446,
											"end": 1902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2880,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2700,
											"end": 2880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2759,
											"end": 2765,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2812,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2800,
											"end": 2809,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 2798,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2787,
											"end": 2810,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2815,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2828,
											"end": 2829,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "tag",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 2780,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2851,
											"end": 2874,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2874,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2700,
											"end": 2880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 3132,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2885,
											"end": 3132,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 2950,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2997,
											"end": 2999,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2985,
											"end": 2994,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2976,
											"end": 2983,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 2995,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 3000,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 3017,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 3017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 2965,
											"end": 3017,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3013,
											"end": 3014,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3011,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3003,
											"end": 3015,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 3017,
											"name": "tag",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 2965,
											"end": 3017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3061,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3039,
											"end": 3062,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 3071,
											"end": 3102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3397,
											"end": 3780,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3397,
											"end": 3780,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3474,
											"end": 3480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3488,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3490,
											"end": 3496,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3545,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3531,
											"end": 3540,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3522,
											"end": 3529,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3518,
											"end": 3541,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3514,
											"end": 3546,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3511,
											"end": 3563,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3511,
											"end": 3563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 3511,
											"end": 3563,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3556,
											"end": 3557,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3561,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3511,
											"end": 3563,
											"name": "tag",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 3511,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3595,
											"end": 3604,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3605,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 3605,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 3605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3652,
											"end": 3654,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3641,
											"end": 3650,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3637,
											"end": 3655,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3624,
											"end": 3656,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3614,
											"end": 3656,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3614,
											"end": 3656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3708,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3695,
											"end": 3704,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 3709,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3710,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 3744,
											"end": 3749,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 3719,
											"end": 3750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3750,
											"name": "tag",
											"source": 6,
											"value": "397"
										},
										{
											"begin": 3719,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 3774,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3759,
											"end": 3774,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3759,
											"end": 3774,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3759,
											"end": 3774,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3397,
											"end": 3780,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3397,
											"end": 3780,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3397,
											"end": 3780,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3397,
											"end": 3780,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3397,
											"end": 3780,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3397,
											"end": 3780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 4310,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3785,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3877,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3879,
											"end": 3885,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3887,
											"end": 3893,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3895,
											"end": 3901,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3948,
											"end": 3951,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3936,
											"end": 3945,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3927,
											"end": 3934,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3923,
											"end": 3946,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3952,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 3969,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 3916,
											"end": 3969,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 3966,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3962,
											"end": 3963,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3955,
											"end": 3967,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3916,
											"end": 3969,
											"name": "tag",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 3916,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4004,
											"end": 4013,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3991,
											"end": 4014,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 4048,
											"end": 4053,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 4023,
											"end": 4054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4023,
											"end": 4054,
											"name": "tag",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 4023,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4073,
											"end": 4078,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4125,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4097,
											"end": 4129,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4097,
											"end": 4129,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4176,
											"end": 4178,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4161,
											"end": 4179,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4161,
											"end": 4179,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4180,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4180,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4232,
											"end": 4234,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4217,
											"end": 4235,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4217,
											"end": 4235,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4236,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4245,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 4204,
											"end": 4236,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4245,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 4245,
											"end": 4278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4245,
											"end": 4278,
											"name": "tag",
											"source": 6,
											"value": "401"
										},
										{
											"begin": 4245,
											"end": 4278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 4310,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 4310,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 4310,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3785,
											"end": 4310,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3785,
											"end": 4310,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3785,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4703,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 4315,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4397,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4444,
											"end": 4446,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4432,
											"end": 4441,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4430,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4419,
											"end": 4442,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4415,
											"end": 4447,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4412,
											"end": 4464,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4412,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 4412,
											"end": 4464,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4460,
											"end": 4461,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4457,
											"end": 4458,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4450,
											"end": 4462,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4412,
											"end": 4464,
											"name": "tag",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 4412,
											"end": 4464,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4499,
											"end": 4508,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4486,
											"end": 4509,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 4543,
											"end": 4548,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 4518,
											"end": 4549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4518,
											"end": 4549,
											"name": "tag",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 4518,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4573,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4625,
											"end": 4627,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4610,
											"end": 4628,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4597,
											"end": 4629,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4638,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 4597,
											"end": 4629,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4638,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 4638,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4638,
											"end": 4671,
											"name": "tag",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 4638,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4690,
											"end": 4697,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4697,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4703,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4703,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4703,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4703,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4708,
											"end": 4956,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4708,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 4782,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4784,
											"end": 4790,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4837,
											"end": 4839,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4825,
											"end": 4834,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4816,
											"end": 4823,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4812,
											"end": 4835,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4808,
											"end": 4840,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4805,
											"end": 4857,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4805,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 4805,
											"end": 4857,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 4854,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4850,
											"end": 4851,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4843,
											"end": 4855,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4805,
											"end": 4857,
											"name": "tag",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 4805,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4876,
											"end": 4899,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4876,
											"end": 4899,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4876,
											"end": 4899,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4946,
											"end": 4948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4931,
											"end": 4949,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4950,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4950,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4708,
											"end": 4956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 5341,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 4961,
											"end": 5341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5040,
											"end": 5041,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5036,
											"end": 5048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5036,
											"end": 5048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5036,
											"end": 5048,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 5036,
											"end": 5048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5083,
											"end": 5095,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5083,
											"end": 5095,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5083,
											"end": 5095,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5104,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 5104,
											"end": 5165,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5162,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 5150,
											"end": 5156,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5163,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5136,
											"end": 5163,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5136,
											"end": 5163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5104,
											"end": 5165,
											"name": "tag",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 5104,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5211,
											"end": 5213,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5203,
											"end": 5209,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5200,
											"end": 5214,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5215,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 5174,
											"end": 5335,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5257,
											"end": 5267,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 5252,
											"end": 5255,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5248,
											"end": 5268,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5245,
											"end": 5246,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5238,
											"end": 5269,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5292,
											"end": 5296,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 5289,
											"end": 5290,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5282,
											"end": 5297,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5320,
											"end": 5324,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5317,
											"end": 5318,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5310,
											"end": 5325,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5335,
											"name": "tag",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 5174,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5335,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 5341,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 5341,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 5341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 5341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5346,
											"end": 5686,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 5346,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5548,
											"end": 5550,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5530,
											"end": 5551,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5530,
											"end": 5551,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5530,
											"end": 5551,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5587,
											"end": 5589,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 5567,
											"end": 5585,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5567,
											"end": 5585,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5567,
											"end": 5585,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5560,
											"end": 5590,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B0B63632B9103737BA1037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5621,
											"end": 5623,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5606,
											"end": 5624,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5606,
											"end": 5624,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5599,
											"end": 5645,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5677,
											"end": 5679,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5346,
											"end": 5686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5691,
											"end": 5818,
											"name": "tag",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 5691,
											"end": 5818,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5752,
											"end": 5762,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 5747,
											"end": 5750,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5743,
											"end": 5763,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5740,
											"end": 5741,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5733,
											"end": 5764,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5783,
											"end": 5787,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 5780,
											"end": 5781,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5773,
											"end": 5788,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5807,
											"end": 5811,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5804,
											"end": 5805,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5797,
											"end": 5812,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 5951,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 5823,
											"end": 5951,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5863,
											"end": 5866,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5890,
											"end": 5896,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5887,
											"end": 5888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5884,
											"end": 5897,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5881,
											"end": 5920,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5881,
											"end": 5920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 5881,
											"end": 5920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 5900,
											"end": 5918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "tag",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5936,
											"end": 5945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5936,
											"end": 5945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 5951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5956,
											"end": 6284,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 5956,
											"end": 6284,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6158,
											"end": 6160,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6140,
											"end": 6161,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6140,
											"end": 6161,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6140,
											"end": 6161,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6198,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 6177,
											"end": 6195,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6177,
											"end": 6195,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6177,
											"end": 6195,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6170,
											"end": 6199,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A65726F21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6230,
											"end": 6232,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6215,
											"end": 6233,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6215,
											"end": 6233,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6243,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6275,
											"end": 6277,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6260,
											"end": 6278,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6260,
											"end": 6278,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5956,
											"end": 6284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7587,
											"end": 8009,
											"name": "tag",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 7587,
											"end": 8009,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7676,
											"end": 7677,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7719,
											"end": 7724,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7676,
											"end": 7677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 8003,
											"name": "tag",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 7733,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7754,
											"end": 7761,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7744,
											"end": 7752,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7741,
											"end": 7762,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 8003,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 7733,
											"end": 8003,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7813,
											"end": 7817,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7809,
											"end": 7810,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7805,
											"end": 7811,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7801,
											"end": 7818,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7795,
											"end": 7799,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7792,
											"end": 7819,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7789,
											"end": 7842,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7789,
											"end": 7842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 7789,
											"end": 7842,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7822,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 7822,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 7822,
											"end": 7840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7822,
											"end": 7840,
											"name": "tag",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 7822,
											"end": 7840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7872,
											"end": 7879,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7862,
											"end": 7870,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7858,
											"end": 7880,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7855,
											"end": 7910,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7855,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 7855,
											"end": 7910,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7892,
											"end": 7908,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7892,
											"end": 7908,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7892,
											"end": 7908,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7892,
											"end": 7908,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7855,
											"end": 7910,
											"name": "tag",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 7855,
											"end": 7910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7971,
											"end": 7993,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7971,
											"end": 7993,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7971,
											"end": 7993,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 7971,
											"end": 7993,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7931,
											"end": 7946,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7931,
											"end": 7946,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7931,
											"end": 7946,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7931,
											"end": 7946,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 7733,
											"end": 8003,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 8003,
											"name": "tag",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 7733,
											"end": 8003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7737,
											"end": 7740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7587,
											"end": 8009,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7587,
											"end": 8009,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7587,
											"end": 8009,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7587,
											"end": 8009,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7587,
											"end": 8009,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7587,
											"end": 8009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8014,
											"end": 8820,
											"name": "tag",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 8014,
											"end": 8820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8063,
											"end": 8068,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8093,
											"end": 8101,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8083,
											"end": 8163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 8083,
											"end": 8163,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8134,
											"end": 8135,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8148,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 8148,
											"end": 8153,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8083,
											"end": 8163,
											"name": "tag",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 8083,
											"end": 8163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8182,
											"end": 8186,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8172,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 8172,
											"end": 8248,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8219,
											"end": 8220,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 8233,
											"end": 8238,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8172,
											"end": 8248,
											"name": "tag",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 8172,
											"end": 8248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8264,
											"end": 8268,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8282,
											"end": 8283,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8277,
											"end": 8336,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8336,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 8277,
											"end": 8336,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8350,
											"end": 8351,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 8345,
											"end": 8475,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8345,
											"end": 8475,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8345,
											"end": 8475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 8345,
											"end": 8475,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8257,
											"end": 8475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 8257,
											"end": 8475,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8336,
											"name": "tag",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 8277,
											"end": 8336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8307,
											"end": 8308,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8298,
											"end": 8308,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8298,
											"end": 8308,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8321,
											"end": 8326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8321,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 8321,
											"end": 8326,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8345,
											"end": 8475,
											"name": "tag",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 8345,
											"end": 8475,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8382,
											"end": 8385,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 8372,
											"end": 8380,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8369,
											"end": 8386,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8366,
											"end": 8409,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8366,
											"end": 8409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 8366,
											"end": 8409,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8389,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 8389,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 8389,
											"end": 8407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8389,
											"end": 8407,
											"name": "tag",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 8389,
											"end": 8407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8445,
											"end": 8446,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8431,
											"end": 8447,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8431,
											"end": 8447,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 8460,
											"end": 8465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 8460,
											"end": 8465,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8257,
											"end": 8475,
											"name": "tag",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 8257,
											"end": 8475,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8257,
											"end": 8475,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8559,
											"end": 8561,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8549,
											"end": 8557,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8546,
											"end": 8562,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8540,
											"end": 8543,
											"name": "PUSH",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 8534,
											"end": 8538,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8531,
											"end": 8544,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8527,
											"end": 8563,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8521,
											"end": 8523,
											"name": "PUSH",
											"source": 6,
											"value": "4E"
										},
										{
											"begin": 8511,
											"end": 8519,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8508,
											"end": 8524,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8503,
											"end": 8505,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 8497,
											"end": 8501,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8494,
											"end": 8506,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8490,
											"end": 8525,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8487,
											"end": 8564,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 8484,
											"end": 8643,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8484,
											"end": 8643,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 8484,
											"end": 8643,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8596,
											"end": 8615,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8596,
											"end": 8615,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8596,
											"end": 8615,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8628,
											"end": 8633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 8628,
											"end": 8633,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8484,
											"end": 8643,
											"name": "tag",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 8484,
											"end": 8643,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8675,
											"end": 8709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 8700,
											"end": 8708,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8694,
											"end": 8698,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8675,
											"end": 8709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 8675,
											"end": 8709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8675,
											"end": 8709,
											"name": "tag",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 8675,
											"end": 8709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8745,
											"end": 8751,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8741,
											"end": 8742,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8737,
											"end": 8743,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 8733,
											"end": 8752,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8724,
											"end": 8731,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8721,
											"end": 8753,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8718,
											"end": 8776,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8718,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 8718,
											"end": 8776,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 8756,
											"end": 8774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "tag",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8794,
											"end": 8814,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8794,
											"end": 8814,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8014,
											"end": 8820,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8014,
											"end": 8820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8825,
											"end": 8956,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 8825,
											"end": 8956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8885,
											"end": 8890,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8914,
											"end": 8950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 8941,
											"end": 8949,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8935,
											"end": 8939,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8914,
											"end": 8950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 8914,
											"end": 8950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9311,
											"end": 9479,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 9311,
											"end": 9479,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9351,
											"end": 9358,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9417,
											"end": 9418,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9413,
											"end": 9414,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9409,
											"end": 9415,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 9405,
											"end": 9419,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9402,
											"end": 9403,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9399,
											"end": 9420,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9394,
											"end": 9395,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9380,
											"end": 9397,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9376,
											"end": 9421,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9373,
											"end": 9444,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9373,
											"end": 9444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 9373,
											"end": 9444,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9424,
											"end": 9442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 9424,
											"end": 9442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 9424,
											"end": 9442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9424,
											"end": 9442,
											"name": "tag",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 9424,
											"end": 9442,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9464,
											"end": 9473,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9464,
											"end": 9473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9311,
											"end": 9479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10557,
											"end": 10834,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 10557,
											"end": 10834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10624,
											"end": 10630,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10677,
											"end": 10679,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10665,
											"end": 10674,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10656,
											"end": 10663,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10652,
											"end": 10675,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10648,
											"end": 10680,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 10645,
											"end": 10697,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10645,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 10645,
											"end": 10697,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10693,
											"end": 10694,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10690,
											"end": 10691,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10683,
											"end": 10695,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10645,
											"end": 10697,
											"name": "tag",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 10645,
											"end": 10697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10725,
											"end": 10734,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10719,
											"end": 10735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10778,
											"end": 10783,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10771,
											"end": 10784,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10764,
											"end": 10785,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10757,
											"end": 10762,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10754,
											"end": 10786,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10744,
											"end": 10804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 10744,
											"end": 10804,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10800,
											"end": 10801,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10797,
											"end": 10798,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10790,
											"end": 10802,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12315,
											"end": 12450,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 12315,
											"end": 12450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12354,
											"end": 12357,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12375,
											"end": 12392,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 12375,
											"end": 12392,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12375,
											"end": 12392,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12372,
											"end": 12415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "458"
										},
										{
											"begin": 12372,
											"end": 12415,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12395,
											"end": 12413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "458"
										},
										{
											"begin": 12395,
											"end": 12413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 12395,
											"end": 12413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12395,
											"end": 12413,
											"name": "tag",
											"source": 6,
											"value": "458"
										},
										{
											"begin": 12395,
											"end": 12413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12442,
											"end": 12443,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 12431,
											"end": 12444,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12431,
											"end": 12444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12315,
											"end": 12450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12455,
											"end": 12672,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 12455,
											"end": 12672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12495,
											"end": 12496,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12521,
											"end": 12522,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12511,
											"end": 12643,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 12511,
											"end": 12643,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12565,
											"end": 12575,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 12560,
											"end": 12563,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 12556,
											"end": 12576,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 12553,
											"end": 12554,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12546,
											"end": 12577,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12600,
											"end": 12604,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 12597,
											"end": 12598,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12590,
											"end": 12605,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12628,
											"end": 12632,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 12625,
											"end": 12626,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12618,
											"end": 12633,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12511,
											"end": 12643,
											"name": "tag",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 12511,
											"end": 12643,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12657,
											"end": 12666,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 12657,
											"end": 12666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12455,
											"end": 12672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Contracts/AccessBSC.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Bridge()": "5fa2ef10",
							"Path()": "deea800d",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"changeMinMaxPrivateSale(uint256,uint256)": "e181203a",
							"deadAddress()": "27c8f835",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"endSale()": "380d831b",
							"increaseAllowance(address,uint256)": "39509351",
							"max()": "6ac5db19",
							"maxSupply()": "d5abeb01",
							"min()": "f8897945",
							"name()": "06fdde03",
							"privateLimit()": "3c3b7995",
							"privateSale(address)": "e7d53fcb",
							"setBridge(address)": "8dd14802",
							"setPrivateLimit(uint256)": "534b1442",
							"startSale(uint256,uint256)": "f4f3122e",
							"symbol()": "95d89b41",
							"theCompany()": "e4993d8c",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"viewSale()": "4d1d03d1",
							"withdrawalBNB(uint256,uint256,address)": "adbc7cee",
							"withdrawalToken(address,uint256,uint256,address)": "b2938bee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newLimit\",\"type\":\"uint256\"}],\"name\":\"PrivateLimit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Price\",\"type\":\"uint256\"}],\"name\":\"PrivateSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newBridge\",\"type\":\"address\"}],\"name\":\"SetBridge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimal\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"WithdrawalBNB\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"WithdrawalToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Min\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Max\",\"type\":\"uint256\"}],\"name\":\"minMax\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Time\",\"type\":\"uint256\"}],\"name\":\"saleEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"saleStarted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Bridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Path\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"name\":\"changeMinMaxPrivateSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deadAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"max\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"min\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"privateSale\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newBridge\",\"type\":\"address\"}],\"name\":\"setBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"setPrivateLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sEBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sPrice\",\"type\":\"uint256\"}],\"name\":\"startSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"theCompany\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"StartBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"EndBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"SaleCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"SalePrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimal\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawalBNB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimal\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawalToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/AccessBSC.sol\":\"Metacces\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Contracts/AccessBSC.sol\":{\"keccak256\":\"0x87fc2174faf3045f05ce9a96bf428d99f721925beae5a8f1995e3c05e330ef6c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cedf39d21314de6aa9a85d6643334159e127173312606bd9e95f9929cb3c941f\",\"dweb:/ipfs/QmU1TWAgoXxAZqJE4DKzi7SUmQ4XbKkEE6NE5dDneZouUy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "Contracts/AccessBSC.sol:Metacces",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "Contracts/AccessBSC.sol:Metacces",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "Contracts/AccessBSC.sol:Metacces",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "Contracts/AccessBSC.sol:Metacces",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "Contracts/AccessBSC.sol:Metacces",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1033,
								"contract": "Contracts/AccessBSC.sol:Metacces",
								"label": "owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1035,
								"contract": "Contracts/AccessBSC.sol:Metacces",
								"label": "Bridge",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1041,
								"contract": "Contracts/AccessBSC.sol:Metacces",
								"label": "deadAddress",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 1043,
								"contract": "Contracts/AccessBSC.sol:Metacces",
								"label": "sSBlock",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1045,
								"contract": "Contracts/AccessBSC.sol:Metacces",
								"label": "sEBlock",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1047,
								"contract": "Contracts/AccessBSC.sol:Metacces",
								"label": "sTot",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1049,
								"contract": "Contracts/AccessBSC.sol:Metacces",
								"label": "sPrice",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1055,
								"contract": "Contracts/AccessBSC.sol:Metacces",
								"label": "Path",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1060,
								"contract": "Contracts/AccessBSC.sol:Metacces",
								"label": "max",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1066,
								"contract": "Contracts/AccessBSC.sol:Metacces",
								"label": "min",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 1069,
								"contract": "Contracts/AccessBSC.sol:Metacces",
								"label": "privateLimit",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 1074,
								"contract": "Contracts/AccessBSC.sol:Metacces",
								"label": "maxSupply",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							710
						],
						"ERC20": [
							585
						],
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							688
						]
					},
					"id": 586,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 664,
							"src": "130:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 689,
							"src": "153:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 711,
							"src": "195:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 710,
										"src": "1421:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "1421:7:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "1430:6:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "1430:6:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 688,
										"src": "1438:14:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1438:14:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "230:1172:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 585,
							"linearizedBaseContracts": [
								585,
								688,
								663,
								710
							],
							"name": "ERC20",
							"nameLocation": "1412:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1495:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1459:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 14,
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1467:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1459:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 13,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1478:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1567:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1511:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 20,
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1519:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1511:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 19,
											"keyType": {
												"id": 17,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1538:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1530:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1549:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1601:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1585:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1585:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1635:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1620:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 24,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1620:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1661:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1646:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1646:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2034:57:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2044:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 36,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2052:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2044:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2044:13:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2067:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "2077:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2067:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2067:17:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "1675:298:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2004:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1990:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 29,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1990:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2025:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2011:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 31,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2011:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1989:44:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2034:0:0"
									},
									"scope": 585,
									"src": "1978:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										675
									],
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "2225:29:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2242:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "2235:12:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2097:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2165:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 47,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2192:8:0"
									},
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2169:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2210:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 48,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2210:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:15:0"
									},
									"scope": 585,
									"src": "2156:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										681
									],
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "2438:31:0",
										"statements": [
											{
												"expression": {
													"id": 61,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2455:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 60,
												"id": 62,
												"nodeType": "Return",
												"src": "2448:14:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "2260:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2376:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 57,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2405:8:0"
									},
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2382:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2423:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 58,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2423:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2422:15:0"
									},
									"scope": 585,
									"src": "2367:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										687
									],
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "3158:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3175:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 70,
												"id": 72,
												"nodeType": "Return",
												"src": "3168:9:0"
											}
										]
									},
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2475:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3102:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3133:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3110:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3151:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 68,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3151:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3150:7:0"
									},
									"scope": 585,
									"src": "3093:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										612
									],
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "3314:36:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "3331:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "3324:19:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3190:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3253:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 77,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3287:8:0"
									},
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3264:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3305:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3304:9:0"
									},
									"scope": 585,
									"src": "3244:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										620
									],
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "3491:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 93,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "3508:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 95,
													"indexExpression": {
														"id": 94,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "3518:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3508:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 92,
												"id": 96,
												"nodeType": "Return",
												"src": "3501:25:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3356:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3417:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 89,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3464:8:0"
									},
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3435:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3427:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3426:17:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3482:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:9:0"
									},
									"scope": 585,
									"src": "3408:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										630
									],
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "3814:104:0",
										"statements": [
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3832:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "3824:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3824:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 113,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "3840:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3840:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3824:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 115,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "3872:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "3879:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 117,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "3883:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 114,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "3862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "3862:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 108,
												"id": 121,
												"nodeType": "Return",
												"src": "3900:11:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3539:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3738:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3790:8:0"
									},
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3755:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3747:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3747:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3767:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3759:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3746:28:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:6:0"
									},
									"scope": 585,
									"src": "3729:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										640
									],
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "4074:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 134,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4091:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 136,
														"indexExpression": {
															"id": 135,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4103:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4091:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 138,
													"indexExpression": {
														"id": 137,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4110:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4091:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 139,
												"nodeType": "Return",
												"src": "4084:34:0"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "3924:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3985:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 130,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4047:8:0"
									},
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4003:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3995:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3995:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4018:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4010:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4010:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3994:32:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4065:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4065:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4064:9:0"
									},
									"scope": 585,
									"src": "3976:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										650
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4522:108:0",
										"statements": [
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4540:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 165,
														"src": "4532:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 152,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4532:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 154,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "4548:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4548:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4532:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4579:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 159,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "4586:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 160,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4595:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 157,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "4570:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4570:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "4570:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4619:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 151,
												"id": 164,
												"nodeType": "Return",
												"src": "4612:11:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4131:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4442:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4498:8:0"
									},
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4458:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4450:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4475:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4467:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:33:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4516:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4516:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4515:6:0"
									},
									"scope": 585,
									"src": "4433:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										662
									],
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "5325:153:0",
										"statements": [
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5343:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "5335:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 179,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5335:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 183,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 181,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "5353:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5353:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5335:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5391:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 186,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5397:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5406:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 184,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "5375:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "5375:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 191,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5433:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5439:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5443:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 190,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "5423:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5423:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5423:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5467:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 178,
												"id": 197,
												"nodeType": "Return",
												"src": "5460:11:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4636:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5201:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5301:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5231:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5223:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5223:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5253:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5245:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5245:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5273:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5265:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5213:72:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5319:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5319:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5318:6:0"
									},
									"scope": 585,
									"src": "5192:286:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "5967:140:0",
										"statements": [
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5985:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "5977:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 209,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5977:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 213,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 211,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "5993:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5993:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5977:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "6024:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6031:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 218,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "6050:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 219,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "6057:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 217,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "6040:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6040:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 221,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "6068:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6040:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 214,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "6015:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6015:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "6015:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6096:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 208,
												"id": 226,
												"nodeType": "Return",
												"src": "6089:11:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "5484:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5882:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5908:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5900:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5925:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5917:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5899:37:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5961:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5961:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:6:0"
									},
									"scope": 585,
									"src": "5873:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "6693:328:0",
										"statements": [
											{
												"assignments": [
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6711:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6703:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 238,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6703:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 242,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 240,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "6719:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6719:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6703:28:0"
											},
											{
												"assignments": [
													244
												],
												"declarations": [
													{
														"constant": false,
														"id": 244,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6749:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6741:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 243,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"arguments": [
														{
															"id": 246,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "6778:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 247,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "6785:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 245,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "6768:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6768:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6741:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "6811:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 252,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "6831:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6811:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6848:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6803:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "6803:85:0"
											},
											{
												"id": 265,
												"nodeType": "UncheckedBlock",
												"src": "6898:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "6931:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 259,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "6938:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 260,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6947:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 261,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "6966:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6947:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 257,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "6922:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6922:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 264,
														"nodeType": "ExpressionStatement",
														"src": "6922:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7010:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 237,
												"id": 267,
												"nodeType": "Return",
												"src": "7003:11:0"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "6113:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6603:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6629:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6621:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6646:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6638:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6620:42:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6687:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6686:6:0"
									},
									"scope": 585,
									"src": "6594:427:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "7583:543:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 280,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "7601:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7617:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7609:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 281,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7609:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7609:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7601:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7621:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7593:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7593:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "7593:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 290,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "7679:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7693:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7685:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 291,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7685:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7685:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7679:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7697:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7671:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7671:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "7671:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 300,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "7767:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "7773:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7777:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 299,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "7746:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7746:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "7746:38:0"
											},
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7803:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "7795:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7795:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 310,
												"initialValue": {
													"baseExpression": {
														"id": 307,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "7817:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 309,
													"indexExpression": {
														"id": 308,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "7827:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7817:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7795:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 312,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "7850:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 313,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "7865:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7850:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7873:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7842:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7842:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "7842:72:0"
											},
											{
												"id": 326,
												"nodeType": "UncheckedBlock",
												"src": "7924:73:0",
												"statements": [
													{
														"expression": {
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 318,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "7948:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 320,
																"indexExpression": {
																	"id": 319,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7958:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7948:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 321,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "7966:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 322,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7980:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7966:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7948:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 325,
														"nodeType": "ExpressionStatement",
														"src": "7948:38:0"
													}
												]
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 327,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "8006:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 329,
														"indexExpression": {
															"id": 328,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8016:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8006:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 330,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "8023:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8006:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "8006:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 334,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8054:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 335,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8060:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8064:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "8045:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8045:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "EmitStatement",
												"src": "8040:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8102:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8108:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8112:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "8082:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8082:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "8082:37:0"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "7027:443:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7484:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7511:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7503:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7503:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7533:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7525:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7493:72:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7583:0:0"
									},
									"scope": 585,
									"src": "7475:651:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "8467:324:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 355,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "8485:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8504:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8496:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 356,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8496:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8496:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8485:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8508:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8477:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8477:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "8477:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8582:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8574:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 365,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8574:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8574:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8586:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8595:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "8553:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8553:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "8553:49:0"
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 373,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "8613:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 374,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8629:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8613:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "8613:22:0"
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 377,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "8645:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 379,
														"indexExpression": {
															"id": 378,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8655:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8645:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 380,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8667:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8645:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "8645:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8705:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8697:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 384,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8697:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8697:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 388,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8709:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 389,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8718:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 383,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "8688:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8688:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "EmitStatement",
												"src": "8683:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8764:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8756:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 393,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8756:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8756:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8768:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8777:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 392,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "8736:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8736:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "8736:48:0"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "8132:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8411:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8425:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8417:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8442:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8434:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8416:33:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8467:0:0"
									},
									"scope": 585,
									"src": "8402:389:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "9176:511:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 411,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "9194:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9213:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9205:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 412,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9205:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9205:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9194:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9217:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9186:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "9186:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 421,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9285:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9302:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9294:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 422,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9294:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9294:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 426,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9306:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 420,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "9264:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9264:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "9264:49:0"
											},
											{
												"assignments": [
													430
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9332:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "9324:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 429,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9324:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"baseExpression": {
														"id": 431,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "9349:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 433,
													"indexExpression": {
														"id": 432,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "9359:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9349:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9324:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 436,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "9385:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 437,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "9403:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9385:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9411:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9377:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9377:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "9377:71:0"
											},
											{
												"id": 450,
												"nodeType": "UncheckedBlock",
												"src": "9458:79:0",
												"statements": [
													{
														"expression": {
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 442,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "9482:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 444,
																"indexExpression": {
																	"id": 443,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "9492:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9482:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 445,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "9503:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 446,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "9520:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9503:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9482:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 449,
														"nodeType": "ExpressionStatement",
														"src": "9482:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 451,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "9546:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 452,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "9562:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9546:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "9546:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 456,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9593:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9610:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9602:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9602:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9602:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9614:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 455,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "9584:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9584:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "EmitStatement",
												"src": "9579:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9652:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9669:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9661:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 466,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9661:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9661:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9673:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "9632:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9632:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "9632:48:0"
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "8797:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9120:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9134:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "9126:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9126:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9151:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "9143:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9125:33:0"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9176:0:0"
									},
									"scope": 585,
									"src": "9111:576:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "10223:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 485,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "10241:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10258:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10250:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 486,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10250:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10250:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10241:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10262:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10233:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10233:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "10233:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 495,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "10319:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10338:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10330:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 496,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10330:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10330:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10319:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10342:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10311:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10311:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "10311:68:0"
											},
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 504,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "10390:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 507,
															"indexExpression": {
																"id": 505,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "10402:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10390:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 508,
														"indexExpression": {
															"id": 506,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "10409:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10390:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 509,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "10420:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10390:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "10390:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 513,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "10450:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 514,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "10457:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "10466:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 512,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "10441:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10441:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "EmitStatement",
												"src": "10436:37:0"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "9693:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10119:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10145:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10137:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10168:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10160:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10160:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10193:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10185:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10185:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10127:78:0"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10223:0:0"
									},
									"scope": 585,
									"src": "10110:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "10881:321:0",
										"statements": [
											{
												"assignments": [
													530
												],
												"declarations": [
													{
														"constant": false,
														"id": 530,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10899:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 561,
														"src": "10891:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 529,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10891:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 535,
												"initialValue": {
													"arguments": [
														{
															"id": 532,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "10928:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "10935:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 531,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "10918:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10918:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10891:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 536,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "10957:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10982:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 538,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10982:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 537,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10977:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10977:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10977:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10957:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "IfStatement",
												"src": "10953:243:0",
												"trueBody": {
													"id": 559,
													"nodeType": "Block",
													"src": "10996:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 544,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 530,
																			"src": "11018:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 545,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 526,
																			"src": "11038:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11018:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11046:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 543,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11010:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11010:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 549,
															"nodeType": "ExpressionStatement",
															"src": "11010:68:0"
														},
														{
															"id": 558,
															"nodeType": "UncheckedBlock",
															"src": "11092:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 551,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 522,
																				"src": "11129:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 552,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "11136:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 555,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 553,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 530,
																					"src": "11145:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 554,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 526,
																					"src": "11164:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11145:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 550,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 519,
																			"src": "11120:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11120:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 557,
																	"nodeType": "ExpressionStatement",
																	"src": "11120:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "10486:270:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10770:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10803:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "10795:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10826:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "10818:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10818:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10851:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "10843:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10843:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10785:78:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10881:0:0"
									},
									"scope": 585,
									"src": "10761:441:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "11905:2:0",
										"statements": []
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "11208:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "11795:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11833:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "11825:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11825:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11855:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "11847:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11847:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11875:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "11867:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11815:72:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11905:0:0"
									},
									"scope": 585,
									"src": "11786:121:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "12613:2:0",
										"statements": []
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "11913:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12504:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12541:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12533:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12533:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12563:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12555:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12555:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12583:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12575:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12575:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12523:72:0"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12613:0:0"
									},
									"scope": 585,
									"src": "12495:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 586,
							"src": "1403:11214:0",
							"usedErrors": []
						}
					],
					"src": "105:12513:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							663
						]
					},
					"id": 664,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 587,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 588,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 663,
							"linearizedBaseContracts": [
								663
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 597,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 606,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 663,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 663,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 627,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 663,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 663,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 650,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 647,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 663,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 659,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 663,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 664,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							688
						]
					},
					"id": 689,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 665,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 666,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 689,
							"sourceUnit": 664,
							"src": "135:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 668,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "305:6:2"
									},
									"id": 669,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:2"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 667,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 688,
							"linearizedBaseContracts": [
								688,
								663
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 675,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:2"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "416:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 672,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:2"
									},
									"scope": 688,
									"src": "377:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 681,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:2"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "539:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 678,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:2"
									},
									"scope": 688,
									"src": "498:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 687,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:2"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "673:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 684,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:2"
									},
									"scope": 688,
									"src": "630:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 689,
							"src": "277:405:2",
							"usedErrors": []
						}
					],
					"src": "110:573:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							710
						]
					},
					"id": 711,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 690,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 691,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 710,
							"linearizedBaseContracts": [
								710
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 696,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 695,
												"id": 698,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 710,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 705,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 704,
												"id": 707,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 702,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 710,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 711,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1022
						]
					},
					"id": 1023,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 712,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 713,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1022,
							"linearizedBaseContracts": [
								1022
							],
							"name": "SafeMath",
							"nameLocation": "490:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "717:140:4",
										"statements": [
											{
												"id": 743,
												"nodeType": "UncheckedBlock",
												"src": "727:124:4",
												"statements": [
													{
														"assignments": [
															726
														],
														"declarations": [
															{
																"constant": false,
																"id": 726,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 743,
																"src": "751:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 725,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 730,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 727,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "763:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 728,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 718,
																"src": "767:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 731,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "786:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 732,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "790:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 738,
														"nodeType": "IfStatement",
														"src": "782:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 736,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 724,
															"id": 737,
															"nodeType": "Return",
															"src": "793:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 740,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "838:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 741,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 724,
														"id": 742,
														"nodeType": "Return",
														"src": "824:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "657:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "668:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:4"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "702:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 720,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "708:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:4"
									},
									"scope": 1022,
									"src": "641:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 772,
										"nodeType": "Block",
										"src": "1078:113:4",
										"statements": [
											{
												"id": 771,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 757,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "1116:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 758,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "1120:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 764,
														"nodeType": "IfStatement",
														"src": "1112:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 762,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 756,
															"id": 763,
															"nodeType": "Return",
															"src": "1123:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 766,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 748,
																		"src": "1168:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 767,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 750,
																		"src": "1172:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 769,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 756,
														"id": 770,
														"nodeType": "Return",
														"src": "1154:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:4",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "1018:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "1029:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:4"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "1063:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 752,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "1069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:4"
									},
									"scope": 1022,
									"src": "1002:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "1415:417:4",
										"statements": [
											{
												"id": 813,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 785,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 776,
																"src": "1683:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 792,
														"nodeType": "IfStatement",
														"src": "1679:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 790,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 784,
															"id": 791,
															"nodeType": "Return",
															"src": "1691:16:4"
														}
													},
													{
														"assignments": [
															794
														],
														"declarations": [
															{
																"constant": false,
																"id": 794,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 813,
																"src": "1721:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 793,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 798,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 795,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 776,
																"src": "1733:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 796,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 778,
																"src": "1737:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 799,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "1756:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 800,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "1760:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 802,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 778,
																"src": "1765:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 808,
														"nodeType": "IfStatement",
														"src": "1752:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 806,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 784,
															"id": 807,
															"nodeType": "Return",
															"src": "1768:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 810,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "1813:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 811,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 784,
														"id": 812,
														"nodeType": "Return",
														"src": "1799:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1355:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1366:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:4"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1400:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 780,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1406:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:4"
									},
									"scope": 1022,
									"src": "1339:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "2057:114:4",
										"statements": [
											{
												"id": 841,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 827,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 820,
																"src": "2095:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 834,
														"nodeType": "IfStatement",
														"src": "2091:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 832,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 826,
															"id": 833,
															"nodeType": "Return",
															"src": "2103:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 836,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 818,
																		"src": "2148:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 837,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "2152:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 839,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 826,
														"id": 840,
														"nodeType": "Return",
														"src": "2134:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "1997:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "2008:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:4"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "2042:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 822,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "2048:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:4"
									},
									"scope": 1022,
									"src": "1981:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "2406:114:4",
										"statements": [
											{
												"id": 869,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 855,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "2444:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 862,
														"nodeType": "IfStatement",
														"src": "2440:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 860,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 854,
															"id": 861,
															"nodeType": "Return",
															"src": "2452:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 864,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "2497:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 865,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 848,
																		"src": "2501:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 867,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 854,
														"id": 868,
														"nodeType": "Return",
														"src": "2483:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "2346:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "2357:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:4"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "2391:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 850,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "2397:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:4"
									},
									"scope": 1022,
									"src": "2330:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "2822:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 881,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "2839:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 882,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "2843:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 880,
												"id": 884,
												"nodeType": "Return",
												"src": "2832:12:4"
											}
										]
									},
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "2768:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "2779:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:4"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "2813:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:4"
									},
									"scope": 1022,
									"src": "2755:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "3189:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 896,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "3206:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 897,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "3210:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 895,
												"id": 899,
												"nodeType": "Return",
												"src": "3199:12:4"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "3135:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "3146:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "3180:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:4"
									},
									"scope": 1022,
									"src": "3122:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "3532:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 911,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "3549:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 912,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "3553:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 910,
												"id": 914,
												"nodeType": "Return",
												"src": "3542:12:4"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "3478:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "3489:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:4"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "3523:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:4"
									},
									"scope": 1022,
									"src": "3465:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 930,
										"nodeType": "Block",
										"src": "3917:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 926,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "3934:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 927,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "3938:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 925,
												"id": 929,
												"nodeType": "Return",
												"src": "3927:12:4"
											}
										]
									},
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "3863:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "3874:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:4"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "3908:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:4"
									},
									"scope": 1022,
									"src": "3850:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "4466:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 941,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "4483:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 942,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "4487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 940,
												"id": 944,
												"nodeType": "Return",
												"src": "4476:12:4"
											}
										]
									},
									"documentation": {
										"id": 932,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "4412:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "4423:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "4457:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:4"
									},
									"scope": 1022,
									"src": "4399:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "5084:106:4",
										"statements": [
											{
												"id": 969,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 959,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "5126:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 960,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 949,
																		"src": "5131:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 962,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "5134:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 958,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 964,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 965,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "5168:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 966,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "5172:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 957,
														"id": 968,
														"nodeType": "Return",
														"src": "5161:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "4981:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "5000:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "5019:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 952,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:4"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "5075:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:4"
									},
									"scope": 1022,
									"src": "4959:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "5799:105:4",
										"statements": [
											{
												"id": 994,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 984,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "5841:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 987,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "5848:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 983,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 989,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 990,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "5882:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 991,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 976,
																"src": "5886:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 982,
														"id": 993,
														"nodeType": "Return",
														"src": "5875:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "5696:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "5715:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "5734:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 977,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:4"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "5790:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:4"
									},
									"scope": 1022,
									"src": "5674:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "6675:105:4",
										"statements": [
											{
												"id": 1019,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1009,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1001,
																		"src": "6717:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1012,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1003,
																	"src": "6724:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1008,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1014,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1015,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 999,
																"src": "6758:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1016,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1001,
																"src": "6762:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1007,
														"id": 1018,
														"nodeType": "Return",
														"src": "6751:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 997,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "6572:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "6591:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "6610:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1002,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:4"
									},
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "6666:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:4"
									},
									"scope": 1022,
									"src": "6550:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1023,
							"src": "482:6300:4",
							"usedErrors": []
						}
					],
					"src": "107:6676:4"
				},
				"id": 4
			},
			"Contracts/AccessBSC.sol": {
				"ast": {
					"absolutePath": "Contracts/AccessBSC.sol",
					"exportedSymbols": {
						"Context": [
							710
						],
						"ERC20": [
							585
						],
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							688
						],
						"Metacces": [
							1544
						],
						"SafeMath": [
							1022
						]
					},
					"id": 1545,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1024,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1545,
							"sourceUnit": 586,
							"src": "34:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1025,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1545,
							"sourceUnit": 1023,
							"src": "90:57:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"id": 1026,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "148:25:5"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1027,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 585,
										"src": "222:5:5"
									},
									"id": 1028,
									"nodeType": "InheritanceSpecifier",
									"src": "222:5:5"
								}
							],
							"canonicalName": "Metacces",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1544,
							"linearizedBaseContracts": [
								1544,
								585,
								688,
								663,
								710
							],
							"name": "Metacces",
							"nameLocation": "210:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1031,
									"libraryName": {
										"id": 1029,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1022,
										"src": "240:8:5"
									},
									"nodeType": "UsingForDirective",
									"src": "234:27:5",
									"typeName": {
										"id": 1030,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "253:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1033,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "282:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1544,
									"src": "266:21:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1032,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "266:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "5fa2ef10",
									"id": 1035,
									"mutability": "mutable",
									"name": "Bridge",
									"nameLocation": "309:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1544,
									"src": "294:21:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1034,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "294:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e4993d8c",
									"id": 1038,
									"mutability": "constant",
									"name": "theCompany",
									"nameLocation": "345:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 1544,
									"src": "321:79:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1036,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "321:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307863366535333437443141354645363835313630343239373035453965323662443342426138664561",
										"id": 1037,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "358:42:5",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xc6e5347D1A5FE685160429705E9e26bD3BBa8fEa"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "27c8f835",
									"id": 1041,
									"mutability": "mutable",
									"name": "deadAddress",
									"nameLocation": "421:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1544,
									"src": "406:71:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1039,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "406:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
										"id": 1040,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "435:42:5",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x000000000000000000000000000000000000dEaD"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1043,
									"mutability": "mutable",
									"name": "sSBlock",
									"nameLocation": "501:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1544,
									"src": "484:24:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1042,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "484:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1045,
									"mutability": "mutable",
									"name": "sEBlock",
									"nameLocation": "526:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1544,
									"src": "509:24:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1044,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "509:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1047,
									"mutability": "mutable",
									"name": "sTot",
									"nameLocation": "551:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 1544,
									"src": "534:21:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1046,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "534:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1049,
									"mutability": "mutable",
									"name": "sPrice",
									"nameLocation": "578:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1544,
									"src": "561:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1048,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "561:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "deea800d",
									"id": 1055,
									"mutability": "mutable",
									"name": "Path",
									"nameLocation": "605:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 1544,
									"src": "590:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1050,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "590:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1054,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 1051,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "612:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"arguments": [],
											"expression": {
												"argumentTypes": [],
												"id": 1052,
												"name": "decimals",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 74,
												"src": "617:8:5",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
													"typeString": "function () view returns (uint8)"
												}
											},
											"id": 1053,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "functionCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "617:10:5",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"src": "612:15:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6ac5db19",
									"id": 1060,
									"mutability": "mutable",
									"name": "max",
									"nameLocation": "648:3:5",
									"nodeType": "VariableDeclaration",
									"scope": 1544,
									"src": "633:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1056,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "633:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1059,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3230",
											"id": 1057,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "654:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_20_by_1",
												"typeString": "int_const 20"
											},
											"value": "20"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"id": 1058,
											"name": "Path",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1055,
											"src": "659:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "654:9:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f8897945",
									"id": 1066,
									"mutability": "mutable",
									"name": "min",
									"nameLocation": "684:3:5",
									"nodeType": "VariableDeclaration",
									"scope": 1544,
									"src": "669:33:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1061,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "669:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "313030",
												"id": 1064,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "698:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100_by_1",
													"typeString": "int_const 100"
												},
												"value": "100"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_100_by_1",
													"typeString": "int_const 100"
												}
											],
											"expression": {
												"id": 1062,
												"name": "max",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1060,
												"src": "690:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 1063,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "div",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 931,
											"src": "690:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
												"typeString": "function (uint256,uint256) pure returns (uint256)"
											}
										},
										"id": 1065,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "690:12:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3c3b7995",
									"id": 1069,
									"mutability": "mutable",
									"name": "privateLimit",
									"nameLocation": "723:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1544,
									"src": "708:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1067,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "708:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030",
										"id": 1068,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "738:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000_by_1",
											"typeString": "int_const 1000000"
										},
										"value": "1000000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d5abeb01",
									"id": 1074,
									"mutability": "mutable",
									"name": "maxSupply",
									"nameLocation": "766:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1544,
									"src": "751:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1070,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "751:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1073,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "353030303030303030",
											"id": 1071,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "778:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_500000000_by_1",
												"typeString": "int_const 500000000"
											},
											"value": "500000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"id": 1072,
											"name": "Path",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1055,
											"src": "790:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "778:16:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "4508977418b95bac209196e03356692c2d8f47957dec1c15af1a44cc40d39a04",
									"id": 1082,
									"name": "WithdrawalBNB",
									"nameLocation": "807:13:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "829:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "821:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"indexed": false,
												"mutability": "mutable",
												"name": "decimal",
												"nameLocation": "846:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "838:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "863:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "855:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "855:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:46:5"
									},
									"src": "801:66:5"
								},
								{
									"anonymous": false,
									"eventSelector": "0206ca7f97d46974ed97b981f879b17e9e1fe17ead63770c806926d28aa5cbd5",
									"id": 1092,
									"name": "WithdrawalToken",
									"nameLocation": "879:15:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenAddr",
												"nameLocation": "903:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "895:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "923:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "915:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"indexed": false,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "939:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "931:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "957:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "949:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "949:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "894:66:5"
									},
									"src": "873:88:5"
								},
								{
									"anonymous": false,
									"eventSelector": "e605ac02ea219003ec58fc9cf4d4b3c5f2d62ec39807b1c63886ddd47a6fcd6e",
									"id": 1096,
									"name": "SetBridge",
									"nameLocation": "972:9:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBridge",
												"nameLocation": "990:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "982:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:19:5"
									},
									"src": "966:35:5"
								},
								{
									"anonymous": false,
									"eventSelector": "b887e151dbfcc06b4ce4f67f9bbedaeb16ab224e34c6668858d0310c6d18ffc3",
									"id": 1102,
									"name": "PrivateSale",
									"nameLocation": "1012:11:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"indexed": false,
												"mutability": "mutable",
												"name": "Amount",
												"nameLocation": "1032:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "1024:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1024:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"indexed": false,
												"mutability": "mutable",
												"name": "Price",
												"nameLocation": "1048:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "1040:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1023:31:5"
									},
									"src": "1006:49:5"
								},
								{
									"anonymous": false,
									"eventSelector": "1dc13bd033e49239661ba80e30ae191b1c31c79277b531e88246c7517971b85d",
									"id": 1106,
									"name": "saleStarted",
									"nameLocation": "1066:11:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockNumber",
												"nameLocation": "1086:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "1078:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:21:5"
									},
									"src": "1060:39:5"
								},
								{
									"anonymous": false,
									"eventSelector": "b144be0f16f8d30f2e18ef8f7938d5e90207932d96650e592ff47725716818fb",
									"id": 1110,
									"name": "saleEnded",
									"nameLocation": "1110:9:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"indexed": false,
												"mutability": "mutable",
												"name": "Time",
												"nameLocation": "1128:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "1120:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1119:14:5"
									},
									"src": "1104:30:5"
								},
								{
									"anonymous": false,
									"eventSelector": "3b06ffd21bedfb2c375d7b1bcf74ca4fe1afe205699e39610b3aced7adf6b9e9",
									"id": 1116,
									"name": "minMax",
									"nameLocation": "1145:6:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"indexed": false,
												"mutability": "mutable",
												"name": "Min",
												"nameLocation": "1160:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "1152:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1152:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"indexed": false,
												"mutability": "mutable",
												"name": "Max",
												"nameLocation": "1173:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "1165:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1165:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1151:26:5"
									},
									"src": "1139:39:5"
								},
								{
									"anonymous": false,
									"eventSelector": "6d487f3988610155b3a9ef590f8ac170134d24e6505b9ddd3160e34abaa0edaf",
									"id": 1120,
									"name": "PrivateLimit",
									"nameLocation": "1189:12:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"indexed": false,
												"mutability": "mutable",
												"name": "newLimit",
												"nameLocation": "1210:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "1202:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1201:18:5"
									},
									"src": "1183:37:5"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1126,
									"name": "OwnershipTransferred",
									"nameLocation": "1231:20:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldOwner",
												"nameLocation": "1268:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "1252:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1294:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "1278:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1278:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1251:52:5"
									},
									"src": "1225:79:5"
								},
								{
									"body": {
										"id": 1137,
										"nodeType": "Block",
										"src": "1330:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1129,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1348:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1348:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1131,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1033,
																"src": "1362:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1348:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616c6c6572206e6f74206f776e6572",
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1369:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_38786623120634324bd2170f44d0610e1fa516cac9a7f6e95c8969e3f13d035a",
																"typeString": "literal_string \"caller not owner\""
															},
															"value": "caller not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_38786623120634324bd2170f44d0610e1fa516cac9a7f6e95c8969e3f13d035a",
																"typeString": "literal_string \"caller not owner\""
															}
														],
														"id": 1128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1340:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1340:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "1340:48:5"
											},
											{
												"id": 1136,
												"nodeType": "PlaceholderStatement",
												"src": "1398:1:5"
											}
										]
									},
									"id": 1138,
									"name": "onlyOwner",
									"nameLocation": "1319:9:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1328:2:5"
									},
									"src": "1310:96:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "1458:225:5",
										"statements": [
											{
												"expression": {
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1145,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "1464:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1146,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1472:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1472:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1464:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "1464:18:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1153,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1503:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Metacces_$1544",
																		"typeString": "contract Metacces"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Metacces_$1544",
																		"typeString": "contract Metacces"
																	}
																],
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1495:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1151,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1495:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1495:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "313030",
																	"id": 1160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1531:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "35",
																			"id": 1157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1524:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_5_by_1",
																				"typeString": "int_const 5"
																			},
																			"value": "5"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_5_by_1",
																				"typeString": "int_const 5"
																			}
																		],
																		"expression": {
																			"id": 1155,
																			"name": "maxSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1074,
																			"src": "1510:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 916,
																		"src": "1510:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1510:16:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 931,
																"src": "1510:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1510:25:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1150,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "1488:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1488:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1163,
												"nodeType": "ExpressionStatement",
												"src": "1488:48:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1165,
															"name": "theCompany",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "1555:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "313030",
																	"id": 1171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1589:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "3935",
																			"id": 1168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1581:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_95_by_1",
																				"typeString": "int_const 95"
																			},
																			"value": "95"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_95_by_1",
																				"typeString": "int_const 95"
																			}
																		],
																		"expression": {
																			"id": 1166,
																			"name": "maxSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1074,
																			"src": "1567:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 916,
																		"src": "1567:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1567:17:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 931,
																"src": "1567:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1567:26:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1164,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "1548:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "1548:46:5"
											}
										]
									},
									"id": 1176,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d65746163636573",
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1429:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_522baacaf20e611a8c43ec7f8abbb043ce53184965b4949e422777859212f9fa",
														"typeString": "literal_string \"Metacces\""
													},
													"value": "Metacces"
												},
												{
													"hexValue": "4163636573",
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1441:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9485928de741c2f974e23b8c7156bae5a6efe9e11a9dad52349aedb87132104f",
														"typeString": "literal_string \"Acces\""
													},
													"value": "Acces"
												}
											],
											"id": 1143,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1140,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 585,
												"src": "1423:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1423:26:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1420:2:5"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1458:0:5"
									},
									"scope": 1544,
									"src": "1408:275:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1202,
										"nodeType": "Block",
										"src": "1752:140:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1184,
																"name": "_newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1178,
																"src": "1769:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1790:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1782:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1185,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1782:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1782:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1769:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f2061646472657373",
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1793:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833",
																"typeString": "literal_string \"Zero address\""
															},
															"value": "Zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833",
																"typeString": "literal_string \"Zero address\""
															}
														],
														"id": 1183,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1761:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1761:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "1761:47:5"
											},
											{
												"expression": {
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1193,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "1817:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1194,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "1825:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1817:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1196,
												"nodeType": "ExpressionStatement",
												"src": "1817:17:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1198,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "1869:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1199,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "1876:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1197,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "1848:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1848:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1201,
												"nodeType": "EmitStatement",
												"src": "1843:43:5"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 1203,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1181,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1180,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1138,
												"src": "1743:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1743:9:5"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1697:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "_newOwner",
												"nameLocation": "1723:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "1715:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:19:5"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1752:0:5"
									},
									"scope": 1544,
									"src": "1688:204:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1288,
										"nodeType": "Block",
										"src": "1966:535:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1214,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1998:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1215,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "1998:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1990:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1212,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1990:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1990:19:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1211,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "1980:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1980:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1218,
																	"name": "privateLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "2014:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1219,
																	"name": "Path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "2029:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2014:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1980:53:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75207265616368656420796f757220707269766174652073616c65206c696d6974",
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2036:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1c2d3c13e86f28ed18ad4b34d675b8ac811f8a03f815d44ab828417c04bb25b6",
																"typeString": "literal_string \"You reached your private sale limit\""
															},
															"value": "You reached your private sale limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1c2d3c13e86f28ed18ad4b34d675b8ac811f8a03f815d44ab828417c04bb25b6",
																"typeString": "literal_string \"You reached your private sale limit\""
															}
														],
														"id": 1210,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1972:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1972:102:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1224,
												"nodeType": "ExpressionStatement",
												"src": "1972:102:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1226,
																	"name": "sSBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1043,
																	"src": "2090:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"id": 1227,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2101:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "2101:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2090:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1230,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2117:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "2117:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1232,
																	"name": "sEBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "2133:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2117:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2090:50:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "507269766174652053616c652068617320656e646564206f7220646964206e6f7420737461727420796574",
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2142:45:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3b56df502a2942e85cf034699d7908f5e5acd2577a219c55769be254bc3ea7d6",
																"typeString": "literal_string \"Private Sale has ended or did not start yet\""
															},
															"value": "Private Sale has ended or did not start yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3b56df502a2942e85cf034699d7908f5e5acd2577a219c55769be254bc3ea7d6",
																"typeString": "literal_string \"Private Sale has ended or did not start yet\""
															}
														],
														"id": 1225,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2082:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2082:106:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "2082:106:5"
											},
											{
												"assignments": [
													1239
												],
												"declarations": [
													{
														"constant": false,
														"id": 1239,
														"mutability": "mutable",
														"name": "_eth",
														"nameLocation": "2203:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1288,
														"src": "2195:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1238,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2195:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1242,
												"initialValue": {
													"expression": {
														"id": 1240,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2210:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "2210:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2195:24:5"
											},
											{
												"assignments": [
													1244
												],
												"declarations": [
													{
														"constant": false,
														"id": 1244,
														"mutability": "mutable",
														"name": "_tkns",
														"nameLocation": "2233:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1288,
														"src": "2225:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1243,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2225:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1245,
												"nodeType": "VariableDeclarationStatement",
												"src": "2225:13:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1247,
																	"name": "_eth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1239,
																	"src": "2259:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1248,
																	"name": "min",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1066,
																	"src": "2267:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2259:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1250,
																	"name": "_eth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1239,
																	"src": "2274:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1251,
																	"name": "max",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1060,
																	"src": "2282:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2274:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2259:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c657373207468616e204d696e696d756d206f72204d6f7265207468616e204d6178696d756d",
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2288:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b8c03831c8bbcc5ea6afa167bff5a9451576692b7afd8364ac3181fc924bce33",
																"typeString": "literal_string \"Less than Minimum or More than Maximum\""
															},
															"value": "Less than Minimum or More than Maximum"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b8c03831c8bbcc5ea6afa167bff5a9451576692b7afd8364ac3181fc924bce33",
																"typeString": "literal_string \"Less than Minimum or More than Maximum\""
															}
														],
														"id": 1246,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2249:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:80:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "2249:80:5"
											},
											{
												"expression": {
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1257,
														"name": "_tkns",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "2335:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2366:7:5",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															],
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"id": 1260,
																				"name": "_eth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1239,
																				"src": "2355:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1258,
																				"name": "sPrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "2344:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 916,
																			"src": "2344:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2344:16:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1262,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2343:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 931,
															"src": "2343:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2343:31:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2335:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1267,
												"nodeType": "ExpressionStatement",
												"src": "2335:39:5"
											},
											{
												"expression": {
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2380:7:5",
													"subExpression": {
														"id": 1268,
														"name": "sTot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "2380:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "2380:7:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1274,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2416:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Metacces_$1544",
																		"typeString": "contract Metacces"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Metacces_$1544",
																		"typeString": "contract Metacces"
																	}
																],
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2408:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1272,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2408:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2408:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1276,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2423:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2423:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1278,
															"name": "_tkns",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "2435:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1271,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "2398:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1280,
												"nodeType": "ExpressionStatement",
												"src": "2398:43:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1282,
															"name": "_tkns",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "2465:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1283,
															"name": "sPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "2472:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1281,
														"name": "PrivateSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "2453:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2453:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1285,
												"nodeType": "EmitStatement",
												"src": "2448:31:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2492:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1209,
												"id": 1287,
												"nodeType": "Return",
												"src": "2485:11:5"
											}
										]
									},
									"functionSelector": "e7d53fcb",
									"id": 1289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "privateSale",
									"nameLocation": "1906:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "1918:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1918:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1917:9:5"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1958:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "1953:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1207,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1953:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1952:14:5"
									},
									"scope": 1544,
									"src": "1897:604:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1306,
										"nodeType": "Block",
										"src": "2620:50:5",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 1300,
															"name": "sSBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "2633:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1301,
															"name": "sEBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "2642:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1302,
															"name": "sTot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "2651:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1303,
															"name": "sPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "2658:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1304,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2632:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1299,
												"id": 1305,
												"nodeType": "Return",
												"src": "2626:39:5"
											}
										]
									},
									"functionSelector": "4d1d03d1",
									"id": 1307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "viewSale",
									"nameLocation": "2514:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2522:2:5"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "StartBlock",
												"nameLocation": "2553:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "2545:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2545:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "EndBlock",
												"nameLocation": "2573:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "2565:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2565:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "SaleCount",
												"nameLocation": "2591:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "2583:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2583:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "SalePrice",
												"nameLocation": "2610:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "2602:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2602:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:76:5"
									},
									"scope": 1544,
									"src": "2505:165:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "2748:134:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1317,
																	"name": "_sEBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1309,
																	"src": "2762:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2774:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2762:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1320,
																	"name": "_sPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1311,
																	"src": "2779:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2789:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2779:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2762:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f21",
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2791:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_46305072fb50c0438bd7a65f37da664a0a7c165dbfa7fd52c439a808fba616ad",
																"typeString": "literal_string \"Zero!\""
															},
															"value": "Zero!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_46305072fb50c0438bd7a65f37da664a0a7c165dbfa7fd52c439a808fba616ad",
																"typeString": "literal_string \"Zero!\""
															}
														],
														"id": 1316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2754:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2754:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "2754:45:5"
											},
											{
												"expression": {
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1327,
														"name": "sEBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "2805:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1328,
														"name": "_sEBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "2815:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2805:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "2805:18:5"
											},
											{
												"expression": {
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1331,
														"name": "sPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "2830:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1332,
														"name": "_sPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1311,
														"src": "2838:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2830:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1334,
												"nodeType": "ExpressionStatement",
												"src": "2830:15:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1336,
															"name": "_sEBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "2868:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1335,
														"name": "saleStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "2856:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2856:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1338,
												"nodeType": "EmitStatement",
												"src": "2851:26:5"
											}
										]
									},
									"functionSelector": "f4f3122e",
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1314,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1313,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1138,
												"src": "2739:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2739:9:5"
										}
									],
									"name": "startSale",
									"nameLocation": "2685:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "_sEBlock",
												"nameLocation": "2703:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "2695:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "_sPrice",
												"nameLocation": "2721:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "2713:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:35:5"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2748:0:5"
									},
									"scope": 1544,
									"src": "2676:206:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "2926:70:5",
										"statements": [
											{
												"expression": {
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1345,
														"name": "sEBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1045,
														"src": "2932:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1346,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2942:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "2942:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2932:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1349,
												"nodeType": "ExpressionStatement",
												"src": "2932:22:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1351,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2975:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2975:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1350,
														"name": "saleEnded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "2965:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2965:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1354,
												"nodeType": "EmitStatement",
												"src": "2960:31:5"
											}
										]
									},
									"functionSelector": "380d831b",
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1343,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1342,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1138,
												"src": "2917:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2917:9:5"
										}
									],
									"name": "endSale",
									"nameLocation": "2897:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2905:2:5"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2926:0:5"
									},
									"scope": 1544,
									"src": "2888:108:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1391,
										"nodeType": "Block",
										"src": "3090:143:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1366,
																	"name": "minAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1358,
																	"src": "3106:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3119:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3106:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1369,
																	"name": "maxAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1360,
																	"src": "3124:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3136:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3124:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3106:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f21",
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3138:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_46305072fb50c0438bd7a65f37da664a0a7c165dbfa7fd52c439a808fba616ad",
																"typeString": "literal_string \"Zero!\""
															},
															"value": "Zero!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_46305072fb50c0438bd7a65f37da664a0a7c165dbfa7fd52c439a808fba616ad",
																"typeString": "literal_string \"Zero!\""
															}
														],
														"id": 1365,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3098:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3098:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1375,
												"nodeType": "ExpressionStatement",
												"src": "3098:48:5"
											},
											{
												"expression": {
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1376,
														"name": "min",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "3154:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1377,
														"name": "minAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "3160:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3154:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1379,
												"nodeType": "ExpressionStatement",
												"src": "3154:15:5"
											},
											{
												"expression": {
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1380,
														"name": "max",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "3177:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1381,
															"name": "maxAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "3183:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1382,
															"name": "Path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "3195:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3183:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3177:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1385,
												"nodeType": "ExpressionStatement",
												"src": "3177:22:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1387,
															"name": "min",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "3219:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1388,
															"name": "max",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "3224:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1386,
														"name": "minMax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "3212:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3212:16:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1390,
												"nodeType": "EmitStatement",
												"src": "3207:21:5"
											}
										]
									},
									"functionSelector": "e181203a",
									"id": 1392,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1363,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1362,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1138,
												"src": "3080:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3080:9:5"
										}
									],
									"name": "changeMinMaxPrivateSale",
									"nameLocation": "3009:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "minAmount",
												"nameLocation": "3041:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "3033:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "maxAmount",
												"nameLocation": "3060:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "3052:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3032:38:5"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3090:0:5"
									},
									"scope": 1544,
									"src": "3000:233:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1414,
										"nodeType": "Block",
										"src": "3297:102:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1400,
																"name": "_limit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1394,
																"src": "3313:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3322:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3313:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f21",
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3324:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_46305072fb50c0438bd7a65f37da664a0a7c165dbfa7fd52c439a808fba616ad",
																"typeString": "literal_string \"Zero!\""
															},
															"value": "Zero!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_46305072fb50c0438bd7a65f37da664a0a7c165dbfa7fd52c439a808fba616ad",
																"typeString": "literal_string \"Zero!\""
															}
														],
														"id": 1399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3305:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3305:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1405,
												"nodeType": "ExpressionStatement",
												"src": "3305:27:5"
											},
											{
												"expression": {
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1406,
														"name": "privateLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "3340:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1407,
														"name": "_limit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1394,
														"src": "3355:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3340:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "3340:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1411,
															"name": "_limit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "3387:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1410,
														"name": "PrivateLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "3374:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3374:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1413,
												"nodeType": "EmitStatement",
												"src": "3369:25:5"
											}
										]
									},
									"functionSelector": "534b1442",
									"id": 1415,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1397,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1396,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1138,
												"src": "3287:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3287:9:5"
										}
									],
									"name": "setPrivateLimit",
									"nameLocation": "3246:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "_limit",
												"nameLocation": "3270:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "3262:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3262:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:16:5"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3297:0:5"
									},
									"scope": 1544,
									"src": "3237:162:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "3653:252:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1429,
																"name": "_tokenAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1417,
																"src": "3671:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3693:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3685:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1430,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3685:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3685:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3671:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "61646472657373207a65726f21",
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3696:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15899f662d7a614bf3c57644e7510671708691155c8806292fb4f45c1016663c",
																"typeString": "literal_string \"address zero!\""
															},
															"value": "address zero!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15899f662d7a614bf3c57644e7510671708691155c8806292fb4f45c1016663c",
																"typeString": "literal_string \"address zero!\""
															}
														],
														"id": 1428,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3663:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3663:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "3663:49:5"
											},
											{
												"assignments": [
													1439
												],
												"declarations": [
													{
														"constant": false,
														"id": 1439,
														"mutability": "mutable",
														"name": "dcml",
														"nameLocation": "3730:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1467,
														"src": "3722:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1438,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3722:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1443,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3737:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"id": 1441,
														"name": "decimal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1421,
														"src": "3743:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3737:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3722:28:5"
											},
											{
												"assignments": [
													1446
												],
												"declarations": [
													{
														"constant": false,
														"id": 1446,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "3766:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1467,
														"src": "3760:11:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$585",
															"typeString": "contract ERC20"
														},
														"typeName": {
															"id": 1445,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1444,
																"name": "ERC20",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 585,
																"src": "3760:5:5"
															},
															"referencedDeclaration": 585,
															"src": "3760:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$585",
																"typeString": "contract ERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1450,
												"initialValue": {
													"arguments": [
														{
															"id": 1448,
															"name": "_tokenAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "3780:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1447,
														"name": "ERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "3774:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC20_$585_$",
															"typeString": "type(contract ERC20)"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3774:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$585",
														"typeString": "contract ERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3760:31:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1452,
															"name": "_tokenAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "3822:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1453,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "3834:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1454,
															"name": "decimal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "3843:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1455,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "3852:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1451,
														"name": "WithdrawalToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "3806:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,address)"
														}
													},
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3806:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1457,
												"nodeType": "EmitStatement",
												"src": "3801:54:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1461,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "3880:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1462,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "3884:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1463,
																"name": "dcml",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1439,
																"src": "3892:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3884:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1458,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "3865:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$585",
																"typeString": "contract ERC20"
															}
														},
														"id": 1460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 123,
														"src": "3865:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3865:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1466,
												"nodeType": "ExpressionStatement",
												"src": "3865:32:5"
											}
										]
									},
									"functionSelector": "b2938bee",
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1426,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1425,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1138,
												"src": "3641:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3641:11:5"
										}
									],
									"name": "withdrawalToken",
									"nameLocation": "3550:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "_tokenAddr",
												"nameLocation": "3574:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "3566:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3594:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "3586:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3586:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "decimal",
												"nameLocation": "3611:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "3603:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3603:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3628:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "3620:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3620:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3565:66:5"
									},
									"returnParameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3653:0:5"
									},
									"scope": 1544,
									"src": "3541:364:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1522,
										"nodeType": "Block",
										"src": "4139:256:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1482,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4165:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Metacces_$1544",
																				"typeString": "contract Metacces"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Metacces_$1544",
																				"typeString": "contract Metacces"
																			}
																		],
																		"id": 1481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4157:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1480,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4157:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4157:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4157:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1485,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "4182:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4157:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20424e4221",
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4190:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_120d023a68dcb8cab4b4b31c143fc76ee23dd5a991f26e9b4032c89404dbdded",
																"typeString": "literal_string \"No BNB!\""
															},
															"value": "No BNB!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_120d023a68dcb8cab4b4b31c143fc76ee23dd5a991f26e9b4032c89404dbdded",
																"typeString": "literal_string \"No BNB!\""
															}
														],
														"id": 1479,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4149:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4149:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1489,
												"nodeType": "ExpressionStatement",
												"src": "4149:51:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1491,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "4218:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4232:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4224:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1492,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4224:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4224:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4218:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f2061646472657373",
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4235:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833",
																"typeString": "literal_string \"Zero address\""
															},
															"value": "Zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_535d7636857fb1ab3a4f159f2a66b9583ce224510b4368fa2453e15bee0bc833",
																"typeString": "literal_string \"Zero address\""
															}
														],
														"id": 1490,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4210:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4210:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1499,
												"nodeType": "ExpressionStatement",
												"src": "4210:40:5"
											},
											{
												"assignments": [
													1501
												],
												"declarations": [
													{
														"constant": false,
														"id": 1501,
														"mutability": "mutable",
														"name": "dcml",
														"nameLocation": "4268:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1522,
														"src": "4260:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1500,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4260:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1505,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4275:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"id": 1503,
														"name": "decimal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1472,
														"src": "4281:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4275:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4260:28:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1507,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "4317:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1508,
															"name": "decimal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "4326:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1509,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "4335:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1506,
														"name": "WithdrawalBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "4303:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,uint256,address)"
														}
													},
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4303:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1511,
												"nodeType": "EmitStatement",
												"src": "4298:40:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1517,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "4369:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1518,
																"name": "dcml",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1501,
																"src": "4377:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4369:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1514,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1474,
																	"src": "4356:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4348:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1512,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4348:8:5",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4348:11:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4348:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4348:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1521,
												"nodeType": "ExpressionStatement",
												"src": "4348:34:5"
											}
										]
									},
									"functionSelector": "adbc7cee",
									"id": 1523,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1477,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1476,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1138,
												"src": "4127:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "4127:11:5"
										}
									],
									"name": "withdrawalBNB",
									"nameLocation": "4058:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4080:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "4072:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4072:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "decimal",
												"nameLocation": "4097:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "4089:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4089:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4114:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "4106:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4106:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4071:46:5"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4139:0:5"
									},
									"scope": 1544,
									"src": "4049:346:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1538,
										"nodeType": "Block",
										"src": "4464:64:5",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1531,
															"name": "newBridge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1525,
															"src": "4487:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1530,
														"name": "SetBridge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "4477:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4477:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1533,
												"nodeType": "EmitStatement",
												"src": "4472:25:5"
											},
											{
												"expression": {
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1534,
														"name": "Bridge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "4505:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1535,
														"name": "newBridge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1525,
														"src": "4514:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "4505:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1537,
												"nodeType": "ExpressionStatement",
												"src": "4505:18:5"
											}
										]
									},
									"functionSelector": "8dd14802",
									"id": 1539,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1528,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1527,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1138,
												"src": "4455:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "4455:9:5"
										}
									],
									"name": "setBridge",
									"nameLocation": "4408:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "newBridge",
												"nameLocation": "4435:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "4419:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4419:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4418:27:5"
									},
									"returnParameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4464:0:5"
									},
									"scope": 1544,
									"src": "4399:129:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1542,
										"nodeType": "Block",
										"src": "4561:2:5",
										"statements": []
									},
									"id": 1543,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4541:2:5"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4561:0:5"
									},
									"scope": 1544,
									"src": "4534:29:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1545,
							"src": "201:4365:5",
							"usedErrors": []
						}
					],
					"src": "34:4642:5"
				},
				"id": 5
			}
		}
	}
}