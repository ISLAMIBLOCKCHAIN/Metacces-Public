{
	"id": "d515e6a2edaed122587bfbe87eef2f46",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.15",
	"solcLongVersion": "0.8.15+commit.e14f2714",
	"input": {
		"language": "Solidity",
		"sources": {
			"Contracts/AccesPolygon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity = 0.8.15;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\n\n\ncontract MetaccesPolygon is ERC20, ERC20Burnable {\n    using SafeMath for uint256;\n    address private owner;\n    address public bridge;\n\n    uint256 internal sSBlock;uint256 internal sEBlock;uint256 internal sTot;\n    uint256 internal sPrice;\n    uint256 internal path = 10** decimals();\n    uint256 public max = 20 * path;\n    uint256 public min = max.div(100);\n    uint256 public privateLimit = 1000000;\n\n    event WithdrawalBNB(uint256 _amount, uint256 decimal, address to); \n    event WithdrawalToken(address _tokenAddr, uint256 _amount,uint256 decimals, address to);\n    event SetBridge(address _bridge);\n    event PrivateSale(uint256 Amount, uint256 Price);\n    event saleStarted(uint256 blockNumber);\n    event saleEnded(uint256 Time);\n    event minMax(uint256 Min, uint256 Max);\n    event PrivateLimit(uint256 newLimit);\n    event OwnershipTransferred(address indexed oldOwner, address indexed newOwner);\n\n    modifier onlyOwner(){\n        require(msg.sender == owner,\"caller not owner!\");\n        _;\n    }\n \n\nconstructor (address _bridge) ERC20(\"Metacces\", \"Acces\") payable {\n    owner = msg.sender;\n    bridge = _bridge;\n     _mint (address(this), 100000000 * path); // 20% of the Total Supply\n        \n}\n   function transferOwnership(address _newOwner) external onlyOwner{\n       require(_newOwner != address(0),\"address zero!\");\n       owner = _newOwner;\n       emit OwnershipTransferred(owner, _newOwner);\n   }\n\n   function privateSale(address) public payable returns (bool success){\n    require(balanceOf(address(msg.sender)) <= privateLimit * path , \"You reached your private sale limit\");  \n    require(sSBlock <= block.number && block.number <= sEBlock, \"Private Sale has ended or did not start yet\");\n\n    uint256 _eth = msg.value;\n    uint256 _tkns;\n    \n    require ( _eth >= min && _eth <= max , \"Less than Minimum or More than Maximum\");\n    _tkns = (sPrice.mul(_eth)).div(1 ether);\n    sTot ++;\n    \n    _transfer(address(this), msg.sender, _tkns); \n    emit PrivateSale(_tkns, sPrice);\n    return true;\n  }\n\n  function viewSale() public view returns(uint256 StartBlock, uint256 EndBlock, uint256 SaleCount, uint256 SalePrice){\n    return(sSBlock, sEBlock, sTot,  sPrice);\n  }\n  \n  function startSale(uint256 _sEBlock, uint256 _sPrice) public onlyOwner{\n      require(_sEBlock !=0 && _sPrice !=0,\"Zero!\");\n   sEBlock = _sEBlock; \n   sPrice =_sPrice;\n  }\n  \n  function endSale () public onlyOwner{\n          sEBlock = block.number;\n          emit saleEnded(block.timestamp);\n  }\n\n  function changeMinMaxPrivateSale(uint256 minAmount, uint256 maxAmount) external onlyOwner {\n      require(minAmount != 0 && maxAmount !=0,\"Zero!\");\n      min = minAmount;\n      max = maxAmount * path;\n      emit minMax(minAmount, maxAmount);\n  }\n\n  function setPrivateLimit (uint256 _limit) external onlyOwner {\n      require(_limit != 0, \"zero!\");\n      privateLimit = _limit;\n      emit PrivateLimit(_limit);\n  }\n\n  function withdrawalToken(address _tokenAddr, uint256 _amount, uint256 decimal, address to) external onlyOwner() {\n      require(_tokenAddr != address(0),\"address zero!\");\n        uint256 dcml = 10 ** decimal;\n        ERC20 token = ERC20(_tokenAddr);\n        emit WithdrawalToken(_tokenAddr, _amount, decimal, to);\n        token.transfer(to, _amount*dcml); \n    }\n    \n  function withdrawalBNB(uint256 _amount, uint256 decimal, address to) external onlyOwner() {\n        require(address(this).balance >= _amount);\n        uint256 dcml = 10 ** decimal;\n        emit WithdrawalBNB(_amount, decimal, to);\n        payable(to).transfer(_amount*dcml);      \n    }\n\n  function setBridge(address _bridge) onlyOwner public {\n      require(_bridge != address(0),\"zero address!\");\n      emit SetBridge(_bridge);\n        bridge = _bridge;\n    }\n\n\n  /**\n    * @dev Only callable by account with access (gateway role)\n    */\n\n    function mint(\n        address recipient,\n        uint256 amount\n        )\n        public\n        virtual\n        onlyBridge\n        {\n        _mint(recipient, amount);\n    }\n\n    /**\n    * @dev Only callable by account with access (gateway role)\n    * @inheritdoc ERC20Burnable\n    */\n    function burn(\n        uint256 amount\n        )\n        public\n        override(ERC20Burnable)\n        virtual\n        onlyBridge\n        {\n        super.burn(amount);\n    }\n\n    /**\n    * @dev Only callable by account with access (gateway role)\n    * @inheritdoc ERC20Burnable\n    */\n    function burnFrom(\n        address account,\n        uint256 amount\n        )\n        public\n        override(ERC20Burnable)\n        virtual\n        onlyBridge\n        {\n        super.burnFrom(account, amount);\n    }\n\n    modifier onlyBridge {\n      require(msg.sender == bridge, \"only bridge has access to this child token function\");\n      _;\n    }\n\n   receive() external payable {}\n}\n\n/**********************************\n Proudly Developed by Metacces Team\n***********************************/"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2049  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2052:2057  name_ */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2049  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2077:2084  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_28:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1598   */\ntag_3:\n    /* \"#utility.yul\":1135:1141   */\n  0x00\n    /* \"#utility.yul\":1143:1149   */\n  dup1\n    /* \"#utility.yul\":1196:1198   */\n  0x40\n    /* \"#utility.yul\":1184:1193   */\n  dup4\n    /* \"#utility.yul\":1175:1182   */\n  dup6\n    /* \"#utility.yul\":1171:1194   */\n  sub\n    /* \"#utility.yul\":1167:1199   */\n  slt\n    /* \"#utility.yul\":1164:1216   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1164:1216   */\ntag_30:\n    /* \"#utility.yul\":1239:1255   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1304:1318   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1301:1335   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":1331:1332   */\n  0x00\n    /* \"#utility.yul\":1328:1329   */\n  dup1\n    /* \"#utility.yul\":1321:1333   */\n  revert\n    /* \"#utility.yul\":1301:1335   */\ntag_31:\n    /* \"#utility.yul\":1354:1415   */\n  tag_32\n    /* \"#utility.yul\":1407:1414   */\n  dup7\n    /* \"#utility.yul\":1398:1404   */\n  dup4\n    /* \"#utility.yul\":1387:1396   */\n  dup8\n    /* \"#utility.yul\":1383:1405   */\n  add\n    /* \"#utility.yul\":1354:1415   */\n  tag_11\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1344:1415   */\n  swap4\n  pop\n    /* \"#utility.yul\":1461:1463   */\n  0x20\n    /* \"#utility.yul\":1450:1459   */\n  dup6\n    /* \"#utility.yul\":1446:1464   */\n  add\n    /* \"#utility.yul\":1440:1465   */\n  mload\n    /* \"#utility.yul\":1424:1465   */\n  swap2\n  pop\n    /* \"#utility.yul\":1490:1492   */\n  dup1\n    /* \"#utility.yul\":1480:1488   */\n  dup3\n    /* \"#utility.yul\":1477:1493   */\n  gt\n    /* \"#utility.yul\":1474:1510   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1506:1507   */\n  0x00\n    /* \"#utility.yul\":1503:1504   */\n  dup1\n    /* \"#utility.yul\":1496:1508   */\n  revert\n    /* \"#utility.yul\":1474:1510   */\ntag_33:\n  pop\n    /* \"#utility.yul\":1529:1592   */\n  tag_34\n    /* \"#utility.yul\":1584:1591   */\n  dup6\n    /* \"#utility.yul\":1573:1581   */\n  dup3\n    /* \"#utility.yul\":1562:1571   */\n  dup7\n    /* \"#utility.yul\":1558:1582   */\n  add\n    /* \"#utility.yul\":1529:1592   */\n  tag_11\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1519:1592   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1036:1598   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1603:1983   */\ntag_12:\n    /* \"#utility.yul\":1682:1683   */\n  0x01\n    /* \"#utility.yul\":1678:1690   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1725:1737   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1746:1807   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1800:1804   */\n  0x7f\n    /* \"#utility.yul\":1792:1798   */\n  dup3\n    /* \"#utility.yul\":1788:1805   */\n  and\n    /* \"#utility.yul\":1778:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1746:1807   */\ntag_36:\n    /* \"#utility.yul\":1853:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1851   */\n  dup3\n    /* \"#utility.yul\":1842:1856   */\n  lt\n    /* \"#utility.yul\":1822:1840   */\n  dup2\n    /* \"#utility.yul\":1819:1857   */\n  sub\n    /* \"#utility.yul\":1816:1977   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1899:1909   */\n  0x4e487b71\n    /* \"#utility.yul\":1894:1897   */\n  0xe0\n    /* \"#utility.yul\":1890:1910   */\n  shl\n    /* \"#utility.yul\":1887:1888   */\n  0x00\n    /* \"#utility.yul\":1880:1911   */\n  mstore\n    /* \"#utility.yul\":1934:1938   */\n  0x22\n    /* \"#utility.yul\":1931:1932   */\n  0x04\n    /* \"#utility.yul\":1924:1939   */\n  mstore\n    /* \"#utility.yul\":1962:1966   */\n  0x24\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1967   */\n  revert\n    /* \"#utility.yul\":1816:1977   */\ntag_37:\n  pop\n    /* \"#utility.yul\":1603:1983   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2114:2659   */\ntag_14:\n    /* \"#utility.yul\":2216:2218   */\n  0x1f\n    /* \"#utility.yul\":2211:2214   */\n  dup3\n    /* \"#utility.yul\":2208:2219   */\n  gt\n    /* \"#utility.yul\":2205:2653   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":2252:2253   */\n  0x00\n    /* \"#utility.yul\":2277:2282   */\n  dup2\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2266:2283   */\n  mstore\n    /* \"#utility.yul\":2322:2326   */\n  0x20\n    /* \"#utility.yul\":2318:2320   */\n  dup2\n    /* \"#utility.yul\":2308:2327   */\n  keccak256\n    /* \"#utility.yul\":2392:2394   */\n  0x1f\n    /* \"#utility.yul\":2380:2390   */\n  dup6\n    /* \"#utility.yul\":2376:2395   */\n  add\n    /* \"#utility.yul\":2373:2374   */\n  0x05\n    /* \"#utility.yul\":2369:2396   */\n  shr\n    /* \"#utility.yul\":2363:2367   */\n  dup2\n    /* \"#utility.yul\":2359:2397   */\n  add\n    /* \"#utility.yul\":2428:2432   */\n  0x20\n    /* \"#utility.yul\":2416:2426   */\n  dup7\n    /* \"#utility.yul\":2413:2433   */\n  lt\n    /* \"#utility.yul\":2410:2457   */\n  iszero\n  tag_41\n  jumpi\n  pop\n    /* \"#utility.yul\":2451:2455   */\n  dup1\n    /* \"#utility.yul\":2410:2457   */\ntag_41:\n    /* \"#utility.yul\":2506:2508   */\n  0x1f\n    /* \"#utility.yul\":2501:2504   */\n  dup6\n    /* \"#utility.yul\":2497:2509   */\n  add\n    /* \"#utility.yul\":2494:2495   */\n  0x05\n    /* \"#utility.yul\":2490:2510   */\n  shr\n    /* \"#utility.yul\":2484:2488   */\n  dup3\n    /* \"#utility.yul\":2480:2511   */\n  add\n    /* \"#utility.yul\":2470:2511   */\n  swap2\n  pop\n    /* \"#utility.yul\":2561:2643   */\ntag_42:\n    /* \"#utility.yul\":2579:2581   */\n  dup2\n    /* \"#utility.yul\":2572:2577   */\n  dup2\n    /* \"#utility.yul\":2569:2582   */\n  lt\n    /* \"#utility.yul\":2561:2643   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":2624:2641   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2605:2606   */\n  0x01\n    /* \"#utility.yul\":2594:2607   */\n  add\n    /* \"#utility.yul\":2561:2643   */\n  jump(tag_42)\ntag_44:\n    /* \"#utility.yul\":2565:2568   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2205:2653   */\ntag_40:\n    /* \"#utility.yul\":2114:2659   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2835:4187   */\ntag_7:\n    /* \"#utility.yul\":2955:2965   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2977:3007   */\n  dup2\n  gt\n    /* \"#utility.yul\":2974:3030   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":3010:3028   */\n  tag_48\n  tag_10\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3039:3136   */\n  tag_49\n    /* \"#utility.yul\":3129:3135   */\n  dup2\n    /* \"#utility.yul\":3089:3127   */\n  tag_50\n    /* \"#utility.yul\":3121:3125   */\n  dup5\n    /* \"#utility.yul\":3115:3126   */\n  sload\n    /* \"#utility.yul\":3089:3127   */\n  tag_12\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":3083:3087   */\n  dup5\n    /* \"#utility.yul\":3039:3136   */\n  tag_14\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3191:3195   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3255:3257   */\n  0x1f\n    /* \"#utility.yul\":3244:3258   */\n  dup4\n  gt\n    /* \"#utility.yul\":3272:3273   */\n  0x01\n    /* \"#utility.yul\":3267:3930   */\n  dup2\n  eq\n  tag_52\n  jumpi\n    /* \"#utility.yul\":3974:3975   */\n  0x00\n    /* \"#utility.yul\":3991:3997   */\n  dup5\n    /* \"#utility.yul\":3988:4077   */\n  iszero\n  tag_53\n  jumpi\n  pop\n    /* \"#utility.yul\":4043:4062   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":4037:4063   */\n  mload\n    /* \"#utility.yul\":3988:4077   */\ntag_53:\n  not(0x00)\n    /* \"#utility.yul\":2792:2793   */\n  0x03\n    /* \"#utility.yul\":2788:2799   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2784:2808   */\n  shr\n    /* \"#utility.yul\":2780:2809   */\n  not\n    /* \"#utility.yul\":2770:2810   */\n  and\n    /* \"#utility.yul\":2816:2817   */\n  0x01\n    /* \"#utility.yul\":2812:2823   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2767:2824   */\n  or\n    /* \"#utility.yul\":4090:4171   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3237:4181   */\n  jump(tag_44)\n    /* \"#utility.yul\":3267:3930   */\ntag_52:\n    /* \"#utility.yul\":2061:2062   */\n  0x00\n    /* \"#utility.yul\":2054:2068   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2098:2102   */\n  0x20\n    /* \"#utility.yul\":2085:2103   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3303:3323   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3421:3657   */\ntag_56:\n    /* \"#utility.yul\":3435:3442   */\n  dup3\n    /* \"#utility.yul\":3432:3433   */\n  dup2\n    /* \"#utility.yul\":3429:3443   */\n  lt\n    /* \"#utility.yul\":3421:3657   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3524:3543   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3518:3544   */\n  mload\n    /* \"#utility.yul\":3503:3545   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3616:3643   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3584:3585   */\n  0x01\n    /* \"#utility.yul\":3572:3586   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3451:3470   */\n  dup5\n  add\n    /* \"#utility.yul\":3421:3657   */\n  jump(tag_56)\ntag_58:\n    /* \"#utility.yul\":3425:3428   */\n  pop\n    /* \"#utility.yul\":3685:3691   */\n  dup6\n    /* \"#utility.yul\":3676:3683   */\n  dup3\n    /* \"#utility.yul\":3673:3692   */\n  lt\n    /* \"#utility.yul\":3670:3871   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":3746:3765   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3740:3766   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3829:3830   */\n  0x03\n    /* \"#utility.yul\":3825:3839   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3841:3844   */\n  0xf8\n    /* \"#utility.yul\":3821:3845   */\n  and\n    /* \"#utility.yul\":3817:3854   */\n  shr\n    /* \"#utility.yul\":3813:3855   */\n  not\n    /* \"#utility.yul\":3798:3856   */\n  and\n    /* \"#utility.yul\":3783:3857   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3670:3871   */\ntag_59:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3917:3918   */\n  0x01\n    /* \"#utility.yul\":3901:3915   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3897:3919   */\n  add\n    /* \"#utility.yul\":3884:3920   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2835:4187   */\n  jump\t// out\ntag_16:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12617  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3175:3177  18 */\n      0x12\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3489  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2210:2223  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2242:2247  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2235:2247  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4516:4520  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4586:4593  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4595:4601  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4578  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4619:4623  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5319:5323  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5391:5395  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5406:5412  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5390  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5433:5437  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5439:5441  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5443:5449  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5432  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5467:5471  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5961:5965  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6031:6038  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6068:6078  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6065  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6031:6038  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6049  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6065  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6078  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6023  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2423:2436  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2455:2462  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2448:2462  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6768:6793  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6785:6792  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6768:6777  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6768:6793  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6741:6793  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6831:6846  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6811:6827  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6811:6846  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3222:3224   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3204:3225   */\n      mstore\n        /* \"#utility.yul\":3261:3263   */\n      0x25\n        /* \"#utility.yul\":3241:3259   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3234:3264   */\n      mstore\n        /* \"#utility.yul\":3300:3334   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3280:3298   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3273:3335   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3351:3369   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3344:3379   */\n      mstore\n        /* \"#utility.yul\":3396:3415   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6931:6936  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6938:6945  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6966:6981  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6963  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6981  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6930  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3808:3812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3879:3881  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3883:3889  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3871  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4065:4072  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10480  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10241:10260  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3628:3630   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3610:3631   */\n      mstore\n        /* \"#utility.yul\":3667:3669   */\n      0x24\n        /* \"#utility.yul\":3647:3665   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3640:3670   */\n      mstore\n        /* \"#utility.yul\":3706:3740   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3686:3704   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3679:3741   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3757:3775   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3750:3784   */\n      mstore\n        /* \"#utility.yul\":3801:3820   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3426:3826   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10340  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4033:4035   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4015:4036   */\n      mstore\n        /* \"#utility.yul\":4072:4074   */\n      0x22\n        /* \"#utility.yul\":4052:4070   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4045:4075   */\n      mstore\n        /* \"#utility.yul\":4111:4145   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4091:4109   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4084:4146   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4162:4180   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4155:4187   */\n      mstore\n        /* \"#utility.yul\":4204:4223   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3831:4229   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10408  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10401  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10408  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10417  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10426  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10480  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10761:11202  function _spendAllowance(... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10891:10915  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10918:10943  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10928:10933  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10935:10942  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10918:10927  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10918:10943  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10891:10943  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10957:10973  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10957:10994  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10953:11196  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11038:11044  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11018:11034  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11018:11044  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4436:4438   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4418:4439   */\n      mstore\n        /* \"#utility.yul\":4475:4477   */\n      0x1d\n        /* \"#utility.yul\":4455:4473   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4448:4478   */\n      mstore\n        /* \"#utility.yul\":4514:4545   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4494:4512   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4487:4546   */\n      mstore\n        /* \"#utility.yul\":4563:4581   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4234:4587   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11171  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11129:11134  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11136:11143  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11164:11170  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11145:11161  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11145:11170  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11128  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11171  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11202  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10761:11202  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7475:8126  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7619  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4794:4796   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4776:4797   */\n      mstore\n        /* \"#utility.yul\":4833:4835   */\n      0x25\n        /* \"#utility.yul\":4813:4831   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4806:4836   */\n      mstore\n        /* \"#utility.yul\":4872:4906   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4852:4870   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4845:4907   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4923:4941   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4916:4951   */\n      mstore\n        /* \"#utility.yul\":4968:4987   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4592:4993   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7679:7695  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5200:5202   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5182:5203   */\n      mstore\n        /* \"#utility.yul\":5239:5241   */\n      0x23\n        /* \"#utility.yul\":5219:5237   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5212:5242   */\n      mstore\n        /* \"#utility.yul\":5278:5312   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5258:5276   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5251:5313   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5329:5347   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5322:5355   */\n      mstore\n        /* \"#utility.yul\":5372:5391   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4998:5397   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7817:7832  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7795:7814  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7817:7832  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7850:7871  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5604:5606   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5586:5607   */\n      mstore\n        /* \"#utility.yul\":5643:5645   */\n      0x26\n        /* \"#utility.yul\":5623:5641   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5616:5646   */\n      mstore\n        /* \"#utility.yul\":5682:5716   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5662:5680   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5655:5717   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5733:5751   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5726:5762   */\n      mstore\n        /* \"#utility.yul\":5779:5798   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5402:5804   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7963  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7957  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7963  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7966:7986  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7986  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8019  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7980:7986  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7957  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      tag_135\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7980:7986  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      tag_88\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8060:8062  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8058  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8064:8070  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8082:8119  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11786:11907  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:611   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_144:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_144)\n    tag_146:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_147:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_141:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_149:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_21:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_151:\n        /* \"#utility.yul\":962:991   */\n      tag_152\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_141\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_31:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_156:\n        /* \"#utility.yul\":1612:1641   */\n      tag_157\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_141\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_158\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_141\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_44:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_161:\n        /* \"#utility.yul\":2100:2129   */\n      tag_162\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_141\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2090:2129   */\n      swap4\n        /* \"#utility.yul\":1949:2135   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2400   */\n    tag_60:\n        /* \"#utility.yul\":2208:2214   */\n      0x00\n        /* \"#utility.yul\":2216:2222   */\n      dup1\n        /* \"#utility.yul\":2269:2271   */\n      0x40\n        /* \"#utility.yul\":2257:2266   */\n      dup4\n        /* \"#utility.yul\":2248:2255   */\n      dup6\n        /* \"#utility.yul\":2244:2267   */\n      sub\n        /* \"#utility.yul\":2240:2272   */\n      slt\n        /* \"#utility.yul\":2237:2289   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2285:2286   */\n      0x00\n        /* \"#utility.yul\":2282:2283   */\n      dup1\n        /* \"#utility.yul\":2275:2287   */\n      revert\n        /* \"#utility.yul\":2237:2289   */\n    tag_164:\n        /* \"#utility.yul\":2308:2337   */\n      tag_165\n        /* \"#utility.yul\":2327:2336   */\n      dup4\n        /* \"#utility.yul\":2308:2337   */\n      tag_141\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2298:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2356:2394   */\n      tag_166\n        /* \"#utility.yul\":2390:2392   */\n      0x20\n        /* \"#utility.yul\":2379:2388   */\n      dup5\n        /* \"#utility.yul\":2375:2393   */\n      add\n        /* \"#utility.yul\":2356:2394   */\n      tag_141\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2346:2394   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2400   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2405:2785   */\n    tag_65:\n        /* \"#utility.yul\":2484:2485   */\n      0x01\n        /* \"#utility.yul\":2480:2492   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2527:2539   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2548:2609   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2602:2606   */\n      0x7f\n        /* \"#utility.yul\":2594:2600   */\n      dup3\n        /* \"#utility.yul\":2590:2607   */\n      and\n        /* \"#utility.yul\":2580:2607   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2609   */\n    tag_168:\n        /* \"#utility.yul\":2655:2657   */\n      0x20\n        /* \"#utility.yul\":2647:2653   */\n      dup3\n        /* \"#utility.yul\":2644:2658   */\n      lt\n        /* \"#utility.yul\":2624:2642   */\n      dup2\n        /* \"#utility.yul\":2621:2659   */\n      sub\n        /* \"#utility.yul\":2618:2779   */\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2701:2711   */\n      0x4e487b71\n        /* \"#utility.yul\":2696:2699   */\n      0xe0\n        /* \"#utility.yul\":2692:2712   */\n      shl\n        /* \"#utility.yul\":2689:2690   */\n      0x00\n        /* \"#utility.yul\":2682:2713   */\n      mstore\n        /* \"#utility.yul\":2736:2740   */\n      0x22\n        /* \"#utility.yul\":2733:2734   */\n      0x04\n        /* \"#utility.yul\":2726:2741   */\n      mstore\n        /* \"#utility.yul\":2764:2768   */\n      0x24\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2754:2769   */\n      revert\n        /* \"#utility.yul\":2618:2779   */\n    tag_169:\n      pop\n        /* \"#utility.yul\":2405:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2790:3015   */\n    tag_88:\n        /* \"#utility.yul\":2830:2833   */\n      0x00\n        /* \"#utility.yul\":2861:2862   */\n      dup3\n        /* \"#utility.yul\":2857:2863   */\n      not\n        /* \"#utility.yul\":2854:2855   */\n      dup3\n        /* \"#utility.yul\":2851:2864   */\n      gt\n        /* \"#utility.yul\":2848:2984   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":2906:2916   */\n      0x4e487b71\n        /* \"#utility.yul\":2901:2904   */\n      0xe0\n        /* \"#utility.yul\":2897:2917   */\n      shl\n        /* \"#utility.yul\":2894:2895   */\n      0x00\n        /* \"#utility.yul\":2887:2918   */\n      mstore\n        /* \"#utility.yul\":2941:2945   */\n      0x11\n        /* \"#utility.yul\":2938:2939   */\n      0x04\n        /* \"#utility.yul\":2931:2946   */\n      mstore\n        /* \"#utility.yul\":2969:2973   */\n      0x24\n        /* \"#utility.yul\":2966:2967   */\n      0x00\n        /* \"#utility.yul\":2959:2974   */\n      revert\n        /* \"#utility.yul\":2848:2984   */\n    tag_171:\n      pop\n        /* \"#utility.yul\":3000:3009   */\n      add\n      swap1\n        /* \"#utility.yul\":2790:3015   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200081742352af2e3abd4011f4774f2d293f437a0038893442e64e595f146f204564736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 461,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 90,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4189:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:7"
															},
															"nodeType": "YulIf",
															"src": "220:55:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:7"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:7"
															},
															"nodeType": "YulIf",
															"src": "353:36:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:7"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:7",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:7"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:7"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:7",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:7"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:7"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:7"
															},
															"nodeType": "YulIf",
															"src": "536:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:7"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:7"
															},
															"nodeType": "YulIf",
															"src": "698:53:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:7"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:7"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:7"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:7",
																"statements": []
															},
															"src": "779:133:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:7"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:7"
															},
															"nodeType": "YulIf",
															"src": "921:80:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:7",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:7",
														"type": ""
													}
												],
												"src": "146:885:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:444:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1175:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1196:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1167:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:32:7"
															},
															"nodeType": "YulIf",
															"src": "1164:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:16:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1229:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1282:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1278:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:18:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1319:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1304:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:14:7"
															},
															"nodeType": "YulIf",
															"src": "1301:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1407:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1354:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:61:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1424:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1450:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1461:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:25:7"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1428:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1480:8:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1477:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:16:7"
															},
															"nodeType": "YulIf",
															"src": "1474:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:73:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:7"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1573:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1584:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1529:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:63:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1112:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1123:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1135:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1143:6:7",
														"type": ""
													}
												],
												"src": "1036:562:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1685:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1699:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1729:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1725:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1703:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1776:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1778:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1792:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1800:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1788:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1788:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1756:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:26:7"
															},
															"nodeType": "YulIf",
															"src": "1746:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1887:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1894:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1899:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1890:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1890:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1880:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1880:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1934:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1924:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1924:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1822:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1845:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1842:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1819:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:38:7"
															},
															"nodeType": "YulIf",
															"src": "1816:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1638:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1647:6:7",
														"type": ""
													}
												],
												"src": "1603:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2044:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2064:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2054:14:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2054:14:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2077:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2095:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2098:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2085:9:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2085:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2077:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2027:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2035:4:7",
														"type": ""
													}
												],
												"src": "1988:121:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2195:464:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2228:425:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2242:11:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2252:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2246:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2277:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2266:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2266:17:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2266:17:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2296:31:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2318:2:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2322:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2308:9:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2308:19:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2300:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2340:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2363:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2373:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2380:10:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2392:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2376:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2376:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2369:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2369:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2359:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2359:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2344:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2434:23:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2436:19:7",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2451:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2436:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2416:10:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2428:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2413:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2413:20:7"
																		},
																		"nodeType": "YulIf",
																		"src": "2410:47:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2470:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2484:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2494:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2501:3:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2506:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2497:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2497:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2490:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2490:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2480:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2480:31:7"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2474:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2524:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2537:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2528:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2622:21:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2631:5:7"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2638:2:7"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2624:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2624:17:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2624:17:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2572:5:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2579:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2569:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2569:13:7"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2583:26:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2585:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2598:5:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2605:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2594:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2594:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2585:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2565:3:7",
																			"statements": []
																		},
																		"src": "2561:82:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2211:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2216:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2208:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2208:11:7"
															},
															"nodeType": "YulIf",
															"src": "2205:448:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2167:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2174:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2179:10:7",
														"type": ""
													}
												],
												"src": "2114:545:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2749:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2759:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2774:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2792:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2795:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2788:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2788:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2805:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2801:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2801:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2784:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2784:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2780:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2780:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2770:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2770:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2816:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2819:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2812:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2812:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2767:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2767:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2759:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2726:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2732:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2740:4:7",
														"type": ""
													}
												],
												"src": "2664:166:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2931:1256:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2941:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2961:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2955:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2945:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3008:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3010:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3010:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3010:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2980:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2996:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3000:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2992:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2992:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3004:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2988:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2988:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2977:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2977:30:7"
															},
															"nodeType": "YulIf",
															"src": "2974:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3083:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3121:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3115:5:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3115:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3089:25:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:38:7"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3129:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "3039:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3039:97:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3039:97:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3145:18:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3162:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3149:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3172:23:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3191:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3176:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3204:24:7",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3217:11:7"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3204:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3274:656:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3288:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3307:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3319:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3315:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3315:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3303:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3303:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3292:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3336:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3380:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3350:29:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3350:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3340:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3398:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3407:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3402:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3485:172:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3510:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3528:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3533:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3524:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3524:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3518:5:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3518:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3503:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3503:42:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3503:42:7"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3562:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3576:6:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3584:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3572:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3572:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3562:6:7"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3603:40:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3620:9:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3631:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3616:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3616:27:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3603:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3432:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3435:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3429:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3429:14:7"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3444:28:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3446:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3455:1:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3458:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3451:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3451:19:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3446:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3425:3:7",
																					"statements": []
																				},
																				"src": "3421:236:7"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3705:166:7",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3723:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3750:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3755:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3746:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3746:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3740:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3740:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3727:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3790:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3802:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3829:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3832:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3825:3:7"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3825:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3841:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3821:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3821:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3851:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3847:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3847:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3817:3:7"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3817:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3813:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3813:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3798:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3798:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3783:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3783:74:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3783:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3676:7:7"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3685:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3673:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3673:19:7"
																				},
																				"nodeType": "YulIf",
																				"src": "3670:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3891:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3905:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3908:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3901:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3901:14:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3917:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3897:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3897:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3884:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3884:36:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3884:36:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3267:663:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3272:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3947:234:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3961:14:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3974:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3965:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4010:67:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4028:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4047:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4052:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4043:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4043:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4037:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4037:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4028:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3991:6:7"
																				},
																				"nodeType": "YulIf",
																				"src": "3988:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4097:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4156:5:7"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4163:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4103:52:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4103:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4090:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4090:81:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4090:81:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3939:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3247:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3255:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3244:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3244:14:7"
															},
															"nodeType": "YulSwitch",
															"src": "3237:944:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2916:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2922:3:7",
														"type": ""
													}
												],
												"src": "2835:1352:7"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b8238038062000b82833981016040819052620000349162000127565b600362000042838262000220565b50600462000051828262000220565b505050620002ec565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b838211156200011d5760008385830101525b9695505050505050565b600080604083850312156200013b57600080fd5b82516001600160401b03808211156200015357600080fd5b620001618683870162000070565b935060208501519150808211156200017857600080fd5b50620001878582860162000070565b9150509250929050565b600181811c90821680620001a657607f821691505b602082108103620001c757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021b57600081815260208120601f850160051c81016020861015620001f65750805b601f850160051c820191505b81811015620002175782815560010162000202565b5050505b505050565b81516001600160401b038111156200023c576200023c6200005a565b62000254816200024d845462000191565b84620001cd565b602080601f8311600181146200028c5760008415620002735750858301515b600019600386901b1c1916600185901b17855562000217565b600085815260208120601f198616915b82811015620002bd578886015182559484019460019091019084016200029c565b5085821015620002dc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61088680620002fc6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082a565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b60208210810361082457634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084b57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212200081742352af2e3abd4011f4774f2d293f437a0038893442e64e595f146f204564736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB82 CODESIZE SUB DUP1 PUSH3 0xB82 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x127 JUMP JUMPDEST PUSH1 0x3 PUSH3 0x42 DUP4 DUP3 PUSH3 0x220 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x51 DUP3 DUP3 PUSH3 0x220 JUMP JUMPDEST POP POP POP PUSH3 0x2EC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x161 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x187 DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1A6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1C7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x21B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1F6 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x217 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x202 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x23C JUMPI PUSH3 0x23C PUSH3 0x5A JUMP JUMPDEST PUSH3 0x254 DUP2 PUSH3 0x24D DUP5 SLOAD PUSH3 0x191 JUMP JUMPDEST DUP5 PUSH3 0x1CD JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x28C JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x273 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x217 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2BD JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x29C JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2DC JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x886 DUP1 PUSH3 0x2FC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82A JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x824 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP2 PUSH21 0x2352AF2E3ABD4011F4774F2D293F437A0038893442 0xE6 0x4E MSIZE 0x5F EQ PUSH16 0x204564736F6C634300080F0033000000 ",
							"sourceMap": "1403:11214:0:-:0;;;1978:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:5;:13;2052:5;2044;:13;:::i;:::-;-1:-1:-1;2067:7:0;:17;2077:7;2067;:17;:::i;:::-;;1978:113;;1403:11214;;14:127:7;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:7;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:7;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:7:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:7;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;2114:545::-;2216:2;2211:3;2208:11;2205:448;;;2252:1;2277:5;2273:2;2266:17;2322:4;2318:2;2308:19;2392:2;2380:10;2376:19;2373:1;2369:27;2363:4;2359:38;2428:4;2416:10;2413:20;2410:47;;;-1:-1:-1;2451:4:7;2410:47;2506:2;2501:3;2497:12;2494:1;2490:20;2484:4;2480:31;2470:41;;2561:82;2579:2;2572:5;2569:13;2561:82;;;2624:17;;;2605:1;2594:13;2561:82;;;2565:3;;;2205:448;2114:545;;;:::o;2835:1352::-;2955:10;;-1:-1:-1;;;;;2977:30:7;;2974:56;;;3010:18;;:::i;:::-;3039:97;3129:6;3089:38;3121:4;3115:11;3089:38;:::i;:::-;3083:4;3039:97;:::i;:::-;3191:4;;3255:2;3244:14;;3272:1;3267:663;;;;3974:1;3991:6;3988:89;;;-1:-1:-1;4043:19:7;;;4037:26;3988:89;-1:-1:-1;;2792:1:7;2788:11;;;2784:24;2780:29;2770:40;2816:1;2812:11;;;2767:57;4090:81;;3237:944;;3267:663;2061:1;2054:14;;;2098:4;2085:18;;-1:-1:-1;;3303:20:7;;;3421:236;3435:7;3432:1;3429:14;3421:236;;;3524:19;;;3518:26;3503:42;;3616:27;;;;3584:1;3572:14;;;;3451:19;;3421:236;;;3425:3;3685:6;3676:7;3673:19;3670:201;;;3746:19;;;3740:26;-1:-1:-1;;3829:1:7;3825:14;;;3841:3;3821:24;3817:37;3813:42;3798:58;3783:74;;3670:201;-1:-1:-1;;;;;3917:1:7;3901:14;;;3897:22;3884:36;;-1:-1:-1;2835:1352:7:o;:::-;1403:11214:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_584": {
									"entryPoint": null,
									"id": 584,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_519": {
									"entryPoint": 856,
									"id": 519,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_573": {
									"entryPoint": null,
									"id": 573,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_744": {
									"entryPoint": null,
									"id": 744,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_562": {
									"entryPoint": 1148,
									"id": 562,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_346": {
									"entryPoint": 1270,
									"id": 346,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_141": {
									"entryPoint": 813,
									"id": 141,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_166": {
									"entryPoint": 562,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_98": {
									"entryPoint": null,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_269": {
									"entryPoint": 671,
									"id": 269,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_228": {
									"entryPoint": 622,
									"id": 228,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_54": {
									"entryPoint": 416,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_64": {
									"entryPoint": 656,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 586,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_123": {
									"entryPoint": 799,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5806:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:7",
																"statements": []
															},
															"src": "294:140:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:7"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:7"
															},
															"nodeType": "YulIf",
															"src": "443:91:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:7",
														"type": ""
													}
												],
												"src": "14:597:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:7"
															},
															"nodeType": "YulIf",
															"src": "713:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:7",
														"type": ""
													}
												],
												"src": "616:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:7"
															},
															"nodeType": "YulIf",
															"src": "891:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:7",
														"type": ""
													}
												],
												"src": "794:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:7",
														"type": ""
													}
												],
												"src": "1053:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:7",
														"type": ""
													}
												],
												"src": "1245:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:7"
															},
															"nodeType": "YulIf",
															"src": "1541:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:7",
														"type": ""
													}
												],
												"src": "1427:328:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:7",
														"type": ""
													}
												],
												"src": "1760:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:7"
															},
															"nodeType": "YulIf",
															"src": "2029:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:7",
														"type": ""
													}
												],
												"src": "1949:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2227:173:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2273:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2282:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2285:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2275:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2275:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2248:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2257:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2244:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2244:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2240:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:32:7"
															},
															"nodeType": "YulIf",
															"src": "2237:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2327:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2308:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2346:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2356:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2196:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2208:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2216:6:7",
														"type": ""
													}
												],
												"src": "2140:260:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2470:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2484:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2487:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2480:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2501:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2531:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2537:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2505:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2578:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2580:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2594:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2602:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2590:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2590:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2580:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2558:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:26:7"
															},
															"nodeType": "YulIf",
															"src": "2548:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2689:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2696:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2701:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2692:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2692:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2682:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2682:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2726:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2726:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2764:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2754:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2754:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2754:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2624:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2644:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2621:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2621:38:7"
															},
															"nodeType": "YulIf",
															"src": "2618:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2440:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2449:6:7",
														"type": ""
													}
												],
												"src": "2405:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2838:177:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2873:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2894:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2901:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2906:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2897:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2897:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2887:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2938:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2941:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2931:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2931:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2931:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2966:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2969:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2959:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2959:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2959:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2854:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2861:1:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2857:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2857:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2851:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2851:13:7"
															},
															"nodeType": "YulIf",
															"src": "2848:136:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2993:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3004:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3007:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3000:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2993:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2821:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2824:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2830:3:7",
														"type": ""
													}
												],
												"src": "2790:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3194:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3211:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3222:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3204:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3204:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3256:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3241:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3241:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3261:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3234:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3234:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3234:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3284:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3295:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:18:7"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3300:34:7",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3355:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3366:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3351:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3351:18:7"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3371:7:7",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3344:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3388:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3400:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3411:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3396:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3388:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3171:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3185:4:7",
														"type": ""
													}
												],
												"src": "3020:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3600:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3617:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3610:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3610:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3667:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3640:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3690:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3701:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3686:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3686:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3706:34:7",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3761:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3772:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3757:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3757:18:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3777:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3750:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3750:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3750:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3805:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3816:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3801:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3577:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3591:4:7",
														"type": ""
													}
												],
												"src": "3426:400:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4005:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4022:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4033:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4015:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4015:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4015:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4056:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4067:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4052:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4052:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4072:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4045:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4045:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4045:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4095:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4106:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4091:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4111:34:7",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4084:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4084:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4084:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4166:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4177:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4162:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4162:18:7"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4182:4:7",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4155:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4155:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4155:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4196:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4208:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4219:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4204:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4196:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3982:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3996:4:7",
														"type": ""
													}
												],
												"src": "3831:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4408:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4425:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4436:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4418:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4459:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4470:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4455:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4455:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4475:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4448:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4498:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4509:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4494:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4494:18:7"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4514:31:7",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4487:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4487:59:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4555:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4567:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4578:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4563:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4555:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4385:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4399:4:7",
														"type": ""
													}
												],
												"src": "4234:353:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4766:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4783:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4794:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4776:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4776:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4776:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4817:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4828:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4813:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4813:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4833:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4806:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4806:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4856:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4867:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4852:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4852:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4872:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4845:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4845:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4927:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4938:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4923:18:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4943:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4916:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4960:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4972:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4983:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4968:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4968:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4960:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4743:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4757:4:7",
														"type": ""
													}
												],
												"src": "4592:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5172:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5189:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5182:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5182:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5182:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5223:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5234:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5219:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5239:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5212:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5262:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5273:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5258:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5258:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5278:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5251:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5251:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5251:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5333:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5344:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5329:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5329:18:7"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5349:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5322:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5322:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5322:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5364:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5376:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5387:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5372:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5364:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5149:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5163:4:7",
														"type": ""
													}
												],
												"src": "4998:399:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5576:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5593:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5604:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5586:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5627:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5638:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5623:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5643:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5616:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5616:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5616:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5666:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5677:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5662:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5662:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5682:34:7",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5655:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5655:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5655:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5748:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5733:18:7"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5753:8:7",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5726:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5726:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5726:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5771:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5783:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5794:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5779:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5779:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5771:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5553:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5567:4:7",
														"type": ""
													}
												],
												"src": "5402:402:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082a565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b60208210810361082457634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084b57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212200081742352af2e3abd4011f4774f2d293f437a0038893442e64e595f146f204564736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82A JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x824 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP2 PUSH21 0x2352AF2E3ABD4011F4774F2D293F437A0038893442 0xE6 0x4E MSIZE 0x5F EQ PUSH16 0x204564736F6C634300080F0033000000 ",
							"sourceMap": "1403:11214:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:7;;1211:22;1193:41;;1181:2;1166:18;4433:197:0;1053:187:7;3244:106:0;3331:12;;3244:106;;;1391:25:7;;;1379:2;1364:18;3244:106:0;1245:177:7;5192:286:0;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;1902:36:7;;1890:2;1875:18;3093:91:0;1760:184:7;5873:234:0;;;;;;:::i;:::-;;:::i;3408:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:0;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;;:::i;2156:98::-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:4;4570:32:0;719:10:4;4586:7:0;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:0;;4433:197;-1:-1:-1;;;4433:197:0:o;5192:286::-;5319:4;719:10:4;5375:38:0;5391:4;719:10:4;5406:6:0;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:0;;5192:286;-1:-1:-1;;;;5192:286:0:o;5873:234::-;5961:4;719:10:4;6015:64:0;719:10:4;6031:7:0;6068:10;6040:25;719:10:4;6031:7:0;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:4;6687:4:0;6768:25;719:10:4;6785:7:0;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:0;;3222:2:7;6803:85:0;;;3204:21:7;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:7;;;3344:35;3396:19;;6803:85:0;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:4;3862:28:0;719:10:4;3879:2:0;3883:6;3862:9;:28::i;3976:149::-;-1:-1:-1;;;;;4091:18:0;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;10110:370::-;-1:-1:-1;;;;;10241:19:0;;10233:68;;;;-1:-1:-1;;;10233:68:0;;3628:2:7;10233:68:0;;;3610:21:7;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:7;;;3750:34;3801:19;;10233:68:0;3426:400:7;10233:68:0;-1:-1:-1;;;;;10319:21:0;;10311:68;;;;-1:-1:-1;;;10311:68:0;;4033:2:7;10311:68:0;;;4015:21:7;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:7;;;4155:32;4204:19;;10311:68:0;3831:398:7;10311:68:0;-1:-1:-1;;;;;10390:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;1391:25:7;;;10441:32:0;;1364:18:7;10441:32:0;;;;;;;10110:370;;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;-1:-1:-1;;10957:16:0;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:0;;4436:2:7;11010:68:0;;;4418:21:7;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;11010:68:0;4234:353:7;11010:68:0;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:0;;7593:68;;;;-1:-1:-1;;;7593:68:0;;4794:2:7;7593:68:0;;;4776:21:7;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:7;;;4916:35;4968:19;;7593:68:0;4592:401:7;7593:68:0;-1:-1:-1;;;;;7679:16:0;;7671:64;;;;-1:-1:-1;;;7671:64:0;;5200:2:7;7671:64:0;;;5182:21:7;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:7;;;5322:33;5372:19;;7671:64:0;4998:399:7;7671:64:0;-1:-1:-1;;;;;7817:15:0;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:0;;5604:2:7;7842:72:0;;;5586:21:7;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:7;;;5726:36;5779:19;;7842:72:0;5402:402:7;7842:72:0;-1:-1:-1;;;;;7948:15:0;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:0;8054:4;-1:-1:-1;;;;;8045:26:0;;8064:6;8045:26;;;;1391:25:7;;1379:2;1364:18;;1245:177;8045:26:0;;;;;;;;8082:37;11786:121;14:597:7;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:7;574:15;-1:-1:-1;;570:29:7;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:7:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:7;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:7:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:7:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:7;;2790:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "436400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "26978",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51270",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1978,
									"end": 2091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2052,
									"end": 2057,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2044,
									"end": 2057,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2077,
									"end": 2084,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2067,
									"end": 2084,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 7,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1135,
									"end": 1141,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1149,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1196,
									"end": 1198,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1193,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1175,
									"end": 1182,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1171,
									"end": 1194,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1199,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1407,
									"end": 1414,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1396,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1354,
									"end": 1415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1461,
									"end": 1463,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1450,
									"end": 1459,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1440,
									"end": 1465,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1480,
									"end": 1488,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1493,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1504,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1496,
									"end": 1508,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1584,
									"end": 1591,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1581,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1529,
									"end": 1592,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1598,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1682,
									"end": 1683,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1804,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 1792,
									"end": 1798,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1788,
									"end": 1805,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1853,
									"end": 1855,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1851,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1822,
									"end": 1840,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 1894,
									"end": 1897,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1887,
									"end": 1888,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1880,
									"end": 1911,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1934,
									"end": 1938,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1924,
									"end": 1939,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1967,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1603,
									"end": 1983,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2114,
									"end": 2659,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 2114,
									"end": 2659,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2216,
									"end": 2218,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2211,
									"end": 2214,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2208,
									"end": 2219,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2205,
									"end": 2653,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2205,
									"end": 2653,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2205,
									"end": 2653,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2252,
									"end": 2253,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2277,
									"end": 2282,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2283,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2322,
									"end": 2326,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2318,
									"end": 2320,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2308,
									"end": 2327,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2392,
									"end": 2394,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2380,
									"end": 2390,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2376,
									"end": 2395,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2373,
									"end": 2374,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2369,
									"end": 2396,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2363,
									"end": 2367,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2359,
									"end": 2397,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2428,
									"end": 2432,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2416,
									"end": 2426,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2413,
									"end": 2433,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2410,
									"end": 2457,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2410,
									"end": 2457,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 2410,
									"end": 2457,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2451,
									"end": 2455,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2410,
									"end": 2457,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 2410,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2506,
									"end": 2508,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2501,
									"end": 2504,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2497,
									"end": 2509,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2494,
									"end": 2495,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2490,
									"end": 2510,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2484,
									"end": 2488,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2480,
									"end": 2511,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2470,
									"end": 2511,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2470,
									"end": 2511,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2581,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2572,
									"end": 2577,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2569,
									"end": 2582,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2624,
									"end": 2641,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2624,
									"end": 2641,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2624,
									"end": 2641,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2605,
									"end": 2606,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2594,
									"end": 2607,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 2561,
									"end": 2643,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2565,
									"end": 2568,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2565,
									"end": 2568,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2565,
									"end": 2568,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2205,
									"end": 2653,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2205,
									"end": 2653,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2114,
									"end": 2659,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2114,
									"end": 2659,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2114,
									"end": 2659,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2114,
									"end": 2659,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2835,
									"end": 4187,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 2835,
									"end": 4187,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2955,
									"end": 2965,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2955,
									"end": 2965,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2977,
									"end": 3007,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2977,
									"end": 3007,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2974,
									"end": 3030,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2974,
									"end": 3030,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 2974,
									"end": 3030,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 3010,
									"end": 3028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3039,
									"end": 3136,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3129,
									"end": 3135,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3089,
									"end": 3127,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 3121,
									"end": 3125,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3115,
									"end": 3126,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3089,
									"end": 3127,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 3089,
									"end": 3127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3089,
									"end": 3127,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 3089,
									"end": 3127,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3083,
									"end": 3087,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3039,
									"end": 3136,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 3039,
									"end": 3136,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3039,
									"end": 3136,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3039,
									"end": 3136,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3191,
									"end": 3195,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3191,
									"end": 3195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3255,
									"end": 3257,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3244,
									"end": 3258,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3244,
									"end": 3258,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3272,
									"end": 3273,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3974,
									"end": 3975,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3991,
									"end": 3997,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3988,
									"end": 4077,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3988,
									"end": 4077,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 3988,
									"end": 4077,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4043,
									"end": 4062,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4043,
									"end": 4062,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4043,
									"end": 4062,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4037,
									"end": 4063,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3988,
									"end": 4077,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 3988,
									"end": 4077,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2792,
									"end": 2793,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2788,
									"end": 2799,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2799,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2799,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2784,
									"end": 2808,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2809,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2770,
									"end": 2810,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2816,
									"end": 2817,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2812,
									"end": 2823,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2812,
									"end": 2823,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2812,
									"end": 2823,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2767,
									"end": 2824,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4090,
									"end": 4171,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4090,
									"end": 4171,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 3237,
									"end": 4181,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3267,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2061,
									"end": 2062,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2054,
									"end": 2068,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2054,
									"end": 2068,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2054,
									"end": 2068,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2098,
									"end": 2102,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2085,
									"end": 2103,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2085,
									"end": 2103,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3303,
									"end": 3323,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3303,
									"end": 3323,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3303,
									"end": 3323,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3435,
									"end": 3442,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3432,
									"end": 3433,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3429,
									"end": 3443,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3524,
									"end": 3543,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 3524,
									"end": 3543,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3524,
									"end": 3543,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3518,
									"end": 3544,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3503,
									"end": 3545,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3503,
									"end": 3545,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3616,
									"end": 3643,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3616,
									"end": 3643,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3616,
									"end": 3643,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3616,
									"end": 3643,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3584,
									"end": 3585,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3572,
									"end": 3586,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3572,
									"end": 3586,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3572,
									"end": 3586,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3572,
									"end": 3586,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3451,
									"end": 3470,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3451,
									"end": 3470,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3421,
									"end": 3657,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3425,
									"end": 3428,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3685,
									"end": 3691,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3676,
									"end": 3683,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3673,
									"end": 3692,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3670,
									"end": 3871,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3670,
									"end": 3871,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 3670,
									"end": 3871,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3746,
									"end": 3765,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3746,
									"end": 3765,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3746,
									"end": 3765,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3740,
									"end": 3766,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3829,
									"end": 3830,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3825,
									"end": 3839,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 3825,
									"end": 3839,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3825,
									"end": 3839,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3841,
									"end": 3844,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 3821,
									"end": 3845,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3817,
									"end": 3854,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3813,
									"end": 3855,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3798,
									"end": 3856,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3783,
									"end": 3857,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3783,
									"end": 3857,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3670,
									"end": 3871,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 3670,
									"end": 3871,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3917,
									"end": 3918,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3901,
									"end": 3915,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3901,
									"end": 3915,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3901,
									"end": 3915,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3897,
									"end": 3919,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3884,
									"end": 3920,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3884,
									"end": 3920,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2835,
									"end": 4187,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2835,
									"end": 4187,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 2835,
									"end": 4187,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12617,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200081742352af2e3abd4011f4774f2d293f437a0038893442e64e595f146f204564736f6c634300080f0033",
									".code": [
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 12617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2156,
											"end": 2254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2156,
											"end": 2254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4433,
											"end": 4630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5192,
											"end": 5478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3177,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5873,
											"end": 6107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 6107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3408,
											"end": 3533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2367,
											"end": 2469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6594,
											"end": 7021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6594,
											"end": 7021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3729,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3729,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3976,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3976,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2223,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2242,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2235,
											"end": 2247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2235,
											"end": 2247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4586,
											"end": 4593,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4570,
											"end": 4602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4433,
											"end": 4630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5406,
											"end": 5412,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5375,
											"end": 5413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5433,
											"end": 5437,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5423,
											"end": 5450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 6078,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6040,
											"end": 6065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6040,
											"end": 6078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6015,
											"end": 6079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2436,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2448,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6785,
											"end": 6792,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6768,
											"end": 6793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6741,
											"end": 6793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6741,
											"end": 6793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6831,
											"end": 6846,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3224,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3225,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3263,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3234,
											"end": 3264,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3334,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3344,
											"end": 3379,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6931,
											"end": 6936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 6945,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 6981,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6963,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6981,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6922,
											"end": 6982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3881,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3862,
											"end": 3890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3669,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3670,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3706,
											"end": 3740,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3679,
											"end": 3741,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3426,
											"end": 3826,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4033,
											"end": 4035,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4036,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4072,
											"end": 4074,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4075,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4111,
											"end": 4145,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4155,
											"end": 4187,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3831,
											"end": 4229,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10401,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10891,
											"end": 10915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 10928,
											"end": 10933,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10935,
											"end": 10942,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10918,
											"end": 10927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 10918,
											"end": 10943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10891,
											"end": 10943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10891,
											"end": 10943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10957,
											"end": 10973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10957,
											"end": 10994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11038,
											"end": 11044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11044,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4436,
											"end": 4438,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4439,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4475,
											"end": 4477,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4448,
											"end": 4478,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4514,
											"end": 4545,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4546,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4234,
											"end": 4587,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11129,
											"end": 11134,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11136,
											"end": 11143,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11164,
											"end": 11170,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11161,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11170,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11120,
											"end": 11171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10881,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4794,
											"end": 4796,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4776,
											"end": 4797,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4835,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4872,
											"end": 4906,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4845,
											"end": 4907,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4951,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4592,
											"end": 4993,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5200,
											"end": 5202,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5182,
											"end": 5203,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5239,
											"end": 5241,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5242,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5278,
											"end": 5312,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5251,
											"end": 5313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5322,
											"end": 5355,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4998,
											"end": 5397,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7795,
											"end": 7814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5604,
											"end": 5606,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5643,
											"end": 5645,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5616,
											"end": 5646,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5682,
											"end": 5716,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5655,
											"end": 5717,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5726,
											"end": 5762,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5402,
											"end": 5804,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8006,
											"end": 8029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8060,
											"end": 8062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8054,
											"end": 8058,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8064,
											"end": 8070,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8082,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11786,
											"end": 11907,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 616,
											"end": 789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 962,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1612,
											"end": 1641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1660,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2100,
											"end": 2129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2129,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2266,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2244,
											"end": 2267,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2272,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2308,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2356,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2607,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2658,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2621,
											"end": 2659,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2696,
											"end": 2699,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2692,
											"end": 2712,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2690,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2713,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2741,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2769,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2833,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2863,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2864,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2916,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2901,
											"end": 2904,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2897,
											"end": 2917,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2894,
											"end": 2895,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2918,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2941,
											"end": 2945,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 2938,
											"end": 2939,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2931,
											"end": 2946,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 2973,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2966,
											"end": 2967,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2790,
											"end": 3015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Contracts/AccesPolygon.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a461faa24898f6e76d76a0cc97ab56fe15bf01ca5bf802e1e1370fae74901f6e64736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a461faa24898f6e76d76a0cc97ab56fe15bf01ca5bf802e1e1370fae74901f6e64736f6c634300080f0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 PUSH2 0xFAA2 BASEFEE SWAP9 0xF6 0xE7 PUSH14 0x76A0CC97AB56FE15BF01CA5BF802 0xE1 0xE1 CALLDATACOPY 0xF 0xAE PUSH21 0x901F6E64736F6C634300080F003300000000000000 ",
							"sourceMap": "482:6300:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a461faa24898f6e76d76a0cc97ab56fe15bf01ca5bf802e1e1370fae74901f6e64736f6c634300080f0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 PUSH2 0xFAA2 BASEFEE SWAP9 0xF6 0xE7 PUSH14 0x76A0CC97AB56FE15BF01CA5BF802 0xE1 0xE1 CALLDATACOPY 0xF 0xAE PUSH21 0x901F6E64736F6C634300080F003300000000000000 ",
							"sourceMap": "482:6300:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a461faa24898f6e76d76a0cc97ab56fe15bf01ca5bf802e1e1370fae74901f6e64736f6c634300080f0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Contracts/AccesPolygon.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Contracts/AccesPolygon.sol": {
				"MetaccesPolygon": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_bridge",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newLimit",
									"type": "uint256"
								}
							],
							"name": "PrivateLimit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "Amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "Price",
									"type": "uint256"
								}
							],
							"name": "PrivateSale",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_bridge",
									"type": "address"
								}
							],
							"name": "SetBridge",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "decimal",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "WithdrawalBNB",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_tokenAddr",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "decimals",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "WithdrawalToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "Min",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "Max",
									"type": "uint256"
								}
							],
							"name": "minMax",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "Time",
									"type": "uint256"
								}
							],
							"name": "saleEnded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "saleStarted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bridge",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "minAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxAmount",
									"type": "uint256"
								}
							],
							"name": "changeMinMaxPrivateSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "max",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "min",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "privateLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "privateSale",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_bridge",
									"type": "address"
								}
							],
							"name": "setBridge",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_limit",
									"type": "uint256"
								}
							],
							"name": "setPrivateLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_sEBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_sPrice",
									"type": "uint256"
								}
							],
							"name": "startSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "viewSale",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "StartBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "EndBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "SaleCount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "SalePrice",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "decimal",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "withdrawalBNB",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "decimal",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "withdrawalToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Only callable by account with access (gateway role)"
							},
							"burnFrom(address,uint256)": {
								"details": "Only callable by account with access (gateway role)"
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"mint(address,uint256)": {
								"details": "Only callable by account with access (gateway role)"
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/AccesPolygon.sol\":251:5053  contract MetaccesPolygon is ERC20, ERC20Burnable {... */\n  mstore(0x40, 0x80)\n    /* \"Contracts/AccesPolygon.sol\":523:538  10** decimals() */\n  tag_3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3175:3177  18 */\n  0x12\n    /* \"Contracts/AccesPolygon.sol\":523:525  10 */\n  0x0a\n    /* \"Contracts/AccesPolygon.sol\":523:538  10** decimals() */\n  tag_4\n  jump\t// in\ntag_3:\n    /* \"Contracts/AccesPolygon.sol\":499:538  uint256 internal path = 10** decimals() */\n  0x0b\n  dup2\n  swap1\n  sstore\n    /* \"Contracts/AccesPolygon.sol\":565:574  20 * path */\n  tag_5\n  swap1\n    /* \"Contracts/AccesPolygon.sol\":565:567  20 */\n  0x14\n    /* \"Contracts/AccesPolygon.sol\":565:574  20 * path */\n  tag_6\n  jump\t// in\ntag_5:\n    /* \"Contracts/AccesPolygon.sol\":544:574  uint256 public max = 20 * path */\n  0x0c\n  sstore\n    /* \"Contracts/AccesPolygon.sol\":601:613  max.div(100) */\n  tag_7\n    /* \"Contracts/AccesPolygon.sol\":609:612  100 */\n  0x64\n    /* \"Contracts/AccesPolygon.sol\":601:604  max */\n  sload(0x0c)\n    /* \"Contracts/AccesPolygon.sol\":601:608  max.div */\n  or(tag_0_172, shl(0x20, tag_8))\n  swap1\n    /* \"Contracts/AccesPolygon.sol\":601:613  max.div(100) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"Contracts/AccesPolygon.sol\":580:613  uint256 public min = max.div(100) */\n  0x0d\n  sstore\n    /* \"Contracts/AccesPolygon.sol\":649:656  1000000 */\n  0x0f4240\n    /* \"Contracts/AccesPolygon.sol\":619:656  uint256 public privateLimit = 1000000 */\n  0x0e\n  sstore\n    /* \"Contracts/AccesPolygon.sol\":1270:1466  constructor (address _bridge) ERC20(\"Metacces\", \"Acces\") payable {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_9\n  swap2\n  tag_10\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc0, 0x4d65746163636573)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xd8, 0x4163636573)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2052:2057  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2049  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  swap1\n  dup2\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  tag_16\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2077:2084  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  tag_15\n  jump\t// in\ntag_16:\n  pop\n  pop\n    /* \"Contracts/AccesPolygon.sol\":1341:1346  owner */\n  0x05\n    /* \"Contracts/AccesPolygon.sol\":1341:1359  owner = msg.sender */\n  dup1\n  sload\n    /* \"Contracts/AccesPolygon.sol\":1349:1359  msg.sender */\n  caller\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"Contracts/AccesPolygon.sol\":1341:1359  owner = msg.sender */\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"Contracts/AccesPolygon.sol\":1365:1371  bridge */\n  0x06\n    /* \"Contracts/AccesPolygon.sol\":1365:1381  bridge = _bridge */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  and\n  or\n  swap1\n  sstore\n  pop\n    /* \"Contracts/AccesPolygon.sol\":1422:1426  path */\n  sload(0x0b)\n    /* \"Contracts/AccesPolygon.sol\":1388:1427  _mint (address(this), 100000000 * path) */\n  tag_18\n  swap1\n    /* \"Contracts/AccesPolygon.sol\":1403:1407  this */\n  address\n  swap1\n    /* \"Contracts/AccesPolygon.sol\":1410:1426  100000000 * path */\n  tag_19\n  swap1\n    /* \"Contracts/AccesPolygon.sol\":1410:1419  100000000 */\n  0x05f5e100\n    /* \"Contracts/AccesPolygon.sol\":1410:1426  100000000 * path */\n  tag_6\n  jump\t// in\ntag_19:\n    /* \"Contracts/AccesPolygon.sol\":1388:1393  _mint */\n  tag_20\n    /* \"Contracts/AccesPolygon.sol\":1388:1427  _mint (address(this), 100000000 * path) */\n  jump\t// in\ntag_18:\n    /* \"Contracts/AccesPolygon.sol\":1270:1466  constructor (address _bridge) ERC20(\"Metacces\", \"Acces\") payable {... */\n  pop\n    /* \"Contracts/AccesPolygon.sol\":251:5053  contract MetaccesPolygon is ERC20, ERC20Burnable {... */\n  jump(tag_49)\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n  tag_24\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n  dup3\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n  dup5\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_23:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8402:8791  function _mint(address account, uint256 amount) internal virtual {... */\ntag_20:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8485:8506  account != address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8477:8542  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_27\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":5142:5144   */\n  0x20\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8477:8542  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5124:5145   */\n  mstore\n    /* \"#utility.yul\":5181:5183   */\n  0x1f\n    /* \"#utility.yul\":5161:5179   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":5154:5184   */\n  mstore\n    /* \"#utility.yul\":5220:5253   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":5200:5218   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5193:5254   */\n  mstore\n    /* \"#utility.yul\":5271:5289   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8477:8542  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_27:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8629:8635  amount */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8613:8625  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8613:8635  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_32\n  swap2\n  swap1\n  tag_33\n  jump\t// in\ntag_32:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8663  _balances[account] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8654  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8663  _balances[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8673  _balances[account] += amount */\n  dup1\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8667:8673  amount */\n  dup4\n  swap3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8654  _balances */\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8673  _balances[account] += amount */\n  tag_34\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8667:8673  amount */\n  dup5\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8673  _balances[account] += amount */\n  tag_33\n  jump\t// in\ntag_34:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n  mload(0x40)\n    /* \"#utility.yul\":5579:5604   */\n  dup2\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n  dup4\n  and\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8705:8706  0 */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":5567:5569   */\n  0x20\n    /* \"#utility.yul\":5552:5570   */\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8402:8791  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11786:11907  function _beforeTokenTransfer(... */\ntag_31:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_41:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x11\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:568   */\ntag_42:\n    /* \"#utility.yul\":235:236   */\n  0x01\n    /* \"#utility.yul\":278:283   */\n  dup2\n    /* \"#utility.yul\":235:236   */\n  dup2\n    /* \"#utility.yul\":292:562   */\ntag_52:\n    /* \"#utility.yul\":313:320   */\n  dup1\n    /* \"#utility.yul\":303:311   */\n  dup6\n    /* \"#utility.yul\":300:321   */\n  gt\n    /* \"#utility.yul\":292:562   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":372:376   */\n  dup2\n    /* \"#utility.yul\":368:369   */\n  0x00\n    /* \"#utility.yul\":364:370   */\n  not\n    /* \"#utility.yul\":360:377   */\n  div\n    /* \"#utility.yul\":354:358   */\n  dup3\n    /* \"#utility.yul\":351:378   */\n  gt\n    /* \"#utility.yul\":348:401   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":381:399   */\n  tag_56\n  tag_41\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":431:438   */\n  dup1\n    /* \"#utility.yul\":421:429   */\n  dup6\n    /* \"#utility.yul\":417:439   */\n  and\n    /* \"#utility.yul\":414:469   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":451:467   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":414:469   */\ntag_57:\n    /* \"#utility.yul\":530:552   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":490:505   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":292:562   */\n  jump(tag_52)\ntag_54:\n    /* \"#utility.yul\":296:299   */\n  pop\n    /* \"#utility.yul\":146:568   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":573:1379   */\ntag_43:\n    /* \"#utility.yul\":622:627   */\n  0x00\n    /* \"#utility.yul\":652:660   */\n  dup3\n    /* \"#utility.yul\":642:722   */\n  tag_59\n  jumpi\n  pop\n    /* \"#utility.yul\":693:694   */\n  0x01\n    /* \"#utility.yul\":707:712   */\n  jump(tag_23)\n    /* \"#utility.yul\":642:722   */\ntag_59:\n    /* \"#utility.yul\":741:745   */\n  dup2\n    /* \"#utility.yul\":731:807   */\n  tag_60\n  jumpi\n  pop\n    /* \"#utility.yul\":778:779   */\n  0x00\n    /* \"#utility.yul\":792:797   */\n  jump(tag_23)\n    /* \"#utility.yul\":731:807   */\ntag_60:\n    /* \"#utility.yul\":823:827   */\n  dup2\n    /* \"#utility.yul\":841:842   */\n  0x01\n    /* \"#utility.yul\":836:895   */\n  dup2\n  eq\n  tag_62\n  jumpi\n    /* \"#utility.yul\":909:910   */\n  0x02\n    /* \"#utility.yul\":904:1034   */\n  dup2\n  eq\n  tag_63\n  jumpi\n    /* \"#utility.yul\":816:1034   */\n  jump(tag_61)\n    /* \"#utility.yul\":836:895   */\ntag_62:\n    /* \"#utility.yul\":866:867   */\n  0x01\n    /* \"#utility.yul\":857:867   */\n  swap2\n  pop\n    /* \"#utility.yul\":880:885   */\n  pop\n  jump(tag_23)\n    /* \"#utility.yul\":904:1034   */\ntag_63:\n    /* \"#utility.yul\":941:944   */\n  0xff\n    /* \"#utility.yul\":931:939   */\n  dup5\n    /* \"#utility.yul\":928:945   */\n  gt\n    /* \"#utility.yul\":925:968   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":948:966   */\n  tag_65\n  tag_41\n  jump\t// in\ntag_65:\n  pop\n  pop\n    /* \"#utility.yul\":1004:1005   */\n  0x01\n    /* \"#utility.yul\":990:1006   */\n  dup3\n  shl\n    /* \"#utility.yul\":1019:1024   */\n  jump(tag_23)\n    /* \"#utility.yul\":816:1034   */\ntag_61:\n  pop\n    /* \"#utility.yul\":1118:1120   */\n  0x20\n    /* \"#utility.yul\":1108:1116   */\n  dup4\n    /* \"#utility.yul\":1105:1121   */\n  lt\n    /* \"#utility.yul\":1099:1102   */\n  0x0133\n    /* \"#utility.yul\":1093:1097   */\n  dup4\n    /* \"#utility.yul\":1090:1103   */\n  lt\n    /* \"#utility.yul\":1086:1122   */\n  and\n    /* \"#utility.yul\":1080:1082   */\n  0x4e\n    /* \"#utility.yul\":1070:1078   */\n  dup5\n    /* \"#utility.yul\":1067:1083   */\n  lt\n    /* \"#utility.yul\":1062:1064   */\n  0x0b\n    /* \"#utility.yul\":1056:1060   */\n  dup5\n    /* \"#utility.yul\":1053:1065   */\n  lt\n    /* \"#utility.yul\":1049:1084   */\n  and\n    /* \"#utility.yul\":1046:1123   */\n  or\n    /* \"#utility.yul\":1043:1202   */\n  iszero\n  tag_66\n  jumpi\n  pop\n    /* \"#utility.yul\":1155:1174   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":1187:1192   */\n  jump(tag_23)\n    /* \"#utility.yul\":1043:1202   */\ntag_66:\n    /* \"#utility.yul\":1234:1268   */\n  tag_67\n    /* \"#utility.yul\":1259:1267   */\n  dup4\n    /* \"#utility.yul\":1253:1257   */\n  dup4\n    /* \"#utility.yul\":1234:1268   */\n  tag_42\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1304:1310   */\n  dup1\n    /* \"#utility.yul\":1300:1301   */\n  0x00\n    /* \"#utility.yul\":1296:1302   */\n  not\n    /* \"#utility.yul\":1292:1311   */\n  div\n    /* \"#utility.yul\":1283:1290   */\n  dup3\n    /* \"#utility.yul\":1280:1312   */\n  gt\n    /* \"#utility.yul\":1277:1335   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1315:1333   */\n  tag_69\n  tag_41\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1353:1373   */\n  mul\n  swap4\n    /* \"#utility.yul\":573:1379   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1384:1524   */\ntag_4:\n    /* \"#utility.yul\":1442:1447   */\n  0x00\n    /* \"#utility.yul\":1471:1518   */\n  tag_24\n    /* \"#utility.yul\":1512:1516   */\n  0xff\n    /* \"#utility.yul\":1502:1510   */\n  dup5\n    /* \"#utility.yul\":1498:1517   */\n  and\n    /* \"#utility.yul\":1492:1496   */\n  dup4\n    /* \"#utility.yul\":1471:1518   */\n  tag_43\n  jump\t// in\n    /* \"#utility.yul\":1529:1697   */\ntag_6:\n    /* \"#utility.yul\":1569:1576   */\n  0x00\n    /* \"#utility.yul\":1635:1636   */\n  dup2\n    /* \"#utility.yul\":1631:1632   */\n  0x00\n    /* \"#utility.yul\":1627:1633   */\n  not\n    /* \"#utility.yul\":1623:1637   */\n  div\n    /* \"#utility.yul\":1620:1621   */\n  dup4\n    /* \"#utility.yul\":1617:1638   */\n  gt\n    /* \"#utility.yul\":1612:1613   */\n  dup3\n    /* \"#utility.yul\":1605:1614   */\n  iszero\n    /* \"#utility.yul\":1598:1615   */\n  iszero\n    /* \"#utility.yul\":1594:1639   */\n  and\n    /* \"#utility.yul\":1591:1662   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":1642:1660   */\n  tag_74\n  tag_41\n  jump\t// in\ntag_74:\n  pop\n    /* \"#utility.yul\":1682:1691   */\n  mul\n  swap1\n    /* \"#utility.yul\":1529:1697   */\n  jump\t// out\n    /* \"#utility.yul\":1702:1992   */\ntag_10:\n    /* \"#utility.yul\":1772:1778   */\n  0x00\n    /* \"#utility.yul\":1825:1827   */\n  0x20\n    /* \"#utility.yul\":1813:1822   */\n  dup3\n    /* \"#utility.yul\":1804:1811   */\n  dup5\n    /* \"#utility.yul\":1800:1823   */\n  sub\n    /* \"#utility.yul\":1796:1828   */\n  slt\n    /* \"#utility.yul\":1793:1845   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":1841:1842   */\n  0x00\n    /* \"#utility.yul\":1838:1839   */\n  dup1\n    /* \"#utility.yul\":1831:1843   */\n  revert\n    /* \"#utility.yul\":1793:1845   */\ntag_76:\n    /* \"#utility.yul\":1867:1883   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1912:1943   */\n  dup2\n  and\n    /* \"#utility.yul\":1902:1944   */\n  dup2\n  eq\n    /* \"#utility.yul\":1892:1962   */\n  tag_77\n  jumpi\n    /* \"#utility.yul\":1958:1959   */\n  0x00\n    /* \"#utility.yul\":1955:1956   */\n  dup1\n    /* \"#utility.yul\":1948:1960   */\n  revert\n    /* \"#utility.yul\":1892:1962   */\ntag_77:\n    /* \"#utility.yul\":1981:1986   */\n  swap4\n    /* \"#utility.yul\":1702:1992   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1997:2124   */\ntag_44:\n    /* \"#utility.yul\":2058:2068   */\n  0x4e487b71\n    /* \"#utility.yul\":2053:2056   */\n  0xe0\n    /* \"#utility.yul\":2049:2069   */\n  shl\n    /* \"#utility.yul\":2046:2047   */\n  0x00\n    /* \"#utility.yul\":2039:2070   */\n  mstore\n    /* \"#utility.yul\":2089:2093   */\n  0x41\n    /* \"#utility.yul\":2086:2087   */\n  0x04\n    /* \"#utility.yul\":2079:2094   */\n  mstore\n    /* \"#utility.yul\":2113:2117   */\n  0x24\n    /* \"#utility.yul\":2110:2111   */\n  0x00\n    /* \"#utility.yul\":2103:2118   */\n  revert\n    /* \"#utility.yul\":2129:2509   */\ntag_45:\n    /* \"#utility.yul\":2208:2209   */\n  0x01\n    /* \"#utility.yul\":2204:2216   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":2251:2263   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2272:2333   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":2326:2330   */\n  0x7f\n    /* \"#utility.yul\":2318:2324   */\n  dup3\n    /* \"#utility.yul\":2314:2331   */\n  and\n    /* \"#utility.yul\":2304:2331   */\n  swap2\n  pop\n    /* \"#utility.yul\":2272:2333   */\ntag_80:\n    /* \"#utility.yul\":2379:2381   */\n  0x20\n    /* \"#utility.yul\":2371:2377   */\n  dup3\n    /* \"#utility.yul\":2368:2382   */\n  lt\n    /* \"#utility.yul\":2348:2366   */\n  dup2\n    /* \"#utility.yul\":2345:2383   */\n  sub\n    /* \"#utility.yul\":2342:2503   */\n  tag_81\n  jumpi\n    /* \"#utility.yul\":2425:2435   */\n  0x4e487b71\n    /* \"#utility.yul\":2420:2423   */\n  0xe0\n    /* \"#utility.yul\":2416:2436   */\n  shl\n    /* \"#utility.yul\":2413:2414   */\n  0x00\n    /* \"#utility.yul\":2406:2437   */\n  mstore\n    /* \"#utility.yul\":2460:2464   */\n  0x22\n    /* \"#utility.yul\":2457:2458   */\n  0x04\n    /* \"#utility.yul\":2450:2465   */\n  mstore\n    /* \"#utility.yul\":2488:2492   */\n  0x24\n    /* \"#utility.yul\":2485:2486   */\n  0x00\n    /* \"#utility.yul\":2478:2493   */\n  revert\n    /* \"#utility.yul\":2342:2503   */\ntag_81:\n  pop\n    /* \"#utility.yul\":2129:2509   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2640:3185   */\ntag_47:\n    /* \"#utility.yul\":2742:2744   */\n  0x1f\n    /* \"#utility.yul\":2737:2740   */\n  dup3\n    /* \"#utility.yul\":2734:2745   */\n  gt\n    /* \"#utility.yul\":2731:3179   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":2778:2779   */\n  0x00\n    /* \"#utility.yul\":2803:2808   */\n  dup2\n    /* \"#utility.yul\":2799:2801   */\n  dup2\n    /* \"#utility.yul\":2792:2809   */\n  mstore\n    /* \"#utility.yul\":2848:2852   */\n  0x20\n    /* \"#utility.yul\":2844:2846   */\n  dup2\n    /* \"#utility.yul\":2834:2853   */\n  keccak256\n    /* \"#utility.yul\":2918:2920   */\n  0x1f\n    /* \"#utility.yul\":2906:2916   */\n  dup6\n    /* \"#utility.yul\":2902:2921   */\n  add\n    /* \"#utility.yul\":2899:2900   */\n  0x05\n    /* \"#utility.yul\":2895:2922   */\n  shr\n    /* \"#utility.yul\":2889:2893   */\n  dup2\n    /* \"#utility.yul\":2885:2923   */\n  add\n    /* \"#utility.yul\":2954:2958   */\n  0x20\n    /* \"#utility.yul\":2942:2952   */\n  dup7\n    /* \"#utility.yul\":2939:2959   */\n  lt\n    /* \"#utility.yul\":2936:2983   */\n  iszero\n  tag_85\n  jumpi\n  pop\n    /* \"#utility.yul\":2977:2981   */\n  dup1\n    /* \"#utility.yul\":2936:2983   */\ntag_85:\n    /* \"#utility.yul\":3032:3034   */\n  0x1f\n    /* \"#utility.yul\":3027:3030   */\n  dup6\n    /* \"#utility.yul\":3023:3035   */\n  add\n    /* \"#utility.yul\":3020:3021   */\n  0x05\n    /* \"#utility.yul\":3016:3036   */\n  shr\n    /* \"#utility.yul\":3010:3014   */\n  dup3\n    /* \"#utility.yul\":3006:3037   */\n  add\n    /* \"#utility.yul\":2996:3037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3087:3169   */\ntag_86:\n    /* \"#utility.yul\":3105:3107   */\n  dup2\n    /* \"#utility.yul\":3098:3103   */\n  dup2\n    /* \"#utility.yul\":3095:3108   */\n  lt\n    /* \"#utility.yul\":3087:3169   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":3150:3167   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":3131:3132   */\n  0x01\n    /* \"#utility.yul\":3120:3133   */\n  add\n    /* \"#utility.yul\":3087:3169   */\n  jump(tag_86)\ntag_88:\n    /* \"#utility.yul\":3091:3094   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2640:3185   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3361:4713   */\ntag_15:\n    /* \"#utility.yul\":3481:3491   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3503:3533   */\n  dup2\n  gt\n    /* \"#utility.yul\":3500:3556   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":3536:3554   */\n  tag_92\n  tag_44\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3565:3662   */\n  tag_93\n    /* \"#utility.yul\":3655:3661   */\n  dup2\n    /* \"#utility.yul\":3615:3653   */\n  tag_94\n    /* \"#utility.yul\":3647:3651   */\n  dup5\n    /* \"#utility.yul\":3641:3652   */\n  sload\n    /* \"#utility.yul\":3615:3653   */\n  tag_45\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":3609:3613   */\n  dup5\n    /* \"#utility.yul\":3565:3662   */\n  tag_47\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3717:3721   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3781:3783   */\n  0x1f\n    /* \"#utility.yul\":3770:3784   */\n  dup4\n  gt\n    /* \"#utility.yul\":3798:3799   */\n  0x01\n    /* \"#utility.yul\":3793:4456   */\n  dup2\n  eq\n  tag_96\n  jumpi\n    /* \"#utility.yul\":4500:4501   */\n  0x00\n    /* \"#utility.yul\":4517:4523   */\n  dup5\n    /* \"#utility.yul\":4514:4603   */\n  iszero\n  tag_97\n  jumpi\n  pop\n    /* \"#utility.yul\":4569:4588   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":4563:4589   */\n  mload\n    /* \"#utility.yul\":4514:4603   */\ntag_97:\n  not(0x00)\n    /* \"#utility.yul\":3318:3319   */\n  0x03\n    /* \"#utility.yul\":3314:3325   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":3310:3334   */\n  shr\n    /* \"#utility.yul\":3306:3335   */\n  not\n    /* \"#utility.yul\":3296:3336   */\n  and\n    /* \"#utility.yul\":3342:3343   */\n  0x01\n    /* \"#utility.yul\":3338:3349   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":3293:3350   */\n  or\n    /* \"#utility.yul\":4616:4697   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3763:4707   */\n  jump(tag_88)\n    /* \"#utility.yul\":3793:4456   */\ntag_96:\n    /* \"#utility.yul\":2587:2588   */\n  0x00\n    /* \"#utility.yul\":2580:2594   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2624:2628   */\n  0x20\n    /* \"#utility.yul\":2611:2629   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3829:3849   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3947:4183   */\ntag_100:\n    /* \"#utility.yul\":3961:3968   */\n  dup3\n    /* \"#utility.yul\":3958:3959   */\n  dup2\n    /* \"#utility.yul\":3955:3969   */\n  lt\n    /* \"#utility.yul\":3947:4183   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":4050:4069   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":4044:4070   */\n  mload\n    /* \"#utility.yul\":4029:4071   */\n  dup3\n  sstore\n    /* \"#utility.yul\":4142:4169   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":4110:4111   */\n  0x01\n    /* \"#utility.yul\":4098:4112   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3977:3996   */\n  dup5\n  add\n    /* \"#utility.yul\":3947:4183   */\n  jump(tag_100)\ntag_102:\n    /* \"#utility.yul\":3951:3954   */\n  pop\n    /* \"#utility.yul\":4211:4217   */\n  dup6\n    /* \"#utility.yul\":4202:4209   */\n  dup3\n    /* \"#utility.yul\":4199:4218   */\n  lt\n    /* \"#utility.yul\":4196:4397   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":4272:4291   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":4266:4292   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":4355:4356   */\n  0x03\n    /* \"#utility.yul\":4351:4365   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":4367:4370   */\n  0xf8\n    /* \"#utility.yul\":4347:4371   */\n  and\n    /* \"#utility.yul\":4343:4380   */\n  shr\n    /* \"#utility.yul\":4339:4381   */\n  not\n    /* \"#utility.yul\":4324:4382   */\n  and\n    /* \"#utility.yul\":4309:4383   */\n  dup2\n  sstore\n    /* \"#utility.yul\":4196:4397   */\ntag_103:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4443:4444   */\n  0x01\n    /* \"#utility.yul\":4427:4441   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":4423:4445   */\n  add\n    /* \"#utility.yul\":4410:4446   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":3361:4713   */\n  jump\t// out\n    /* \"#utility.yul\":4718:4935   */\ntag_25:\n    /* \"#utility.yul\":4758:4759   */\n  0x00\n    /* \"#utility.yul\":4784:4785   */\n  dup3\n    /* \"#utility.yul\":4774:4906   */\n  tag_105\n  jumpi\n    /* \"#utility.yul\":4828:4838   */\n  0x4e487b71\n    /* \"#utility.yul\":4823:4826   */\n  0xe0\n    /* \"#utility.yul\":4819:4839   */\n  shl\n    /* \"#utility.yul\":4816:4817   */\n  0x00\n    /* \"#utility.yul\":4809:4840   */\n  mstore\n    /* \"#utility.yul\":4863:4867   */\n  0x12\n    /* \"#utility.yul\":4860:4861   */\n  0x04\n    /* \"#utility.yul\":4853:4868   */\n  mstore\n    /* \"#utility.yul\":4891:4895   */\n  0x24\n    /* \"#utility.yul\":4888:4889   */\n  0x00\n    /* \"#utility.yul\":4881:4896   */\n  revert\n    /* \"#utility.yul\":4774:4906   */\ntag_105:\n  pop\n    /* \"#utility.yul\":4920:4929   */\n  div\n  swap1\n    /* \"#utility.yul\":4718:4935   */\n  jump\t// out\n    /* \"#utility.yul\":5300:5428   */\ntag_33:\n    /* \"#utility.yul\":5340:5343   */\n  0x00\n    /* \"#utility.yul\":5371:5372   */\n  dup3\n    /* \"#utility.yul\":5367:5373   */\n  not\n    /* \"#utility.yul\":5364:5365   */\n  dup3\n    /* \"#utility.yul\":5361:5374   */\n  gt\n    /* \"#utility.yul\":5358:5397   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":5377:5395   */\n  tag_109\n  tag_41\n  jump\t// in\ntag_109:\n  pop\n    /* \"#utility.yul\":5413:5422   */\n  add\n  swap1\n    /* \"#utility.yul\":5300:5428   */\n  jump\t// out\n    /* \"#utility.yul\":5433:5610   */\ntag_49:\n    /* \"Contracts/AccesPolygon.sol\":251:5053  contract MetaccesPolygon is ERC20, ERC20Burnable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/AccesPolygon.sol\":251:5053  contract MetaccesPolygon is ERC20, ERC20Burnable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79cc6790\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xe7d53fcb\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xe7d53fcb\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf4f3122e\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf8897945\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0xdd62ed3e\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe181203a\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xe78cea92\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0xa457c2d7\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xadbc7cee\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xb2938bee\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x79cc6790\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8dd14802\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x3c3b7995\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x4d1d03d1\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x4d1d03d1\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x534b1442\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6ac5db19\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x3c3b7995\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x23b872dd\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x380d831b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_43\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_53:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_43\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_46\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3175:3177  18 */\n      0x12\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n      tag_43\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"Contracts/AccesPolygon.sol\":2634:2752  function endSale () public onlyOwner{... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_46\n      tag_73\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"Contracts/AccesPolygon.sol\":619:656  uint256 public privateLimit = 1000000 */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_53\n      sload(0x0e)\n      dup2\n      jump\n        /* \"Contracts/AccesPolygon.sol\":4089:4263  function mint(... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_69\n      tag_82\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n        /* \"Contracts/AccesPolygon.sol\":4379:4552  function burn(... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_69\n      tag_86\n      calldatasize\n      0x04\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n        /* \"Contracts/AccesPolygon.sol\":2286:2451  function viewSale() public view returns(uint256 StartBlock, uint256 EndBlock, uint256 SaleCount, uint256 SalePrice){... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n        /* \"Contracts/AccesPolygon.sol\":2414:2421  sSBlock */\n      sload(0x07)\n        /* \"Contracts/AccesPolygon.sol\":2423:2430  sEBlock */\n      sload(0x08)\n        /* \"Contracts/AccesPolygon.sol\":2432:2436  sTot */\n      sload(0x09)\n        /* \"Contracts/AccesPolygon.sol\":2439:2445  sPrice */\n      sload(0x0a)\n        /* \"Contracts/AccesPolygon.sol\":2286:2451  function viewSale() public view returns(uint256 StartBlock, uint256 EndBlock, uint256 SaleCount, uint256 SalePrice){... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2365:2390   */\n      swap5\n      dup6\n      mstore\n        /* \"#utility.yul\":2421:2423   */\n      0x20\n        /* \"#utility.yul\":2406:2424   */\n      dup6\n      add\n        /* \"#utility.yul\":2399:2433   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":2449:2467   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":2442:2476   */\n      mstore\n        /* \"#utility.yul\":2507:2509   */\n      0x60\n        /* \"#utility.yul\":2492:2510   */\n      dup3\n      add\n        /* \"#utility.yul\":2485:2519   */\n      mstore\n        /* \"#utility.yul\":2352:2355   */\n      0x80\n        /* \"#utility.yul\":2337:2356   */\n      add\n        /* \"Contracts/AccesPolygon.sol\":2286:2451  function viewSale() public view returns(uint256 StartBlock, uint256 EndBlock, uint256 SaleCount, uint256 SalePrice){... */\n      tag_43\n        /* \"#utility.yul\":2134:2525   */\n      jump\n        /* \"Contracts/AccesPolygon.sol\":3005:3170  function setPrivateLimit (uint256 _limit) external onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_69\n      tag_96\n      calldatasize\n      0x04\n      tag_87\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n        /* \"Contracts/AccesPolygon.sol\":544:574  uint256 public max = 20 * path */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_53\n      sload(0x0c)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_53\n      tag_104\n      calldatasize\n      0x04\n      tag_105\n      jump\t// in\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3489  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"Contracts/AccesPolygon.sol\":4668:4883  function burnFrom(... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_69\n      tag_110\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n        /* \"Contracts/AccesPolygon.sol\":3834:4005  function setBridge(address _bridge) onlyOwner public {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      tag_69\n      tag_114\n      calldatasize\n      0x04\n      tag_105\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_41\n      tag_118\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      tag_46\n      tag_122\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      tag_46\n      tag_127\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n        /* \"Contracts/AccesPolygon.sol\":3544:3830  function withdrawalBNB(uint256 _amount, uint256 decimal, address to) external onlyOwner() {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_69\n      tag_132\n      calldatasize\n      0x04\n      tag_133\n      jump\t// in\n    tag_132:\n      tag_134\n      jump\t// in\n        /* \"Contracts/AccesPolygon.sol\":3174:3536  function withdrawalToken(address _tokenAddr, uint256 _amount, uint256 decimal, address to) external onlyOwner() {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_69\n      tag_137\n      calldatasize\n      0x04\n      tag_138\n      jump\t// in\n    tag_137:\n      tag_139\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      tag_53\n      tag_142\n      calldatasize\n      0x04\n      tag_143\n      jump\t// in\n    tag_142:\n      tag_144\n      jump\t// in\n        /* \"Contracts/AccesPolygon.sol\":2756:3001  function changeMinMaxPrivateSale(uint256 minAmount, uint256 maxAmount) external onlyOwner {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      tag_69\n      tag_148\n      calldatasize\n      0x04\n      tag_149\n      jump\t// in\n    tag_148:\n      tag_150\n      jump\t// in\n        /* \"Contracts/AccesPolygon.sol\":365:386  address public bridge */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      sload(0x06)\n      tag_152\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_152:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4132:4164   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4114:4165   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4102:4104   */\n      0x20\n        /* \"#utility.yul\":4087:4105   */\n      add\n        /* \"Contracts/AccesPolygon.sol\":365:386  address public bridge */\n      tag_43\n        /* \"#utility.yul\":3968:4171   */\n      jump\n        /* \"Contracts/AccesPolygon.sol\":1680:2282  function privateSale(address) public payable returns (bool success){... */\n    tag_27:\n      tag_46\n      tag_157\n      calldatasize\n      0x04\n      tag_105\n      jump\t// in\n    tag_157:\n      tag_158\n      jump\t// in\n        /* \"Contracts/AccesPolygon.sol\":1470:1675  function transferOwnership(address _newOwner) external onlyOwner{... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      tag_69\n      tag_162\n      calldatasize\n      0x04\n      tag_105\n      jump\t// in\n    tag_162:\n      tag_163\n      jump\t// in\n        /* \"Contracts/AccesPolygon.sol\":2457:2628  function startSale(uint256 _sEBlock, uint256 _sPrice) public onlyOwner{... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n      pop\n      tag_69\n      tag_166\n      calldatasize\n      0x04\n      tag_149\n      jump\t// in\n    tag_166:\n      tag_167\n      jump\t// in\n        /* \"Contracts/AccesPolygon.sol\":580:613  uint256 public min = max.div(100) */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_168\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_168:\n      pop\n      tag_53\n      sload(0x0d)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2210:2223  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2242:2247  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2235:2247  return _name */\n      dup1\n      sload\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_176\n      swap1\n      tag_175\n      jump\t// in\n    tag_176:\n      dup1\n      iszero\n      tag_177\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_178\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_177)\n    tag_178:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_179:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_179\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_177:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4516:4520  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      tag_183\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4586:4593  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4595:4601  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4578  _approve */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4619:4623  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4612:4623  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_180:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5319:5323  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5391:5395  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5406:5412  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5390  _spendAllowance */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5433:5437  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5439:5441  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5443:5449  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5432  _transfer */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      jump\t// in\n    tag_190:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5467:5471  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/AccesPolygon.sol\":2634:2752  function endSale () public onlyOwner{... */\n    tag_70:\n        /* \"Contracts/AccesPolygon.sol\":1222:1227  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"Contracts/AccesPolygon.sol\":1208:1218  msg.sender */\n      caller\n        /* \"Contracts/AccesPolygon.sol\":1208:1227  msg.sender == owner */\n      eq\n        /* \"Contracts/AccesPolygon.sol\":1200:1248  require(msg.sender == owner,\"caller not owner!\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"Contracts/AccesPolygon.sol\":2692:2704  block.number */\n      number\n        /* \"Contracts/AccesPolygon.sol\":2682:2689  sEBlock */\n      0x08\n        /* \"Contracts/AccesPolygon.sol\":2682:2704  sEBlock = block.number */\n      sstore\n        /* \"Contracts/AccesPolygon.sol\":2721:2747  saleEnded(block.timestamp) */\n      mload(0x40)\n        /* \"Contracts/AccesPolygon.sol\":2731:2746  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"Contracts/AccesPolygon.sol\":2721:2747  saleEnded(block.timestamp) */\n      0xb144be0f16f8d30f2e18ef8f7938d5e90207932d96650e592ff47725716818fb\n      swap1\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"Contracts/AccesPolygon.sol\":2721:2747  saleEnded(block.timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Contracts/AccesPolygon.sol\":2634:2752  function endSale () public onlyOwner{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5961:5965  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_183\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6031:6038  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6068:6078  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6065  allowance(owner, spender) */\n      tag_202\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6031:6038  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6049  allowance */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6065  allowance(owner, spender) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6078  allowance(owner, spender) + addedValue */\n      tag_203\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6023  _approve */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"Contracts/AccesPolygon.sol\":4089:4263  function mint(... */\n    tag_83:\n        /* \"Contracts/AccesPolygon.sol\":4939:4945  bridge */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"Contracts/AccesPolygon.sol\":4925:4935  msg.sender */\n      caller\n        /* \"Contracts/AccesPolygon.sol\":4925:4945  msg.sender == bridge */\n      eq\n        /* \"Contracts/AccesPolygon.sol\":4917:5001  require(msg.sender == bridge, \"only bridge has access to this child token function\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_208\n      jump\t// in\n    tag_206:\n        /* \"Contracts/AccesPolygon.sol\":4232:4256  _mint(recipient, amount) */\n      tag_210\n        /* \"Contracts/AccesPolygon.sol\":4238:4247  recipient */\n      dup3\n        /* \"Contracts/AccesPolygon.sol\":4249:4255  amount */\n      dup3\n        /* \"Contracts/AccesPolygon.sol\":4232:4237  _mint */\n      tag_211\n        /* \"Contracts/AccesPolygon.sol\":4232:4256  _mint(recipient, amount) */\n      jump\t// in\n    tag_210:\n        /* \"Contracts/AccesPolygon.sol\":4089:4263  function mint(... */\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/AccesPolygon.sol\":4379:4552  function burn(... */\n    tag_88:\n        /* \"Contracts/AccesPolygon.sol\":4939:4945  bridge */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"Contracts/AccesPolygon.sol\":4925:4935  msg.sender */\n      caller\n        /* \"Contracts/AccesPolygon.sol\":4925:4945  msg.sender == bridge */\n      eq\n        /* \"Contracts/AccesPolygon.sol\":4917:5001  require(msg.sender == bridge, \"only bridge has access to this child token function\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_208\n      jump\t// in\n    tag_213:\n        /* \"Contracts/AccesPolygon.sol\":4527:4545  super.burn(amount) */\n      tag_216\n        /* \"Contracts/AccesPolygon.sol\":4538:4544  amount */\n      dup2\n        /* \"Contracts/AccesPolygon.sol\":4527:4537  super.burn */\n      tag_217\n        /* \"Contracts/AccesPolygon.sol\":4527:4545  super.burn(amount) */\n      jump\t// in\n    tag_216:\n        /* \"Contracts/AccesPolygon.sol\":4379:4552  function burn(... */\n      pop\n      jump\t// out\n        /* \"Contracts/AccesPolygon.sol\":3005:3170  function setPrivateLimit (uint256 _limit) external onlyOwner {... */\n    tag_97:\n        /* \"Contracts/AccesPolygon.sol\":1222:1227  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"Contracts/AccesPolygon.sol\":1208:1218  msg.sender */\n      caller\n        /* \"Contracts/AccesPolygon.sol\":1208:1227  msg.sender == owner */\n      eq\n        /* \"Contracts/AccesPolygon.sol\":1200:1248  require(msg.sender == owner,\"caller not owner!\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_220:\n        /* \"Contracts/AccesPolygon.sol\":3082:3088  _limit */\n      dup1\n        /* \"Contracts/AccesPolygon.sol\":3092:3093  0 */\n      0x00\n        /* \"Contracts/AccesPolygon.sol\":3082:3093  _limit != 0 */\n      sub\n        /* \"Contracts/AccesPolygon.sol\":3074:3103  require(_limit != 0, \"zero!\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5794:5796   */\n      0x20\n        /* \"Contracts/AccesPolygon.sol\":3074:3103  require(_limit != 0, \"zero!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5776:5797   */\n      mstore\n        /* \"#utility.yul\":5833:5834   */\n      0x05\n        /* \"#utility.yul\":5813:5831   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5806:5835   */\n      mstore\n      shl(0xd8, 0x7a65726f21)\n        /* \"#utility.yul\":5851:5869   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5844:5879   */\n      mstore\n        /* \"#utility.yul\":5896:5914   */\n      0x64\n      add\n        /* \"Contracts/AccesPolygon.sol\":3074:3103  require(_limit != 0, \"zero!\") */\n      tag_195\n        /* \"#utility.yul\":5592:5920   */\n      jump\n        /* \"Contracts/AccesPolygon.sol\":3074:3103  require(_limit != 0, \"zero!\") */\n    tag_223:\n        /* \"Contracts/AccesPolygon.sol\":3111:3123  privateLimit */\n      0x0e\n        /* \"Contracts/AccesPolygon.sol\":3111:3132  privateLimit = _limit */\n      dup2\n      swap1\n      sstore\n        /* \"Contracts/AccesPolygon.sol\":3145:3165  PrivateLimit(_limit) */\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      dup2\n      mstore\n        /* \"Contracts/AccesPolygon.sol\":3145:3165  PrivateLimit(_limit) */\n      0x6d487f3988610155b3a9ef590f8ac170134d24e6505b9ddd3160e34abaa0edaf\n      swap1\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"Contracts/AccesPolygon.sol\":3145:3165  PrivateLimit(_limit) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Contracts/AccesPolygon.sol\":3005:3170  function setPrivateLimit (uint256 _limit) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Contracts/AccesPolygon.sol\":4668:4883  function burnFrom(... */\n    tag_111:\n        /* \"Contracts/AccesPolygon.sol\":4939:4945  bridge */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"Contracts/AccesPolygon.sol\":4925:4935  msg.sender */\n      caller\n        /* \"Contracts/AccesPolygon.sol\":4925:4945  msg.sender == bridge */\n      eq\n        /* \"Contracts/AccesPolygon.sol\":4917:5001  require(msg.sender == bridge, \"only bridge has access to this child token function\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_208\n      jump\t// in\n    tag_229:\n        /* \"Contracts/AccesPolygon.sol\":4845:4876  super.burnFrom(account, amount) */\n      tag_210\n        /* \"Contracts/AccesPolygon.sol\":4860:4867  account */\n      dup3\n        /* \"Contracts/AccesPolygon.sol\":4869:4875  amount */\n      dup3\n        /* \"Contracts/AccesPolygon.sol\":4845:4859  super.burnFrom */\n      tag_233\n        /* \"Contracts/AccesPolygon.sol\":4845:4876  super.burnFrom(account, amount) */\n      jump\t// in\n        /* \"Contracts/AccesPolygon.sol\":3834:4005  function setBridge(address _bridge) onlyOwner public {... */\n    tag_115:\n        /* \"Contracts/AccesPolygon.sol\":1222:1227  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"Contracts/AccesPolygon.sol\":1208:1218  msg.sender */\n      caller\n        /* \"Contracts/AccesPolygon.sol\":1208:1227  msg.sender == owner */\n      eq\n        /* \"Contracts/AccesPolygon.sol\":1200:1248  require(msg.sender == owner,\"caller not owner!\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_235:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/AccesPolygon.sol\":3903:3924  _bridge != address(0) */\n      dup2\n      and\n        /* \"Contracts/AccesPolygon.sol\":3895:3941  require(_bridge != address(0),\"zero address!\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6127:6129   */\n      0x20\n        /* \"Contracts/AccesPolygon.sol\":3895:3941  require(_bridge != address(0),\"zero address!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6109:6130   */\n      mstore\n        /* \"#utility.yul\":6166:6168   */\n      0x0d\n        /* \"#utility.yul\":6146:6164   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6139:6169   */\n      mstore\n      shl(0x98, 0x7a65726f206164647265737321)\n        /* \"#utility.yul\":6185:6203   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6178:6221   */\n      mstore\n        /* \"#utility.yul\":6238:6256   */\n      0x64\n      add\n        /* \"Contracts/AccesPolygon.sol\":3895:3941  require(_bridge != address(0),\"zero address!\") */\n      tag_195\n        /* \"#utility.yul\":5925:6262   */\n      jump\n        /* \"Contracts/AccesPolygon.sol\":3895:3941  require(_bridge != address(0),\"zero address!\") */\n    tag_238:\n        /* \"Contracts/AccesPolygon.sol\":3954:3972  SetBridge(_bridge) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4132:4164   */\n      dup3\n      and\n        /* \"#utility.yul\":4114:4165   */\n      dup2\n      mstore\n        /* \"Contracts/AccesPolygon.sol\":3954:3972  SetBridge(_bridge) */\n      0xe605ac02ea219003ec58fc9cf4d4b3c5f2d62ec39807b1c63886ddd47a6fcd6e\n      swap1\n        /* \"#utility.yul\":4102:4104   */\n      0x20\n        /* \"#utility.yul\":4087:4105   */\n      add\n        /* \"Contracts/AccesPolygon.sol\":3954:3972  SetBridge(_bridge) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Contracts/AccesPolygon.sol\":3982:3988  bridge */\n      0x06\n        /* \"Contracts/AccesPolygon.sol\":3982:3998  bridge = _bridge */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Contracts/AccesPolygon.sol\":3834:4005  function setBridge(address _bridge) onlyOwner public {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2423:2436  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2455:2462  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2448:2462  return _symbol */\n      dup1\n      sload\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6768:6793  allowance(owner, spender) */\n      tag_250\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6785:6792  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6768:6777  allowance */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6768:6793  allowance(owner, spender) */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6741:6793  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6831:6846  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6811:6827  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6811:6846  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6469:6471   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6451:6472   */\n      mstore\n        /* \"#utility.yul\":6508:6510   */\n      0x25\n        /* \"#utility.yul\":6488:6506   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6481:6511   */\n      mstore\n        /* \"#utility.yul\":6547:6581   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":6527:6545   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6520:6582   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":6598:6616   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6591:6626   */\n      mstore\n        /* \"#utility.yul\":6643:6662   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_195\n        /* \"#utility.yul\":6267:6668   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6931:6936  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6938:6945  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6966:6981  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6963  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6981  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6930  _approve */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3808:3812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      tag_183\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3879:3881  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3883:3889  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3871  _transfer */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"Contracts/AccesPolygon.sol\":3544:3830  function withdrawalBNB(uint256 _amount, uint256 decimal, address to) external onlyOwner() {... */\n    tag_134:\n        /* \"Contracts/AccesPolygon.sol\":1222:1227  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"Contracts/AccesPolygon.sol\":1208:1218  msg.sender */\n      caller\n        /* \"Contracts/AccesPolygon.sol\":1208:1227  msg.sender == owner */\n      eq\n        /* \"Contracts/AccesPolygon.sol\":1200:1248  require(msg.sender == owner,\"caller not owner!\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_259:\n        /* \"Contracts/AccesPolygon.sol\":3677:3684  _amount */\n      dup3\n        /* \"Contracts/AccesPolygon.sol\":3652:3673  address(this).balance */\n      selfbalance\n        /* \"Contracts/AccesPolygon.sol\":3652:3684  address(this).balance >= _amount */\n      lt\n      iszero\n        /* \"Contracts/AccesPolygon.sol\":3644:3685  require(address(this).balance >= _amount) */\n      tag_262\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_262:\n        /* \"Contracts/AccesPolygon.sol\":3695:3707  uint256 dcml */\n      0x00\n        /* \"Contracts/AccesPolygon.sol\":3710:3723  10 ** decimal */\n      tag_263\n        /* \"Contracts/AccesPolygon.sol\":3716:3723  decimal */\n      dup4\n        /* \"Contracts/AccesPolygon.sol\":3710:3712  10 */\n      0x0a\n        /* \"Contracts/AccesPolygon.sol\":3710:3723  10 ** decimal */\n      tag_264\n      jump\t// in\n    tag_263:\n        /* \"Contracts/AccesPolygon.sol\":3738:3773  WithdrawalBNB(_amount, decimal, to) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8249:8274   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":8305:8307   */\n      0x20\n        /* \"#utility.yul\":8290:8308   */\n      dup2\n      add\n        /* \"#utility.yul\":8283:8317   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8353:8385   */\n      dup6\n      and\n        /* \"#utility.yul\":8333:8351   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":8326:8386   */\n      mstore\n        /* \"Contracts/AccesPolygon.sol\":3738:3773  WithdrawalBNB(_amount, decimal, to) */\n      swap1\n      mload\n        /* \"Contracts/AccesPolygon.sol\":3695:3723  uint256 dcml = 10 ** decimal */\n      swap2\n      swap3\n      pop\n        /* \"Contracts/AccesPolygon.sol\":3738:3773  WithdrawalBNB(_amount, decimal, to) */\n      0x4508977418b95bac209196e03356692c2d8f47957dec1c15af1a44cc40d39a04\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":8237:8239   */\n      0x60\n        /* \"Contracts/AccesPolygon.sol\":3738:3773  WithdrawalBNB(_amount, decimal, to) */\n      add\n      swap1\n      log1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/AccesPolygon.sol\":3783:3803  payable(to).transfer */\n      dup3\n      and\n        /* \"Contracts/AccesPolygon.sol\":3783:3817  payable(to).transfer(_amount*dcml) */\n      0x08fc\n        /* \"Contracts/AccesPolygon.sol\":3804:3816  _amount*dcml */\n      tag_267\n        /* \"Contracts/AccesPolygon.sol\":3812:3816  dcml */\n      dup4\n        /* \"Contracts/AccesPolygon.sol\":3804:3811  _amount */\n      dup8\n        /* \"Contracts/AccesPolygon.sol\":3804:3816  _amount*dcml */\n      tag_268\n      jump\t// in\n    tag_267:\n        /* \"Contracts/AccesPolygon.sol\":3783:3817  payable(to).transfer(_amount*dcml) */\n      mload(0x40)\n      dup2\n      iszero\n      swap1\n      swap3\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_270\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_270:\n      pop\n        /* \"Contracts/AccesPolygon.sol\":3634:3830  {... */\n      pop\n        /* \"Contracts/AccesPolygon.sol\":3544:3830  function withdrawalBNB(uint256 _amount, uint256 decimal, address to) external onlyOwner() {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/AccesPolygon.sol\":3174:3536  function withdrawalToken(address _tokenAddr, uint256 _amount, uint256 decimal, address to) external onlyOwner() {... */\n    tag_139:\n        /* \"Contracts/AccesPolygon.sol\":1222:1227  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"Contracts/AccesPolygon.sol\":1208:1218  msg.sender */\n      caller\n        /* \"Contracts/AccesPolygon.sol\":1208:1227  msg.sender == owner */\n      eq\n        /* \"Contracts/AccesPolygon.sol\":1200:1248  require(msg.sender == owner,\"caller not owner!\") */\n      tag_272\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_272:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/AccesPolygon.sol\":3302:3326  _tokenAddr != address(0) */\n      dup5\n      and\n        /* \"Contracts/AccesPolygon.sol\":3294:3343  require(_tokenAddr != address(0),\"address zero!\") */\n      tag_275\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8772:8774   */\n      0x20\n        /* \"Contracts/AccesPolygon.sol\":3294:3343  require(_tokenAddr != address(0),\"address zero!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8754:8775   */\n      mstore\n        /* \"#utility.yul\":8811:8813   */\n      0x0d\n        /* \"#utility.yul\":8791:8809   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8784:8814   */\n      mstore\n      shl(0x98, 0x61646472657373207a65726f21)\n        /* \"#utility.yul\":8830:8848   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8823:8866   */\n      mstore\n        /* \"#utility.yul\":8883:8901   */\n      0x64\n      add\n        /* \"Contracts/AccesPolygon.sol\":3294:3343  require(_tokenAddr != address(0),\"address zero!\") */\n      tag_195\n        /* \"#utility.yul\":8570:8907   */\n      jump\n        /* \"Contracts/AccesPolygon.sol\":3294:3343  require(_tokenAddr != address(0),\"address zero!\") */\n    tag_275:\n        /* \"Contracts/AccesPolygon.sol\":3353:3365  uint256 dcml */\n      0x00\n        /* \"Contracts/AccesPolygon.sol\":3368:3381  10 ** decimal */\n      tag_278\n        /* \"Contracts/AccesPolygon.sol\":3374:3381  decimal */\n      dup4\n        /* \"Contracts/AccesPolygon.sol\":3368:3370  10 */\n      0x0a\n        /* \"Contracts/AccesPolygon.sol\":3368:3381  10 ** decimal */\n      tag_264\n      jump\t// in\n    tag_278:\n        /* \"Contracts/AccesPolygon.sol\":3437:3486  WithdrawalToken(_tokenAddr, _amount, decimal, to) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9199:9214   */\n      dup9\n      dup2\n      and\n        /* \"#utility.yul\":9181:9215   */\n      dup3\n      mstore\n        /* \"#utility.yul\":9246:9248   */\n      0x20\n        /* \"#utility.yul\":9231:9249   */\n      dup3\n      add\n        /* \"#utility.yul\":9224:9258   */\n      dup9\n      swap1\n      mstore\n        /* \"#utility.yul\":9274:9292   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":9267:9301   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":9337:9352   */\n      dup6\n      and\n        /* \"#utility.yul\":9332:9334   */\n      0x60\n        /* \"#utility.yul\":9317:9335   */\n      dup3\n      add\n        /* \"#utility.yul\":9310:9353   */\n      mstore\n        /* \"Contracts/AccesPolygon.sol\":3437:3486  WithdrawalToken(_tokenAddr, _amount, decimal, to) */\n      swap1\n      mload\n        /* \"Contracts/AccesPolygon.sol\":3353:3381  uint256 dcml = 10 ** decimal */\n      swap2\n      swap3\n      pop\n        /* \"#utility.yul\":9199:9214   */\n      dup7\n      swap2\n        /* \"Contracts/AccesPolygon.sol\":3437:3486  WithdrawalToken(_tokenAddr, _amount, decimal, to) */\n      0x0206ca7f97d46974ed97b981f879b17e9e1fe17ead63770c806926d28aa5cbd5\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":9130:9133   */\n      0x80\n        /* \"Contracts/AccesPolygon.sol\":3437:3486  WithdrawalToken(_tokenAddr, _amount, decimal, to) */\n      add\n      swap1\n      log1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/AccesPolygon.sol\":3496:3510  token.transfer */\n      dup2\n      and\n      0xa9059cbb\n        /* \"Contracts/AccesPolygon.sol\":3511:3513  to */\n      dup5\n        /* \"Contracts/AccesPolygon.sol\":3515:3527  _amount*dcml */\n      tag_281\n        /* \"Contracts/AccesPolygon.sol\":3523:3527  dcml */\n      dup6\n        /* \"Contracts/AccesPolygon.sol\":3515:3522  _amount */\n      dup10\n        /* \"Contracts/AccesPolygon.sol\":3515:3527  _amount*dcml */\n      tag_268\n      jump\t// in\n    tag_281:\n        /* \"Contracts/AccesPolygon.sol\":3496:3528  token.transfer(to, _amount*dcml) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9556:9588   */\n      swap1\n      swap3\n      and\n        /* \"Contracts/AccesPolygon.sol\":3496:3528  token.transfer(to, _amount*dcml) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":9538:9589   */\n      mstore\n        /* \"#utility.yul\":9605:9623   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9598:9632   */\n      mstore\n        /* \"#utility.yul\":9511:9529   */\n      0x44\n      add\n        /* \"Contracts/AccesPolygon.sol\":3496:3528  token.transfer(to, _amount*dcml) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_285\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_285:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_286\n      swap2\n      swap1\n      tag_287\n      jump\t// in\n    tag_286:\n      pop\n        /* \"Contracts/AccesPolygon.sol\":3286:3536  {... */\n      pop\n      pop\n        /* \"Contracts/AccesPolygon.sol\":3174:3536  function withdrawalToken(address _tokenAddr, uint256 _amount, uint256 decimal, address to) external onlyOwner() {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_144:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4065:4072  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"Contracts/AccesPolygon.sol\":2756:3001  function changeMinMaxPrivateSale(uint256 minAmount, uint256 maxAmount) external onlyOwner {... */\n    tag_150:\n        /* \"Contracts/AccesPolygon.sol\":1222:1227  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"Contracts/AccesPolygon.sol\":1208:1218  msg.sender */\n      caller\n        /* \"Contracts/AccesPolygon.sol\":1208:1227  msg.sender == owner */\n      eq\n        /* \"Contracts/AccesPolygon.sol\":1200:1248  require(msg.sender == owner,\"caller not owner!\") */\n      tag_290\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_290:\n        /* \"Contracts/AccesPolygon.sol\":2862:2876  minAmount != 0 */\n      dup2\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"Contracts/AccesPolygon.sol\":2862:2893  minAmount != 0 && maxAmount !=0 */\n      tag_293\n      jumpi\n      pop\n        /* \"Contracts/AccesPolygon.sol\":2880:2893  maxAmount !=0 */\n      dup1\n      iszero\n      iszero\n        /* \"Contracts/AccesPolygon.sol\":2862:2893  minAmount != 0 && maxAmount !=0 */\n    tag_293:\n        /* \"Contracts/AccesPolygon.sol\":2854:2902  require(minAmount != 0 && maxAmount !=0,\"Zero!\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10127:10129   */\n      0x20\n        /* \"Contracts/AccesPolygon.sol\":2854:2902  require(minAmount != 0 && maxAmount !=0,\"Zero!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10109:10130   */\n      mstore\n        /* \"#utility.yul\":10166:10167   */\n      0x05\n        /* \"#utility.yul\":10146:10164   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10139:10168   */\n      mstore\n      shl(0xd8, 0x5a65726f21)\n        /* \"#utility.yul\":10184:10202   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10177:10212   */\n      mstore\n        /* \"#utility.yul\":10229:10247   */\n      0x64\n      add\n        /* \"Contracts/AccesPolygon.sol\":2854:2902  require(minAmount != 0 && maxAmount !=0,\"Zero!\") */\n      tag_195\n        /* \"#utility.yul\":9925:10253   */\n      jump\n        /* \"Contracts/AccesPolygon.sol\":2854:2902  require(minAmount != 0 && maxAmount !=0,\"Zero!\") */\n    tag_294:\n        /* \"Contracts/AccesPolygon.sol\":2910:2913  min */\n      0x0d\n        /* \"Contracts/AccesPolygon.sol\":2910:2925  min = minAmount */\n      dup3\n      swap1\n      sstore\n        /* \"Contracts/AccesPolygon.sol\":2951:2955  path */\n      sload(0x0b)\n        /* \"Contracts/AccesPolygon.sol\":2939:2955  maxAmount * path */\n      tag_297\n      swap1\n        /* \"Contracts/AccesPolygon.sol\":2939:2948  maxAmount */\n      dup3\n        /* \"Contracts/AccesPolygon.sol\":2939:2955  maxAmount * path */\n      tag_268\n      jump\t// in\n    tag_297:\n        /* \"Contracts/AccesPolygon.sol\":2933:2936  max */\n      0x0c\n        /* \"Contracts/AccesPolygon.sol\":2933:2955  max = maxAmount * path */\n      sstore\n        /* \"Contracts/AccesPolygon.sol\":2968:2996  minMax(minAmount, maxAmount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":10432:10457   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":10488:10490   */\n      0x20\n        /* \"#utility.yul\":10473:10491   */\n      dup2\n      add\n        /* \"#utility.yul\":10466:10500   */\n      dup4\n      swap1\n      mstore\n        /* \"Contracts/AccesPolygon.sol\":2968:2996  minMax(minAmount, maxAmount) */\n      0x3b06ffd21bedfb2c375d7b1bcf74ca4fe1afe205699e39610b3aced7adf6b9e9\n      swap2\n        /* \"#utility.yul\":10405:10423   */\n      add\n        /* \"Contracts/AccesPolygon.sol\":2968:2996  minMax(minAmount, maxAmount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Contracts/AccesPolygon.sol\":2756:3001  function changeMinMaxPrivateSale(uint256 minAmount, uint256 maxAmount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/AccesPolygon.sol\":1680:2282  function privateSale(address) public payable returns (bool success){... */\n    tag_158:\n        /* \"Contracts/AccesPolygon.sol\":1734:1746  bool success */\n      0x00\n        /* \"Contracts/AccesPolygon.sol\":1810:1814  path */\n      sload(0x0b)\n        /* \"Contracts/AccesPolygon.sol\":1795:1807  privateLimit */\n      sload(0x0e)\n        /* \"Contracts/AccesPolygon.sol\":1795:1814  privateLimit * path */\n      tag_301\n      swap2\n      swap1\n      tag_268\n      jump\t// in\n    tag_301:\n        /* \"Contracts/AccesPolygon.sol\":1779:1789  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3489  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Contracts/AccesPolygon.sol\":1761:1814  balanceOf(address(msg.sender)) <= privateLimit * path */\n      gt\n      iszero\n        /* \"Contracts/AccesPolygon.sol\":1753:1855  require(balanceOf(address(msg.sender)) <= privateLimit * path , \"You reached your private sale limit\") */\n      tag_303\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10713:10715   */\n      0x20\n        /* \"Contracts/AccesPolygon.sol\":1753:1855  require(balanceOf(address(msg.sender)) <= privateLimit * path , \"You reached your private sale limit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10695:10716   */\n      mstore\n        /* \"#utility.yul\":10752:10754   */\n      0x23\n        /* \"#utility.yul\":10732:10750   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10725:10755   */\n      mstore\n        /* \"#utility.yul\":10791:10825   */\n      0x596f75207265616368656420796f757220707269766174652073616c65206c69\n        /* \"#utility.yul\":10771:10789   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10764:10826   */\n      mstore\n      shl(0xea, 0x1b5a5d)\n        /* \"#utility.yul\":10842:10860   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10835:10868   */\n      mstore\n        /* \"#utility.yul\":10885:10904   */\n      0x84\n      add\n        /* \"Contracts/AccesPolygon.sol\":1753:1855  require(balanceOf(address(msg.sender)) <= privateLimit * path , \"You reached your private sale limit\") */\n      tag_195\n        /* \"#utility.yul\":10511:10910   */\n      jump\n        /* \"Contracts/AccesPolygon.sol\":1753:1855  require(balanceOf(address(msg.sender)) <= privateLimit * path , \"You reached your private sale limit\") */\n    tag_303:\n        /* \"Contracts/AccesPolygon.sol\":1882:1894  block.number */\n      number\n        /* \"Contracts/AccesPolygon.sol\":1871:1878  sSBlock */\n      sload(0x07)\n        /* \"Contracts/AccesPolygon.sol\":1871:1894  sSBlock <= block.number */\n      gt\n      iszero\n        /* \"Contracts/AccesPolygon.sol\":1871:1921  sSBlock <= block.number && block.number <= sEBlock */\n      dup1\n      iszero\n      tag_306\n      jumpi\n      pop\n        /* \"Contracts/AccesPolygon.sol\":1914:1921  sEBlock */\n      sload(0x08)\n        /* \"Contracts/AccesPolygon.sol\":1898:1910  block.number */\n      number\n        /* \"Contracts/AccesPolygon.sol\":1898:1921  block.number <= sEBlock */\n      gt\n      iszero\n        /* \"Contracts/AccesPolygon.sol\":1871:1921  sSBlock <= block.number && block.number <= sEBlock */\n    tag_306:\n        /* \"Contracts/AccesPolygon.sol\":1863:1969  require(sSBlock <= block.number && block.number <= sEBlock, \"Private Sale has ended or did not start yet\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11117:11119   */\n      0x20\n        /* \"Contracts/AccesPolygon.sol\":1863:1969  require(sSBlock <= block.number && block.number <= sEBlock, \"Private Sale has ended or did not start yet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11099:11120   */\n      mstore\n        /* \"#utility.yul\":11156:11158   */\n      0x2b\n        /* \"#utility.yul\":11136:11154   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11129:11159   */\n      mstore\n        /* \"#utility.yul\":11195:11229   */\n      0x507269766174652053616c652068617320656e646564206f7220646964206e6f\n        /* \"#utility.yul\":11175:11193   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11168:11230   */\n      mstore\n      shl(0xaa, 0x1d081cdd185c9d081e595d)\n        /* \"#utility.yul\":11246:11264   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11239:11280   */\n      mstore\n        /* \"#utility.yul\":11297:11316   */\n      0x84\n      add\n        /* \"Contracts/AccesPolygon.sol\":1863:1969  require(sSBlock <= block.number && block.number <= sEBlock, \"Private Sale has ended or did not start yet\") */\n      tag_195\n        /* \"#utility.yul\":10915:11322   */\n      jump\n        /* \"Contracts/AccesPolygon.sol\":1863:1969  require(sSBlock <= block.number && block.number <= sEBlock, \"Private Sale has ended or did not start yet\") */\n    tag_307:\n        /* \"Contracts/AccesPolygon.sol\":2048:2051  min */\n      sload(0x0d)\n        /* \"Contracts/AccesPolygon.sol\":1991:2000  msg.value */\n      callvalue\n      swap1\n        /* \"Contracts/AccesPolygon.sol\":1976:1988  uint256 _eth */\n      0x00\n      swap1\n        /* \"Contracts/AccesPolygon.sol\":2040:2051  _eth >= min */\n      dup3\n      lt\n      dup1\n      iszero\n      swap1\n        /* \"Contracts/AccesPolygon.sol\":2040:2066  _eth >= min && _eth <= max */\n      tag_310\n      jumpi\n      pop\n        /* \"Contracts/AccesPolygon.sol\":2063:2066  max */\n      sload(0x0c)\n        /* \"Contracts/AccesPolygon.sol\":2055:2059  _eth */\n      dup3\n        /* \"Contracts/AccesPolygon.sol\":2055:2066  _eth <= max */\n      gt\n      iszero\n        /* \"Contracts/AccesPolygon.sol\":2040:2066  _eth >= min && _eth <= max */\n    tag_310:\n        /* \"Contracts/AccesPolygon.sol\":2030:2110  require ( _eth >= min && _eth <= max , \"Less than Minimum or More than Maximum\") */\n      tag_311\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11529:11531   */\n      0x20\n        /* \"Contracts/AccesPolygon.sol\":2030:2110  require ( _eth >= min && _eth <= max , \"Less than Minimum or More than Maximum\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11511:11532   */\n      mstore\n        /* \"#utility.yul\":11568:11570   */\n      0x26\n        /* \"#utility.yul\":11548:11566   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11541:11571   */\n      mstore\n        /* \"#utility.yul\":11607:11641   */\n      0x4c657373207468616e204d696e696d756d206f72204d6f7265207468616e204d\n        /* \"#utility.yul\":11587:11605   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11580:11642   */\n      mstore\n      shl(0xd0, 0x6178696d756d)\n        /* \"#utility.yul\":11658:11676   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11651:11687   */\n      mstore\n        /* \"#utility.yul\":11704:11723   */\n      0x84\n      add\n        /* \"Contracts/AccesPolygon.sol\":2030:2110  require ( _eth >= min && _eth <= max , \"Less than Minimum or More than Maximum\") */\n      tag_195\n        /* \"#utility.yul\":11327:11729   */\n      jump\n        /* \"Contracts/AccesPolygon.sol\":2030:2110  require ( _eth >= min && _eth <= max , \"Less than Minimum or More than Maximum\") */\n    tag_311:\n        /* \"Contracts/AccesPolygon.sol\":2124:2155  (sPrice.mul(_eth)).div(1 ether) */\n      tag_314\n        /* \"Contracts/AccesPolygon.sol\":2147:2154  1 ether */\n      0x0de0b6b3a7640000\n        /* \"Contracts/AccesPolygon.sol\":2125:2141  sPrice.mul(_eth) */\n      tag_315\n        /* \"Contracts/AccesPolygon.sol\":2136:2140  _eth */\n      dup5\n        /* \"Contracts/AccesPolygon.sol\":2125:2131  sPrice */\n      sload(0x0a)\n        /* \"Contracts/AccesPolygon.sol\":2125:2135  sPrice.mul */\n      tag_316\n      swap1\n        /* \"Contracts/AccesPolygon.sol\":2125:2141  sPrice.mul(_eth) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_315:\n        /* \"Contracts/AccesPolygon.sol\":2124:2146  (sPrice.mul(_eth)).div */\n      swap1\n      tag_172\n        /* \"Contracts/AccesPolygon.sol\":2124:2155  (sPrice.mul(_eth)).div(1 ether) */\n      jump\t// in\n    tag_314:\n        /* \"Contracts/AccesPolygon.sol\":2161:2165  sTot */\n      0x09\n        /* \"Contracts/AccesPolygon.sol\":2161:2168  sTot ++ */\n      dup1\n      sload\n        /* \"Contracts/AccesPolygon.sol\":2116:2155  _tkns = (sPrice.mul(_eth)).div(1 ether) */\n      swap2\n      swap3\n      pop\n        /* \"Contracts/AccesPolygon.sol\":2161:2165  sTot */\n      0x00\n        /* \"Contracts/AccesPolygon.sol\":2161:2168  sTot ++ */\n      tag_317\n      dup4\n      tag_318\n      jump\t// in\n    tag_317:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"Contracts/AccesPolygon.sol\":2179:2222  _transfer(address(this), msg.sender, _tkns) */\n      tag_319\n        /* \"Contracts/AccesPolygon.sol\":2197:2201  this */\n      address\n        /* \"Contracts/AccesPolygon.sol\":2204:2214  msg.sender */\n      caller\n        /* \"Contracts/AccesPolygon.sol\":2216:2221  _tkns */\n      dup4\n        /* \"Contracts/AccesPolygon.sol\":2179:2188  _transfer */\n      tag_191\n        /* \"Contracts/AccesPolygon.sol\":2179:2222  _transfer(address(this), msg.sender, _tkns) */\n      jump\t// in\n    tag_319:\n        /* \"Contracts/AccesPolygon.sol\":2253:2259  sPrice */\n      sload(0x0a)\n        /* \"Contracts/AccesPolygon.sol\":2234:2260  PrivateSale(_tkns, sPrice) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":10432:10457   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":10488:10490   */\n      0x20\n        /* \"#utility.yul\":10473:10491   */\n      dup2\n      add\n        /* \"#utility.yul\":10466:10500   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"Contracts/AccesPolygon.sol\":2234:2260  PrivateSale(_tkns, sPrice) */\n      0xb887e151dbfcc06b4ce4f67f9bbedaeb16ab224e34c6668858d0310c6d18ffc3\n      swap2\n        /* \"#utility.yul\":10405:10423   */\n      add\n        /* \"Contracts/AccesPolygon.sol\":2234:2260  PrivateSale(_tkns, sPrice) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n      pop\n        /* \"Contracts/AccesPolygon.sol\":2273:2277  true */\n      0x01\n      swap4\n        /* \"Contracts/AccesPolygon.sol\":1680:2282  function privateSale(address) public payable returns (bool success){... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/AccesPolygon.sol\":1470:1675  function transferOwnership(address _newOwner) external onlyOwner{... */\n    tag_163:\n        /* \"Contracts/AccesPolygon.sol\":1222:1227  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"Contracts/AccesPolygon.sol\":1208:1218  msg.sender */\n      caller\n        /* \"Contracts/AccesPolygon.sol\":1208:1227  msg.sender == owner */\n      eq\n        /* \"Contracts/AccesPolygon.sol\":1200:1248  require(msg.sender == owner,\"caller not owner!\") */\n      tag_322\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_322:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/AccesPolygon.sol\":1551:1574  _newOwner != address(0) */\n      dup2\n      and\n        /* \"Contracts/AccesPolygon.sol\":1543:1591  require(_newOwner != address(0),\"address zero!\") */\n      tag_325\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8772:8774   */\n      0x20\n        /* \"Contracts/AccesPolygon.sol\":1543:1591  require(_newOwner != address(0),\"address zero!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8754:8775   */\n      mstore\n        /* \"#utility.yul\":8811:8813   */\n      0x0d\n        /* \"#utility.yul\":8791:8809   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8784:8814   */\n      mstore\n      shl(0x98, 0x61646472657373207a65726f21)\n        /* \"#utility.yul\":8830:8848   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8823:8866   */\n      mstore\n        /* \"#utility.yul\":8883:8901   */\n      0x64\n      add\n        /* \"Contracts/AccesPolygon.sol\":1543:1591  require(_newOwner != address(0),\"address zero!\") */\n      tag_195\n        /* \"#utility.yul\":8570:8907   */\n      jump\n        /* \"Contracts/AccesPolygon.sol\":1543:1591  require(_newOwner != address(0),\"address zero!\") */\n    tag_325:\n        /* \"Contracts/AccesPolygon.sol\":1600:1605  owner */\n      0x05\n        /* \"Contracts/AccesPolygon.sol\":1600:1617  owner = _newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Contracts/AccesPolygon.sol\":1631:1669  OwnershipTransferred(owner, _newOwner) */\n      mload(0x40)\n        /* \"Contracts/AccesPolygon.sol\":1600:1617  owner = _newOwner */\n      dup2\n      swap1\n        /* \"Contracts/AccesPolygon.sol\":1631:1669  OwnershipTransferred(owner, _newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"Contracts/AccesPolygon.sol\":1470:1675  function transferOwnership(address _newOwner) external onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"Contracts/AccesPolygon.sol\":2457:2628  function startSale(uint256 _sEBlock, uint256 _sPrice) public onlyOwner{... */\n    tag_167:\n        /* \"Contracts/AccesPolygon.sol\":1222:1227  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"Contracts/AccesPolygon.sol\":1208:1218  msg.sender */\n      caller\n        /* \"Contracts/AccesPolygon.sol\":1208:1227  msg.sender == owner */\n      eq\n        /* \"Contracts/AccesPolygon.sol\":1200:1248  require(msg.sender == owner,\"caller not owner!\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_328:\n        /* \"Contracts/AccesPolygon.sol\":2543:2555  _sEBlock !=0 */\n      dup2\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"Contracts/AccesPolygon.sol\":2543:2570  _sEBlock !=0 && _sPrice !=0 */\n      tag_331\n      jumpi\n      pop\n        /* \"Contracts/AccesPolygon.sol\":2559:2570  _sPrice !=0 */\n      dup1\n      iszero\n      iszero\n        /* \"Contracts/AccesPolygon.sol\":2543:2570  _sEBlock !=0 && _sPrice !=0 */\n    tag_331:\n        /* \"Contracts/AccesPolygon.sol\":2535:2579  require(_sEBlock !=0 && _sPrice !=0,\"Zero!\") */\n      tag_332\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10127:10129   */\n      0x20\n        /* \"Contracts/AccesPolygon.sol\":2535:2579  require(_sEBlock !=0 && _sPrice !=0,\"Zero!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10109:10130   */\n      mstore\n        /* \"#utility.yul\":10166:10167   */\n      0x05\n        /* \"#utility.yul\":10146:10164   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10139:10168   */\n      mstore\n      shl(0xd8, 0x5a65726f21)\n        /* \"#utility.yul\":10184:10202   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10177:10212   */\n      mstore\n        /* \"#utility.yul\":10229:10247   */\n      0x64\n      add\n        /* \"Contracts/AccesPolygon.sol\":2535:2579  require(_sEBlock !=0 && _sPrice !=0,\"Zero!\") */\n      tag_195\n        /* \"#utility.yul\":9925:10253   */\n      jump\n        /* \"Contracts/AccesPolygon.sol\":2535:2579  require(_sEBlock !=0 && _sPrice !=0,\"Zero!\") */\n    tag_332:\n        /* \"Contracts/AccesPolygon.sol\":2584:2591  sEBlock */\n      0x08\n        /* \"Contracts/AccesPolygon.sol\":2584:2602  sEBlock = _sEBlock */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"Contracts/AccesPolygon.sol\":2608:2614  sPrice */\n      0x0a\n        /* \"Contracts/AccesPolygon.sol\":2608:2623  sPrice =_sPrice */\n      sstore\n        /* \"Contracts/AccesPolygon.sol\":2457:2628  function startSale(uint256 _sEBlock, uint256 _sPrice) public onlyOwner{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_335\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_336\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10480  function _approve(... */\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10241:10260  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_339\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12298:12300   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12280:12301   */\n      mstore\n        /* \"#utility.yul\":12337:12339   */\n      0x24\n        /* \"#utility.yul\":12317:12335   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":12310:12340   */\n      mstore\n        /* \"#utility.yul\":12376:12410   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":12356:12374   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12349:12411   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":12427:12445   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12420:12454   */\n      mstore\n        /* \"#utility.yul\":12471:12490   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_195\n        /* \"#utility.yul\":12096:12496   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10233:10301  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_339:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10319:10340  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_342\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12703:12705   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12685:12706   */\n      mstore\n        /* \"#utility.yul\":12742:12744   */\n      0x22\n        /* \"#utility.yul\":12722:12740   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12715:12745   */\n      mstore\n        /* \"#utility.yul\":12781:12815   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":12761:12779   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12754:12816   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":12832:12850   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12825:12857   */\n      mstore\n        /* \"#utility.yul\":12874:12893   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_195\n        /* \"#utility.yul\":12501:12899   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10311:10379  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_342:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10408  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10401  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10408  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10417  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10390:10426  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10441:10473  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10480  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10761:11202  function _spendAllowance(... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10891:10915  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10918:10943  allowance(owner, spender) */\n      tag_347\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10928:10933  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10935:10942  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10918:10927  allowance */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10918:10943  allowance(owner, spender) */\n      jump\t// in\n    tag_347:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10891:10943  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10957:10973  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10957:10994  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10953:11196  if (currentAllowance != type(uint256).max) {... */\n      tag_352\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11038:11044  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11018:11034  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11018:11044  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_349\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13106:13108   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13088:13109   */\n      mstore\n        /* \"#utility.yul\":13145:13147   */\n      0x1d\n        /* \"#utility.yul\":13125:13143   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13118:13148   */\n      mstore\n        /* \"#utility.yul\":13184:13215   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":13164:13182   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13157:13216   */\n      mstore\n        /* \"#utility.yul\":13233:13251   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_195\n        /* \"#utility.yul\":12904:13257   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11010:11078  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_349:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11171  _approve(owner, spender, currentAllowance - amount) */\n      tag_352\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11129:11134  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11136:11143  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11164:11170  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11145:11161  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11145:11170  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11128  _approve */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11120:11171  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_352:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11202  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10761:11202  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7475:8126  function _transfer(... */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7619  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_354\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13464:13466   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13446:13467   */\n      mstore\n        /* \"#utility.yul\":13503:13505   */\n      0x25\n        /* \"#utility.yul\":13483:13501   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13476:13506   */\n      mstore\n        /* \"#utility.yul\":13542:13576   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":13522:13540   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13515:13577   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":13593:13611   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13586:13621   */\n      mstore\n        /* \"#utility.yul\":13638:13657   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_195\n        /* \"#utility.yul\":13262:13663   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7593:7661  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_354:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7679:7695  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_357\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13870:13872   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13852:13873   */\n      mstore\n        /* \"#utility.yul\":13909:13911   */\n      0x23\n        /* \"#utility.yul\":13889:13907   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13882:13912   */\n      mstore\n        /* \"#utility.yul\":13948:13982   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":13928:13946   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13921:13983   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":13999:14017   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13992:14025   */\n      mstore\n        /* \"#utility.yul\":14042:14061   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_195\n        /* \"#utility.yul\":13668:14067   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7735  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_357:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7817:7832  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7795:7814  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7817:7832  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7850:7871  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_362\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14274:14276   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14256:14277   */\n      mstore\n        /* \"#utility.yul\":14313:14315   */\n      0x26\n        /* \"#utility.yul\":14293:14311   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14286:14316   */\n      mstore\n        /* \"#utility.yul\":14352:14386   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":14332:14350   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14325:14387   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":14403:14421   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14396:14432   */\n      mstore\n        /* \"#utility.yul\":14449:14468   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_195\n        /* \"#utility.yul\":14072:14474   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7842:7914  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_362:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7963  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7957  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7963  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7966:7986  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7986  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8019  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7980:7986  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7948:7957  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      tag_365\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7980:7986  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8006:8029  _balances[to] += amount */\n      tag_204\n      jump\t// in\n    tag_365:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8060:8062  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8058  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8064:8070  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_366\n      swap2\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8045:8071  Transfer(from, to, amount) */\n    tag_366:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8082:8119  _afterTokenTransfer(from, to, amount) */\n      tag_352\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11786:11907  function _beforeTokenTransfer(... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8402:8791  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_211:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8485:8506  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8477:8542  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_370\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14681:14683   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8477:8542  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14663:14684   */\n      mstore\n        /* \"#utility.yul\":14720:14722   */\n      0x1f\n        /* \"#utility.yul\":14700:14718   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14693:14723   */\n      mstore\n        /* \"#utility.yul\":14759:14792   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":14739:14757   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14732:14793   */\n      mstore\n        /* \"#utility.yul\":14810:14828   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8477:8542  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_195\n        /* \"#utility.yul\":14479:14834   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8477:8542  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_370:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8629:8635  amount */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8613:8625  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8613:8635  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_374\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_374:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8663  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8654  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8663  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8673  _balances[account] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8667:8673  amount */\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8654  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8673  _balances[account] += amount */\n      tag_375\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8667:8673  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8645:8673  _balances[account] += amount */\n      tag_204\n      jump\t// in\n    tag_375:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n      dup4\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8705:8706  0 */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8688:8725  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Contracts/AccesPolygon.sol\":4089:4263  function mint(... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":578:667  function burn(uint256 amount) public virtual {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":633:660  _burn(_msgSender(), amount) */\n      tag_216\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":653:659  amount */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":633:638  _burn */\n      tag_381\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":633:660  _burn(_msgSender(), amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":973:1134  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1049:1095  _spendAllowance(account, _msgSender(), amount) */\n      tag_383\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1065:1072  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1088:1094  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1049:1064  _spendAllowance */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1049:1095  _spendAllowance(account, _msgSender(), amount) */\n      jump\t// in\n    tag_383:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1105:1127  _burn(account, amount) */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1111:1118  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1120:1126  amount */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1105:1110  _burn */\n      tag_381\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1105:1127  _burn(account, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_316:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_335\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_268\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9111:9687  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_381:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9194:9215  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9186:9253  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_391\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15041:15043   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9186:9253  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15023:15044   */\n      mstore\n        /* \"#utility.yul\":15080:15082   */\n      0x21\n        /* \"#utility.yul\":15060:15078   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15053:15083   */\n      mstore\n        /* \"#utility.yul\":15119:15153   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":15099:15117   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15092:15154   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":15170:15188   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15163:15194   */\n      mstore\n        /* \"#utility.yul\":15211:15230   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9186:9253  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_195\n        /* \"#utility.yul\":14839:15236   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9186:9253  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_391:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9349:9367  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9324:9346  uint256 accountBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9349:9367  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9385:9409  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9377:9448  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_395\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15443:15445   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9377:9448  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15425:15446   */\n      mstore\n        /* \"#utility.yul\":15482:15484   */\n      0x22\n        /* \"#utility.yul\":15462:15480   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15455:15485   */\n      mstore\n        /* \"#utility.yul\":15521:15555   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":15501:15519   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15494:15556   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":15572:15590   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15565:15597   */\n      mstore\n        /* \"#utility.yul\":15614:15633   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9377:9448  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_195\n        /* \"#utility.yul\":15241:15639   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9377:9448  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_395:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9482:9500  _balances[account] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9482:9491  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9482:9500  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9503:9526  accountBalance - amount */\n      dup4\n      dup4\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9482:9526  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9546:9558  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9546:9568  _totalSupply -= amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9520:9526  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9482:9491  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9546:9568  _totalSupply -= amount */\n      tag_398\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9520:9526  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9546:9568  _totalSupply -= amount */\n      tag_399\n      jump\t// in\n    tag_398:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9584:9621  Transfer(account, address(0), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9610:9611  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9584:9621  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9584:9621  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11786:11907  function _beforeTokenTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:611   */\n    tag_44:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_408:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_408)\n    tag_410:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_411:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_402:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_413\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_413:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_48:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_415:\n        /* \"#utility.yul\":962:991   */\n      tag_416\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_402\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_60:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_420:\n        /* \"#utility.yul\":1612:1641   */\n      tag_421\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_402\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_422\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_402\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2129   */\n    tag_87:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_425:\n      pop\n        /* \"#utility.yul\":2100:2123   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1949:2129   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2530:2716   */\n    tag_105:\n        /* \"#utility.yul\":2589:2595   */\n      0x00\n        /* \"#utility.yul\":2642:2644   */\n      0x20\n        /* \"#utility.yul\":2630:2639   */\n      dup3\n        /* \"#utility.yul\":2621:2628   */\n      dup5\n        /* \"#utility.yul\":2617:2640   */\n      sub\n        /* \"#utility.yul\":2613:2645   */\n      slt\n        /* \"#utility.yul\":2610:2662   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":2658:2659   */\n      0x00\n        /* \"#utility.yul\":2655:2656   */\n      dup1\n        /* \"#utility.yul\":2648:2660   */\n      revert\n        /* \"#utility.yul\":2610:2662   */\n    tag_428:\n        /* \"#utility.yul\":2681:2710   */\n      tag_335\n        /* \"#utility.yul\":2700:2709   */\n      dup3\n        /* \"#utility.yul\":2681:2710   */\n      tag_402\n      jump\t// in\n        /* \"#utility.yul\":2721:3043   */\n    tag_133:\n        /* \"#utility.yul\":2798:2804   */\n      0x00\n        /* \"#utility.yul\":2806:2812   */\n      dup1\n        /* \"#utility.yul\":2814:2820   */\n      0x00\n        /* \"#utility.yul\":2867:2869   */\n      0x60\n        /* \"#utility.yul\":2855:2864   */\n      dup5\n        /* \"#utility.yul\":2846:2853   */\n      dup7\n        /* \"#utility.yul\":2842:2865   */\n      sub\n        /* \"#utility.yul\":2838:2870   */\n      slt\n        /* \"#utility.yul\":2835:2887   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":2883:2884   */\n      0x00\n        /* \"#utility.yul\":2880:2881   */\n      dup1\n        /* \"#utility.yul\":2873:2885   */\n      revert\n        /* \"#utility.yul\":2835:2887   */\n    tag_431:\n        /* \"#utility.yul\":2919:2928   */\n      dup4\n        /* \"#utility.yul\":2906:2929   */\n      calldataload\n        /* \"#utility.yul\":2896:2929   */\n      swap3\n      pop\n        /* \"#utility.yul\":2976:2978   */\n      0x20\n        /* \"#utility.yul\":2965:2974   */\n      dup5\n        /* \"#utility.yul\":2961:2979   */\n      add\n        /* \"#utility.yul\":2948:2980   */\n      calldataload\n        /* \"#utility.yul\":2938:2980   */\n      swap2\n      pop\n        /* \"#utility.yul\":2999:3037   */\n      tag_432\n        /* \"#utility.yul\":3033:3035   */\n      0x40\n        /* \"#utility.yul\":3022:3031   */\n      dup6\n        /* \"#utility.yul\":3018:3036   */\n      add\n        /* \"#utility.yul\":2999:3037   */\n      tag_402\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":2989:3037   */\n      swap1\n      pop\n        /* \"#utility.yul\":2721:3043   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3048:3445   */\n    tag_138:\n        /* \"#utility.yul\":3134:3140   */\n      0x00\n        /* \"#utility.yul\":3142:3148   */\n      dup1\n        /* \"#utility.yul\":3150:3156   */\n      0x00\n        /* \"#utility.yul\":3158:3164   */\n      dup1\n        /* \"#utility.yul\":3211:3214   */\n      0x80\n        /* \"#utility.yul\":3199:3208   */\n      dup6\n        /* \"#utility.yul\":3190:3197   */\n      dup8\n        /* \"#utility.yul\":3186:3209   */\n      sub\n        /* \"#utility.yul\":3182:3215   */\n      slt\n        /* \"#utility.yul\":3179:3232   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":3228:3229   */\n      0x00\n        /* \"#utility.yul\":3225:3226   */\n      dup1\n        /* \"#utility.yul\":3218:3230   */\n      revert\n        /* \"#utility.yul\":3179:3232   */\n    tag_434:\n        /* \"#utility.yul\":3251:3280   */\n      tag_435\n        /* \"#utility.yul\":3270:3279   */\n      dup6\n        /* \"#utility.yul\":3251:3280   */\n      tag_402\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":3241:3280   */\n      swap4\n      pop\n        /* \"#utility.yul\":3327:3329   */\n      0x20\n        /* \"#utility.yul\":3316:3325   */\n      dup6\n        /* \"#utility.yul\":3312:3330   */\n      add\n        /* \"#utility.yul\":3299:3331   */\n      calldataload\n        /* \"#utility.yul\":3289:3331   */\n      swap3\n      pop\n        /* \"#utility.yul\":3378:3380   */\n      0x40\n        /* \"#utility.yul\":3367:3376   */\n      dup6\n        /* \"#utility.yul\":3363:3381   */\n      add\n        /* \"#utility.yul\":3350:3382   */\n      calldataload\n        /* \"#utility.yul\":3340:3382   */\n      swap2\n      pop\n        /* \"#utility.yul\":3401:3439   */\n      tag_436\n        /* \"#utility.yul\":3435:3437   */\n      0x60\n        /* \"#utility.yul\":3424:3433   */\n      dup7\n        /* \"#utility.yul\":3420:3438   */\n      add\n        /* \"#utility.yul\":3401:3439   */\n      tag_402\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":3391:3439   */\n      swap1\n      pop\n        /* \"#utility.yul\":3048:3445   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3450:3710   */\n    tag_143:\n        /* \"#utility.yul\":3518:3524   */\n      0x00\n        /* \"#utility.yul\":3526:3532   */\n      dup1\n        /* \"#utility.yul\":3579:3581   */\n      0x40\n        /* \"#utility.yul\":3567:3576   */\n      dup4\n        /* \"#utility.yul\":3558:3565   */\n      dup6\n        /* \"#utility.yul\":3554:3577   */\n      sub\n        /* \"#utility.yul\":3550:3582   */\n      slt\n        /* \"#utility.yul\":3547:3599   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":3595:3596   */\n      0x00\n        /* \"#utility.yul\":3592:3593   */\n      dup1\n        /* \"#utility.yul\":3585:3597   */\n      revert\n        /* \"#utility.yul\":3547:3599   */\n    tag_438:\n        /* \"#utility.yul\":3618:3647   */\n      tag_439\n        /* \"#utility.yul\":3637:3646   */\n      dup4\n        /* \"#utility.yul\":3618:3647   */\n      tag_402\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":3608:3647   */\n      swap2\n      pop\n        /* \"#utility.yul\":3666:3704   */\n      tag_440\n        /* \"#utility.yul\":3700:3702   */\n      0x20\n        /* \"#utility.yul\":3689:3698   */\n      dup5\n        /* \"#utility.yul\":3685:3703   */\n      add\n        /* \"#utility.yul\":3666:3704   */\n      tag_402\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":3656:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3450:3710   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3715:3963   */\n    tag_149:\n        /* \"#utility.yul\":3783:3789   */\n      0x00\n        /* \"#utility.yul\":3791:3797   */\n      dup1\n        /* \"#utility.yul\":3844:3846   */\n      0x40\n        /* \"#utility.yul\":3832:3841   */\n      dup4\n        /* \"#utility.yul\":3823:3830   */\n      dup6\n        /* \"#utility.yul\":3819:3842   */\n      sub\n        /* \"#utility.yul\":3815:3847   */\n      slt\n        /* \"#utility.yul\":3812:3864   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":3860:3861   */\n      0x00\n        /* \"#utility.yul\":3857:3858   */\n      dup1\n        /* \"#utility.yul\":3850:3862   */\n      revert\n        /* \"#utility.yul\":3812:3864   */\n    tag_442:\n      pop\n      pop\n        /* \"#utility.yul\":3883:3906   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":3953:3955   */\n      0x20\n        /* \"#utility.yul\":3938:3956   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3925:3957   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3715:3963   */\n      jump\t// out\n        /* \"#utility.yul\":4176:4556   */\n    tag_175:\n        /* \"#utility.yul\":4255:4256   */\n      0x01\n        /* \"#utility.yul\":4251:4263   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4298:4310   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4319:4380   */\n      tag_445\n      jumpi\n        /* \"#utility.yul\":4373:4377   */\n      0x7f\n        /* \"#utility.yul\":4365:4371   */\n      dup3\n        /* \"#utility.yul\":4361:4378   */\n      and\n        /* \"#utility.yul\":4351:4378   */\n      swap2\n      pop\n        /* \"#utility.yul\":4319:4380   */\n    tag_445:\n        /* \"#utility.yul\":4426:4428   */\n      0x20\n        /* \"#utility.yul\":4418:4424   */\n      dup3\n        /* \"#utility.yul\":4415:4429   */\n      lt\n        /* \"#utility.yul\":4395:4413   */\n      dup2\n        /* \"#utility.yul\":4392:4430   */\n      sub\n        /* \"#utility.yul\":4389:4550   */\n      tag_446\n      jumpi\n        /* \"#utility.yul\":4472:4482   */\n      0x4e487b71\n        /* \"#utility.yul\":4467:4470   */\n      0xe0\n        /* \"#utility.yul\":4463:4483   */\n      shl\n        /* \"#utility.yul\":4460:4461   */\n      0x00\n        /* \"#utility.yul\":4453:4484   */\n      mstore\n        /* \"#utility.yul\":4507:4511   */\n      0x22\n        /* \"#utility.yul\":4504:4505   */\n      0x04\n        /* \"#utility.yul\":4497:4512   */\n      mstore\n        /* \"#utility.yul\":4535:4539   */\n      0x24\n        /* \"#utility.yul\":4532:4533   */\n      0x00\n        /* \"#utility.yul\":4525:4540   */\n      revert\n        /* \"#utility.yul\":4389:4550   */\n    tag_446:\n      pop\n        /* \"#utility.yul\":4176:4556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4561:4902   */\n    tag_196:\n        /* \"#utility.yul\":4763:4765   */\n      0x20\n        /* \"#utility.yul\":4745:4766   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4802:4804   */\n      0x11\n        /* \"#utility.yul\":4782:4800   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4775:4805   */\n      mstore\n      shl(0x78, 0x63616c6c6572206e6f74206f776e657221)\n        /* \"#utility.yul\":4836:4838   */\n      0x40\n        /* \"#utility.yul\":4821:4839   */\n      dup3\n      add\n        /* \"#utility.yul\":4814:4861   */\n      mstore\n        /* \"#utility.yul\":4893:4895   */\n      0x60\n        /* \"#utility.yul\":4878:4896   */\n      add\n      swap1\n        /* \"#utility.yul\":4561:4902   */\n      jump\t// out\n        /* \"#utility.yul\":4907:5034   */\n    tag_403:\n        /* \"#utility.yul\":4968:4978   */\n      0x4e487b71\n        /* \"#utility.yul\":4963:4966   */\n      0xe0\n        /* \"#utility.yul\":4959:4979   */\n      shl\n        /* \"#utility.yul\":4956:4957   */\n      0x00\n        /* \"#utility.yul\":4949:4980   */\n      mstore\n        /* \"#utility.yul\":4999:5003   */\n      0x11\n        /* \"#utility.yul\":4996:4997   */\n      0x04\n        /* \"#utility.yul\":4989:5004   */\n      mstore\n        /* \"#utility.yul\":5023:5027   */\n      0x24\n        /* \"#utility.yul\":5020:5021   */\n      0x00\n        /* \"#utility.yul\":5013:5028   */\n      revert\n        /* \"#utility.yul\":5039:5167   */\n    tag_204:\n        /* \"#utility.yul\":5079:5082   */\n      0x00\n        /* \"#utility.yul\":5110:5111   */\n      dup3\n        /* \"#utility.yul\":5106:5112   */\n      not\n        /* \"#utility.yul\":5103:5104   */\n      dup3\n        /* \"#utility.yul\":5100:5113   */\n      gt\n        /* \"#utility.yul\":5097:5136   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":5116:5134   */\n      tag_451\n      tag_403\n      jump\t// in\n    tag_451:\n      pop\n        /* \"#utility.yul\":5152:5161   */\n      add\n      swap1\n        /* \"#utility.yul\":5039:5167   */\n      jump\t// out\n        /* \"#utility.yul\":5172:5587   */\n    tag_208:\n        /* \"#utility.yul\":5374:5376   */\n      0x20\n        /* \"#utility.yul\":5356:5377   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5413:5415   */\n      0x33\n        /* \"#utility.yul\":5393:5411   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5386:5416   */\n      mstore\n        /* \"#utility.yul\":5452:5486   */\n      0x6f6e6c7920627269646765206861732061636365737320746f20746869732063\n        /* \"#utility.yul\":5447:5449   */\n      0x40\n        /* \"#utility.yul\":5432:5450   */\n      dup3\n      add\n        /* \"#utility.yul\":5425:5487   */\n      mstore\n      shl(0x69, 0x3434b632103a37b5b2b710333ab731ba34b7b7)\n        /* \"#utility.yul\":5518:5520   */\n      0x60\n        /* \"#utility.yul\":5503:5521   */\n      dup3\n      add\n        /* \"#utility.yul\":5496:5545   */\n      mstore\n        /* \"#utility.yul\":5577:5580   */\n      0x80\n        /* \"#utility.yul\":5562:5581   */\n      add\n      swap1\n        /* \"#utility.yul\":5172:5587   */\n      jump\t// out\n        /* \"#utility.yul\":6673:7095   */\n    tag_404:\n        /* \"#utility.yul\":6762:6763   */\n      0x01\n        /* \"#utility.yul\":6805:6810   */\n      dup2\n        /* \"#utility.yul\":6762:6763   */\n      dup2\n        /* \"#utility.yul\":6819:7089   */\n    tag_457:\n        /* \"#utility.yul\":6840:6847   */\n      dup1\n        /* \"#utility.yul\":6830:6838   */\n      dup6\n        /* \"#utility.yul\":6827:6848   */\n      gt\n        /* \"#utility.yul\":6819:7089   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":6899:6903   */\n      dup2\n        /* \"#utility.yul\":6895:6896   */\n      0x00\n        /* \"#utility.yul\":6891:6897   */\n      not\n        /* \"#utility.yul\":6887:6904   */\n      div\n        /* \"#utility.yul\":6881:6885   */\n      dup3\n        /* \"#utility.yul\":6878:6905   */\n      gt\n        /* \"#utility.yul\":6875:6928   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":6908:6926   */\n      tag_461\n      tag_403\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":6958:6965   */\n      dup1\n        /* \"#utility.yul\":6948:6956   */\n      dup6\n        /* \"#utility.yul\":6944:6966   */\n      and\n        /* \"#utility.yul\":6941:6996   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":6978:6994   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":6941:6996   */\n    tag_462:\n        /* \"#utility.yul\":7057:7079   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":7017:7032   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":6819:7089   */\n      jump(tag_457)\n    tag_459:\n        /* \"#utility.yul\":6823:6826   */\n      pop\n        /* \"#utility.yul\":6673:7095   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7100:7906   */\n    tag_405:\n        /* \"#utility.yul\":7149:7154   */\n      0x00\n        /* \"#utility.yul\":7179:7187   */\n      dup3\n        /* \"#utility.yul\":7169:7249   */\n      tag_464\n      jumpi\n      pop\n        /* \"#utility.yul\":7220:7221   */\n      0x01\n        /* \"#utility.yul\":7234:7239   */\n      jump(tag_180)\n        /* \"#utility.yul\":7169:7249   */\n    tag_464:\n        /* \"#utility.yul\":7268:7272   */\n      dup2\n        /* \"#utility.yul\":7258:7334   */\n      tag_465\n      jumpi\n      pop\n        /* \"#utility.yul\":7305:7306   */\n      0x00\n        /* \"#utility.yul\":7319:7324   */\n      jump(tag_180)\n        /* \"#utility.yul\":7258:7334   */\n    tag_465:\n        /* \"#utility.yul\":7350:7354   */\n      dup2\n        /* \"#utility.yul\":7368:7369   */\n      0x01\n        /* \"#utility.yul\":7363:7422   */\n      dup2\n      eq\n      tag_467\n      jumpi\n        /* \"#utility.yul\":7436:7437   */\n      0x02\n        /* \"#utility.yul\":7431:7561   */\n      dup2\n      eq\n      tag_468\n      jumpi\n        /* \"#utility.yul\":7343:7561   */\n      jump(tag_466)\n        /* \"#utility.yul\":7363:7422   */\n    tag_467:\n        /* \"#utility.yul\":7393:7394   */\n      0x01\n        /* \"#utility.yul\":7384:7394   */\n      swap2\n      pop\n        /* \"#utility.yul\":7407:7412   */\n      pop\n      jump(tag_180)\n        /* \"#utility.yul\":7431:7561   */\n    tag_468:\n        /* \"#utility.yul\":7468:7471   */\n      0xff\n        /* \"#utility.yul\":7458:7466   */\n      dup5\n        /* \"#utility.yul\":7455:7472   */\n      gt\n        /* \"#utility.yul\":7452:7495   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":7475:7493   */\n      tag_470\n      tag_403\n      jump\t// in\n    tag_470:\n      pop\n      pop\n        /* \"#utility.yul\":7531:7532   */\n      0x01\n        /* \"#utility.yul\":7517:7533   */\n      dup3\n      shl\n        /* \"#utility.yul\":7546:7551   */\n      jump(tag_180)\n        /* \"#utility.yul\":7343:7561   */\n    tag_466:\n      pop\n        /* \"#utility.yul\":7645:7647   */\n      0x20\n        /* \"#utility.yul\":7635:7643   */\n      dup4\n        /* \"#utility.yul\":7632:7648   */\n      lt\n        /* \"#utility.yul\":7626:7629   */\n      0x0133\n        /* \"#utility.yul\":7620:7624   */\n      dup4\n        /* \"#utility.yul\":7617:7630   */\n      lt\n        /* \"#utility.yul\":7613:7649   */\n      and\n        /* \"#utility.yul\":7607:7609   */\n      0x4e\n        /* \"#utility.yul\":7597:7605   */\n      dup5\n        /* \"#utility.yul\":7594:7610   */\n      lt\n        /* \"#utility.yul\":7589:7591   */\n      0x0b\n        /* \"#utility.yul\":7583:7587   */\n      dup5\n        /* \"#utility.yul\":7580:7592   */\n      lt\n        /* \"#utility.yul\":7576:7611   */\n      and\n        /* \"#utility.yul\":7573:7650   */\n      or\n        /* \"#utility.yul\":7570:7729   */\n      iszero\n      tag_471\n      jumpi\n      pop\n        /* \"#utility.yul\":7682:7701   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":7714:7719   */\n      jump(tag_180)\n        /* \"#utility.yul\":7570:7729   */\n    tag_471:\n        /* \"#utility.yul\":7761:7795   */\n      tag_472\n        /* \"#utility.yul\":7786:7794   */\n      dup4\n        /* \"#utility.yul\":7780:7784   */\n      dup4\n        /* \"#utility.yul\":7761:7795   */\n      tag_404\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":7831:7837   */\n      dup1\n        /* \"#utility.yul\":7827:7828   */\n      0x00\n        /* \"#utility.yul\":7823:7829   */\n      not\n        /* \"#utility.yul\":7819:7838   */\n      div\n        /* \"#utility.yul\":7810:7817   */\n      dup3\n        /* \"#utility.yul\":7807:7839   */\n      gt\n        /* \"#utility.yul\":7804:7862   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":7842:7860   */\n      tag_474\n      tag_403\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":7880:7900   */\n      mul\n      swap4\n        /* \"#utility.yul\":7100:7906   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7911:8042   */\n    tag_264:\n        /* \"#utility.yul\":7971:7976   */\n      0x00\n        /* \"#utility.yul\":8000:8036   */\n      tag_335\n        /* \"#utility.yul\":8027:8035   */\n      dup4\n        /* \"#utility.yul\":8021:8025   */\n      dup4\n        /* \"#utility.yul\":8000:8036   */\n      tag_405\n      jump\t// in\n        /* \"#utility.yul\":8397:8565   */\n    tag_268:\n        /* \"#utility.yul\":8437:8444   */\n      0x00\n        /* \"#utility.yul\":8503:8504   */\n      dup2\n        /* \"#utility.yul\":8499:8500   */\n      0x00\n        /* \"#utility.yul\":8495:8501   */\n      not\n        /* \"#utility.yul\":8491:8505   */\n      div\n        /* \"#utility.yul\":8488:8489   */\n      dup4\n        /* \"#utility.yul\":8485:8506   */\n      gt\n        /* \"#utility.yul\":8480:8481   */\n      dup3\n        /* \"#utility.yul\":8473:8482   */\n      iszero\n        /* \"#utility.yul\":8466:8483   */\n      iszero\n        /* \"#utility.yul\":8462:8507   */\n      and\n        /* \"#utility.yul\":8459:8530   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":8510:8528   */\n      tag_480\n      tag_403\n      jump\t// in\n    tag_480:\n      pop\n        /* \"#utility.yul\":8550:8559   */\n      mul\n      swap1\n        /* \"#utility.yul\":8397:8565   */\n      jump\t// out\n        /* \"#utility.yul\":9643:9920   */\n    tag_287:\n        /* \"#utility.yul\":9710:9716   */\n      0x00\n        /* \"#utility.yul\":9763:9765   */\n      0x20\n        /* \"#utility.yul\":9751:9760   */\n      dup3\n        /* \"#utility.yul\":9742:9749   */\n      dup5\n        /* \"#utility.yul\":9738:9761   */\n      sub\n        /* \"#utility.yul\":9734:9766   */\n      slt\n        /* \"#utility.yul\":9731:9783   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":9779:9780   */\n      0x00\n        /* \"#utility.yul\":9776:9777   */\n      dup1\n        /* \"#utility.yul\":9769:9781   */\n      revert\n        /* \"#utility.yul\":9731:9783   */\n    tag_485:\n        /* \"#utility.yul\":9811:9820   */\n      dup2\n        /* \"#utility.yul\":9805:9821   */\n      mload\n        /* \"#utility.yul\":9864:9869   */\n      dup1\n        /* \"#utility.yul\":9857:9870   */\n      iszero\n        /* \"#utility.yul\":9850:9871   */\n      iszero\n        /* \"#utility.yul\":9843:9848   */\n      dup2\n        /* \"#utility.yul\":9840:9872   */\n      eq\n        /* \"#utility.yul\":9830:9890   */\n      tag_335\n      jumpi\n        /* \"#utility.yul\":9886:9887   */\n      0x00\n        /* \"#utility.yul\":9883:9884   */\n      dup1\n        /* \"#utility.yul\":9876:9888   */\n      revert\n        /* \"#utility.yul\":11734:11869   */\n    tag_318:\n        /* \"#utility.yul\":11773:11776   */\n      0x00\n        /* \"#utility.yul\":11794:11811   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":11791:11834   */\n      tag_494\n      jumpi\n        /* \"#utility.yul\":11814:11832   */\n      tag_494\n      tag_403\n      jump\t// in\n    tag_494:\n      pop\n        /* \"#utility.yul\":11861:11862   */\n      0x01\n        /* \"#utility.yul\":11850:11863   */\n      add\n      swap1\n        /* \"#utility.yul\":11734:11869   */\n      jump\t// out\n        /* \"#utility.yul\":11874:12091   */\n    tag_336:\n        /* \"#utility.yul\":11914:11915   */\n      0x00\n        /* \"#utility.yul\":11940:11941   */\n      dup3\n        /* \"#utility.yul\":11930:12062   */\n      tag_496\n      jumpi\n        /* \"#utility.yul\":11984:11994   */\n      0x4e487b71\n        /* \"#utility.yul\":11979:11982   */\n      0xe0\n        /* \"#utility.yul\":11975:11995   */\n      shl\n        /* \"#utility.yul\":11972:11973   */\n      0x00\n        /* \"#utility.yul\":11965:11996   */\n      mstore\n        /* \"#utility.yul\":12019:12023   */\n      0x12\n        /* \"#utility.yul\":12016:12017   */\n      0x04\n        /* \"#utility.yul\":12009:12024   */\n      mstore\n        /* \"#utility.yul\":12047:12051   */\n      0x24\n        /* \"#utility.yul\":12044:12045   */\n      0x00\n        /* \"#utility.yul\":12037:12052   */\n      revert\n        /* \"#utility.yul\":11930:12062   */\n    tag_496:\n      pop\n        /* \"#utility.yul\":12076:12085   */\n      div\n      swap1\n        /* \"#utility.yul\":11874:12091   */\n      jump\t// out\n        /* \"#utility.yul\":15644:15769   */\n    tag_399:\n        /* \"#utility.yul\":15684:15688   */\n      0x00\n        /* \"#utility.yul\":15712:15713   */\n      dup3\n        /* \"#utility.yul\":15709:15710   */\n      dup3\n        /* \"#utility.yul\":15706:15714   */\n      lt\n        /* \"#utility.yul\":15703:15737   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":15717:15735   */\n      tag_508\n      tag_403\n      jump\t// in\n    tag_508:\n      pop\n        /* \"#utility.yul\":15754:15763   */\n      sub\n      swap1\n        /* \"#utility.yul\":15644:15769   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209dc78c23c26b4a7e1a8d367240374e6cc55f28cffcc146fb8ebb6d0c2857364264736f6c634300080f0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1203": {
									"entryPoint": null,
									"id": 1203,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_584": {
									"entryPoint": null,
									"id": 584,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_573": {
									"entryPoint": 545,
									"id": 573,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_402": {
									"entryPoint": 313,
									"id": 402,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@div_975": {
									"entryPoint": 290,
									"id": 975,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1008,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 550,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 926,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5612:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:358:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "220:16:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "235:1:7",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "224:7:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "245:16:7",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "254:7:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "245:5:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "270:13:7",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "278:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "270:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "334:228:7",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "379:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "381:16:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "381:18:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "381:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "354:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "368:1:7",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "364:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "364:6:7"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "372:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "360:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "360:17:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "351:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "351:27:7"
																		},
																		"nodeType": "YulIf",
																		"src": "348:53:7"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "440:29:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "442:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "455:5:7"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "462:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "451:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "451:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "442:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "421:8:7"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "431:7:7"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "417:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "417:22:7"
																		},
																		"nodeType": "YulIf",
																		"src": "414:55:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "482:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "494:4:7"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "500:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "490:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "490:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "482:4:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "518:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "534:7:7"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "543:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "530:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "530:22:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "518:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "303:8:7"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "313:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "300:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "300:21:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "322:3:7",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "296:3:7",
																"statements": []
															},
															"src": "292:270:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "174:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "181:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "194:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "201:4:7",
														"type": ""
													}
												],
												"src": "146:422:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "632:747:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "670:52:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "684:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "693:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "684:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "707:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "652:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "645:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:16:7"
															},
															"nodeType": "YulIf",
															"src": "642:80:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "755:52:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "769:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "778:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "769:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "792:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "741:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "734:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "734:12:7"
															},
															"nodeType": "YulIf",
															"src": "731:76:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "843:52:7",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "857:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "866:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "857:5:7"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "880:5:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "836:59:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "841:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "911:123:7",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "946:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "948:16:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "948:18:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "948:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "931:8:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "941:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "928:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "928:17:7"
																				},
																				"nodeType": "YulIf",
																				"src": "925:43:7"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "981:25:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "994:8:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1004:1:7",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "990:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "990:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "981:5:7"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "1019:5:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "904:130:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "909:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "823:4:7"
															},
															"nodeType": "YulSwitch",
															"src": "816:218:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1132:70:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1146:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1159:4:7"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "1165:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "1155:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1155:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1146:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "1187:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1056:4:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1062:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1053:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1053:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1070:8:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1080:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1067:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1067:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1049:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1049:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1093:4:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1099:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1090:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1090:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1108:8:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1118:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1105:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1105:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1086:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1086:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1046:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1046:77:7"
															},
															"nodeType": "YulIf",
															"src": "1043:159:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1211:57:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1253:4:7"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1259:8:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "1234:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1234:34:7"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "1215:7:7",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "1224:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1313:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1315:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1315:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1315:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "1283:7:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1300:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1296:6:7"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "1304:6:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "1292:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1292:19:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1280:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1280:32:7"
															},
															"nodeType": "YulIf",
															"src": "1277:58:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "1357:7:7"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "1366:6:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:20:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "1344:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "603:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "609:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "622:5:7",
														"type": ""
													}
												],
												"src": "573:806:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1452:72:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1462:56:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1492:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "1502:8:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1512:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1498:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1498:19:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "1471:20:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1471:47:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "1462:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "1423:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "1429:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "1442:5:7",
														"type": ""
													}
												],
												"src": "1384:140:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1581:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1640:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1642:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1642:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1642:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1612:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1605:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1605:9:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1598:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1598:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1620:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1631:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1627:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1627:6:7"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1635:1:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "1623:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1623:14:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1617:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1617:21:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1594:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1594:45:7"
															},
															"nodeType": "YulIf",
															"src": "1591:71:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1671:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1686:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1689:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1682:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1682:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1671:7:7"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1560:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1563:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1569:7:7",
														"type": ""
													}
												],
												"src": "1529:168:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1783:209:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1829:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1838:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1841:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1831:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1831:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1831:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1804:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1813:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1800:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1800:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1825:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1796:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1796:32:7"
															},
															"nodeType": "YulIf",
															"src": "1793:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1854:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1873:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1867:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1867:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1858:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1946:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1955:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1958:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1948:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1948:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1948:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1905:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1916:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1931:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1936:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1927:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1927:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1940:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1923:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1923:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1912:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1912:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1902:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1902:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1895:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1895:50:7"
															},
															"nodeType": "YulIf",
															"src": "1892:70:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1971:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1981:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1971:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1749:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1760:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1772:6:7",
														"type": ""
													}
												],
												"src": "1702:290:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2029:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2046:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2053:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2058:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2049:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2049:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2039:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2039:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2039:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2086:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2089:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2079:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2079:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2079:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2110:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2113:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2103:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2103:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2103:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1997:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2184:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2194:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2208:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2211:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2204:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2204:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2194:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2225:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2255:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2261:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2251:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2251:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2229:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2302:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2304:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2318:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2326:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2304:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2282:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2275:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2275:26:7"
															},
															"nodeType": "YulIf",
															"src": "2272:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2392:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2413:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2420:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2425:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2416:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2416:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2406:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2406:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2406:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2457:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2460:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2450:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2450:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2450:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2485:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2488:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2478:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2478:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2478:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2348:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2371:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2379:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2368:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2368:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2345:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2345:38:7"
															},
															"nodeType": "YulIf",
															"src": "2342:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2164:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2173:6:7",
														"type": ""
													}
												],
												"src": "2129:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2570:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2587:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2590:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2580:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2580:14:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2580:14:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2603:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2621:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2624:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2611:9:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2611:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2603:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2553:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2561:4:7",
														"type": ""
													}
												],
												"src": "2514:121:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2721:464:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2754:425:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2768:11:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2778:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2772:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2799:2:7"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2803:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2792:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2792:17:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2792:17:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2822:31:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2844:2:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2848:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2834:9:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2834:19:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2826:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2866:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2889:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2899:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2906:10:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2918:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2902:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2902:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2895:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2895:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2885:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2885:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2870:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2960:23:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2962:19:7",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2977:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2962:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2942:10:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2954:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2939:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2939:20:7"
																		},
																		"nodeType": "YulIf",
																		"src": "2936:47:7"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2996:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "3010:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3020:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3027:3:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3032:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3023:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3023:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "3016:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3016:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3006:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3006:31:7"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "3000:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3050:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "3063:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "3054:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3148:21:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "3157:5:7"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "3164:2:7"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "3150:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3150:17:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "3150:17:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3098:5:7"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3105:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3095:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3095:13:7"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "3109:26:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3111:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "3124:5:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3131:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3120:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3120:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "3111:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "3091:3:7",
																			"statements": []
																		},
																		"src": "3087:82:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2737:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2742:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2734:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2734:11:7"
															},
															"nodeType": "YulIf",
															"src": "2731:448:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2693:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2700:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2705:10:7",
														"type": ""
													}
												],
												"src": "2640:545:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3275:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3285:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "3300:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3318:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "3321:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "3314:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3314:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3331:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "3327:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3327:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "3310:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3310:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3306:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3306:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3296:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3296:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3342:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3345:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3338:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3338:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3293:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3293:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3285:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3252:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3258:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3266:4:7",
														"type": ""
													}
												],
												"src": "3190:166:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3457:1256:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3467:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3487:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3481:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3481:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3471:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3534:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3536:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3536:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3536:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3506:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3522:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3526:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3518:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3518:10:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3530:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3514:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3514:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3503:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3503:30:7"
															},
															"nodeType": "YulIf",
															"src": "3500:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3609:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3647:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3641:5:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3641:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3615:25:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3615:38:7"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3655:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "3565:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3565:97:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3565:97:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3671:18:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3688:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3675:9:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3698:23:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3717:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3702:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3730:24:7",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3743:11:7"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3730:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3800:656:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3814:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3833:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3845:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3841:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3841:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3829:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3829:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3818:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3862:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3906:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3876:29:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3876:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3866:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3924:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3933:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3928:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4011:172:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4036:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4054:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4059:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4050:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4050:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4044:5:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4044:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4029:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4029:42:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4029:42:7"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4088:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4102:6:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4110:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4098:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4098:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4088:6:7"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4129:40:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4146:9:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "4157:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4142:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4142:27:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4129:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3958:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3961:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3955:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3955:14:7"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3970:28:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3972:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3981:1:7"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3984:11:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3977:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3977:19:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3972:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3951:3:7",
																					"statements": []
																				},
																				"src": "3947:236:7"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4231:166:7",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4249:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4276:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4281:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4272:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4272:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4266:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4266:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4253:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4316:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4328:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "4355:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "4358:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "4351:3:7"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "4351:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "4367:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "4347:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "4347:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "4377:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "4373:3:7"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "4373:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "4343:3:7"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "4343:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "4339:3:7"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4339:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "4324:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4324:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4309:6:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4309:74:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4309:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4202:7:7"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4211:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4199:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4199:19:7"
																				},
																				"nodeType": "YulIf",
																				"src": "4196:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4417:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4431:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4434:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "4427:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4427:14:7"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4443:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4423:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4423:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4410:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4410:36:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4410:36:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3793:663:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3798:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4473:234:7",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4487:14:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4500:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "4491:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4536:67:7",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4554:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4573:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4578:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4569:3:7"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4569:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4563:5:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4563:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4554:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "4517:6:7"
																				},
																				"nodeType": "YulIf",
																				"src": "4514:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4623:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4682:5:7"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4689:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4629:52:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4629:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4616:6:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4616:81:7"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4616:81:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4465:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3773:6:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3781:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3770:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3770:14:7"
															},
															"nodeType": "YulSwitch",
															"src": "3763:944:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3442:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3448:3:7",
														"type": ""
													}
												],
												"src": "3361:1352:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4764:171:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4795:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4816:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4823:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4828:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4819:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4819:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4809:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4809:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4809:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4860:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4863:4:7",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4853:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4853:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4853:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4888:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4891:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4881:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4881:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4881:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4784:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4777:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4777:9:7"
															},
															"nodeType": "YulIf",
															"src": "4774:132:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4915:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4924:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4927:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4920:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4920:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4915:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4749:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4752:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4758:1:7",
														"type": ""
													}
												],
												"src": "4718:217:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5114:181:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5131:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5142:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5124:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5124:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5124:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5165:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5176:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5161:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5181:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5154:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5154:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5154:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5204:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5215:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5200:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5200:18:7"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5220:33:7",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5193:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5193:61:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5193:61:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5263:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5275:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5286:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5271:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5271:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5263:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5091:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5105:4:7",
														"type": ""
													}
												],
												"src": "4940:355:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5348:80:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5375:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5377:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5377:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5377:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5364:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5371:1:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5367:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5367:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5361:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5361:13:7"
															},
															"nodeType": "YulIf",
															"src": "5358:39:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5406:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5417:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5420:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5413:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5413:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5406:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5331:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5334:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5340:3:7",
														"type": ""
													}
												],
												"src": "5300:128:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5534:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5544:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5556:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5567:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5552:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5552:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5544:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5586:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5597:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5579:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5579:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5579:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5503:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5514:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5525:4:7",
														"type": ""
													}
												],
												"src": "5433:177:7"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052620000126012600a62000339565b600b819055620000249060146200034a565b600c55620000446064600c546200012260201b62000fb31790919060201c565b600d55620f4240600e5560405162001f6038038062001f6083398101604081905262000070916200036c565b604051806040016040528060088152602001674d6574616363657360c01b81525060405180604001604052806005815260200164416363657360d81b8152508160039081620000c0919062000442565b506004620000cf828262000442565b505060058054336001600160a01b031991821617909155600680549091166001600160a01b03841617905550600b546200011b90309062000115906305f5e1006200034a565b62000139565b506200054c565b60006200013082846200050e565b90505b92915050565b6001600160a01b038216620001945760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001a8919062000531565b90915550506001600160a01b03821660009081526020819052604081208054839290620001d790849062000531565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200027d57816000190482111562000261576200026162000226565b808516156200026f57918102915b93841c939080029062000241565b509250929050565b600082620002965750600162000133565b81620002a55750600062000133565b8160018114620002be5760028114620002c957620002e9565b600191505062000133565b60ff841115620002dd57620002dd62000226565b50506001821b62000133565b5060208310610133831016604e8410600b84101617156200030e575081810a62000133565b6200031a83836200023c565b806000190482111562000331576200033162000226565b029392505050565b60006200013060ff84168362000285565b600081600019048311821515161562000367576200036762000226565b500290565b6000602082840312156200037f57600080fd5b81516001600160a01b03811681146200039757600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620003c957607f821691505b602082108103620003ea57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200022157600081815260208120601f850160051c81016020861015620004195750805b601f850160051c820191505b818110156200043a5782815560010162000425565b505050505050565b81516001600160401b038111156200045e576200045e6200039e565b62000476816200046f8454620003b4565b84620003f0565b602080601f831160018114620004ae5760008415620004955750858301515b600019600386901b1c1916600185901b1785556200043a565b600085815260208120601f198616915b82811015620004df57888601518255948401946001909101908401620004be565b5085821015620004fe5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000826200052c57634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111562000547576200054762000226565b500190565b611a04806200055c6000396000f3fe6080604052600436106101bb5760003560e01c806379cc6790116100ec578063dd62ed3e1161008a578063e7d53fcb11610064578063e7d53fcb146104fc578063f2fde38b1461050f578063f4f3122e1461052f578063f88979451461054f57600080fd5b8063dd62ed3e14610484578063e181203a146104a4578063e78cea92146104c457600080fd5b8063a457c2d7116100c6578063a457c2d714610404578063a9059cbb14610424578063adbc7cee14610444578063b2938bee1461046457600080fd5b806379cc6790146103af5780638dd14802146103cf57806395d89b41146103ef57600080fd5b80633c3b7995116101595780634d1d03d1116101335780634d1d03d11461030a578063534b1442146103435780636ac5db191461036357806370a082311461037957600080fd5b80633c3b7995146102b457806340c10f19146102ca57806342966c68146102ea57600080fd5b806323b872dd1161019557806323b872dd14610241578063313ce56714610261578063380d831b1461027d578063395093511461029457600080fd5b806306fdde03146101c7578063095ea7b3146101f257806318160ddd1461022257600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101dc610565565b6040516101e9919061158a565b60405180910390f35b3480156101fe57600080fd5b5061021261020d3660046115fb565b6105f7565b60405190151581526020016101e9565b34801561022e57600080fd5b506002545b6040519081526020016101e9565b34801561024d57600080fd5b5061021261025c366004611625565b610611565b34801561026d57600080fd5b50604051601281526020016101e9565b34801561028957600080fd5b50610292610635565b005b3480156102a057600080fd5b506102126102af3660046115fb565b6106a1565b3480156102c057600080fd5b50610233600e5481565b3480156102d657600080fd5b506102926102e53660046115fb565b6106c3565b3480156102f657600080fd5b50610292610305366004611661565b6106fb565b34801561031657600080fd5b50600754600854600954600a546040805194855260208501939093529183015260608201526080016101e9565b34801561034f57600080fd5b5061029261035e366004611661565b610731565b34801561036f57600080fd5b50610233600c5481565b34801561038557600080fd5b5061023361039436600461167a565b6001600160a01b031660009081526020819052604090205490565b3480156103bb57600080fd5b506102926103ca3660046115fb565b6107ce565b3480156103db57600080fd5b506102926103ea36600461167a565b610802565b3480156103fb57600080fd5b506101dc6108d0565b34801561041057600080fd5b5061021261041f3660046115fb565b6108df565b34801561043057600080fd5b5061021261043f3660046115fb565b61095a565b34801561045057600080fd5b5061029261045f366004611695565b610968565b34801561047057600080fd5b5061029261047f3660046116ca565b610a3e565b34801561049057600080fd5b5061023361049f366004611710565b610ba3565b3480156104b057600080fd5b506102926104bf366004611743565b610bce565b3480156104d057600080fd5b506006546104e4906001600160a01b031681565b6040516001600160a01b0390911681526020016101e9565b61021261050a36600461167a565b610c8c565b34801561051b57600080fd5b5061029261052a36600461167a565b610e80565b34801561053b57600080fd5b5061029261054a366004611743565b610f3c565b34801561055b57600080fd5b50610233600d5481565b60606003805461057490611765565b80601f01602080910402602001604051908101604052809291908181526020018280546105a090611765565b80156105ed5780601f106105c2576101008083540402835291602001916105ed565b820191906000526020600020905b8154815290600101906020018083116105d057829003601f168201915b5050505050905090565b600033610605818585610fc6565b60019150505b92915050565b60003361061f8582856110ea565b61062a858585611164565b506001949350505050565b6005546001600160a01b031633146106685760405162461bcd60e51b815260040161065f9061179f565b60405180910390fd5b436008556040514281527fb144be0f16f8d30f2e18ef8f7938d5e90207932d96650e592ff47725716818fb9060200160405180910390a1565b6000336106058185856106b48383610ba3565b6106be91906117e0565b610fc6565b6006546001600160a01b031633146106ed5760405162461bcd60e51b815260040161065f906117f8565b6106f78282611332565b5050565b6006546001600160a01b031633146107255760405162461bcd60e51b815260040161065f906117f8565b61072e81611411565b50565b6005546001600160a01b0316331461075b5760405162461bcd60e51b815260040161065f9061179f565b806000036107935760405162461bcd60e51b81526020600482015260056024820152647a65726f2160d81b604482015260640161065f565b600e8190556040518181527f6d487f3988610155b3a9ef590f8ac170134d24e6505b9ddd3160e34abaa0edaf9060200160405180910390a150565b6006546001600160a01b031633146107f85760405162461bcd60e51b815260040161065f906117f8565b6106f7828261141b565b6005546001600160a01b0316331461082c5760405162461bcd60e51b815260040161065f9061179f565b6001600160a01b0381166108725760405162461bcd60e51b815260206004820152600d60248201526c7a65726f20616464726573732160981b604482015260640161065f565b6040516001600160a01b03821681527fe605ac02ea219003ec58fc9cf4d4b3c5f2d62ec39807b1c63886ddd47a6fcd6e9060200160405180910390a1600680546001600160a01b0319166001600160a01b0392909216919091179055565b60606004805461057490611765565b600033816108ed8286610ba3565b90508381101561094d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161065f565b61062a8286868403610fc6565b600033610605818585611164565b6005546001600160a01b031633146109925760405162461bcd60e51b815260040161065f9061179f565b8247101561099f57600080fd5b60006109ac83600a61192f565b60408051868152602081018690526001600160a01b0385168183015290519192507f4508977418b95bac209196e03356692c2d8f47957dec1c15af1a44cc40d39a04919081900360600190a16001600160a01b0382166108fc610a0f838761193b565b6040518115909202916000818181858888f19350505050158015610a37573d6000803e3d6000fd5b5050505050565b6005546001600160a01b03163314610a685760405162461bcd60e51b815260040161065f9061179f565b6001600160a01b038416610aae5760405162461bcd60e51b815260206004820152600d60248201526c61646472657373207a65726f2160981b604482015260640161065f565b6000610abb83600a61192f565b604080516001600160a01b0388811682526020820188905281830187905285166060820152905191925086917f0206ca7f97d46974ed97b981f879b17e9e1fe17ead63770c806926d28aa5cbd59181900360800190a16001600160a01b03811663a9059cbb84610b2b858961193b565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610b76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9a919061195a565b50505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546001600160a01b03163314610bf85760405162461bcd60e51b815260040161065f9061179f565b8115801590610c0657508015155b610c3a5760405162461bcd60e51b81526020600482015260056024820152645a65726f2160d81b604482015260640161065f565b600d829055600b54610c4c908261193b565b600c5560408051838152602081018390527f3b06ffd21bedfb2c375d7b1bcf74ca4fe1afe205699e39610b3aced7adf6b9e9910160405180910390a15050565b6000600b54600e54610c9e919061193b565b336000908152602081905260409020541115610d085760405162461bcd60e51b815260206004820152602360248201527f596f75207265616368656420796f757220707269766174652073616c65206c696044820152621b5a5d60ea1b606482015260840161065f565b4360075411158015610d1c57506008544311155b610d7c5760405162461bcd60e51b815260206004820152602b60248201527f507269766174652053616c652068617320656e646564206f7220646964206e6f60448201526a1d081cdd185c9d081e595d60aa1b606482015260840161065f565b600d5434906000908210801590610d955750600c548211155b610df05760405162461bcd60e51b815260206004820152602660248201527f4c657373207468616e204d696e696d756d206f72204d6f7265207468616e204d6044820152656178696d756d60d01b606482015260840161065f565b610e17670de0b6b3a7640000610e1184600a5461143090919063ffffffff16565b90610fb3565b600980549192506000610e298361197c565b9190505550610e39303383611164565b600a546040805183815260208101929092527fb887e151dbfcc06b4ce4f67f9bbedaeb16ab224e34c6668858d0310c6d18ffc3910160405180910390a15060019392505050565b6005546001600160a01b03163314610eaa5760405162461bcd60e51b815260040161065f9061179f565b6001600160a01b038116610ef05760405162461bcd60e51b815260206004820152600d60248201526c61646472657373207a65726f2160981b604482015260640161065f565b600580546001600160a01b0319166001600160a01b03831690811790915560405181907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b6005546001600160a01b03163314610f665760405162461bcd60e51b815260040161065f9061179f565b8115801590610f7457508015155b610fa85760405162461bcd60e51b81526020600482015260056024820152645a65726f2160d81b604482015260640161065f565b600891909155600a55565b6000610fbf8284611995565b9392505050565b6001600160a01b0383166110285760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161065f565b6001600160a01b0382166110895760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161065f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006110f68484610ba3565b9050600019811461115e57818110156111515760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161065f565b61115e8484848403610fc6565b50505050565b6001600160a01b0383166111c85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161065f565b6001600160a01b03821661122a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161065f565b6001600160a01b038316600090815260208190526040902054818110156112a25760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161065f565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906112d99084906117e0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161132591815260200190565b60405180910390a361115e565b6001600160a01b0382166113885760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161065f565b806002600082825461139a91906117e0565b90915550506001600160a01b038216600090815260208190526040812080548392906113c79084906117e0565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b61072e338261143c565b6114268233836110ea565b6106f7828261143c565b6000610fbf828461193b565b6001600160a01b03821661149c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161065f565b6001600160a01b038216600090815260208190526040902054818110156115105760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161065f565b6001600160a01b038316600090815260208190526040812083830390556002805484929061153f9084906119b7565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600060208083528351808285015260005b818110156115b75785810183015185820160400152820161159b565b818111156115c9576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146115f657600080fd5b919050565b6000806040838503121561160e57600080fd5b611617836115df565b946020939093013593505050565b60008060006060848603121561163a57600080fd5b611643846115df565b9250611651602085016115df565b9150604084013590509250925092565b60006020828403121561167357600080fd5b5035919050565b60006020828403121561168c57600080fd5b610fbf826115df565b6000806000606084860312156116aa57600080fd5b83359250602084013591506116c1604085016115df565b90509250925092565b600080600080608085870312156116e057600080fd5b6116e9856115df565b93506020850135925060408501359150611705606086016115df565b905092959194509250565b6000806040838503121561172357600080fd5b61172c836115df565b915061173a602084016115df565b90509250929050565b6000806040838503121561175657600080fd5b50508035926020909101359150565b600181811c9082168061177957607f821691505b60208210810361179957634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526011908201527063616c6c6572206e6f74206f776e65722160781b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156117f3576117f36117ca565b500190565b60208082526033908201527f6f6e6c7920627269646765206861732061636365737320746f207468697320636040820152723434b632103a37b5b2b710333ab731ba34b7b760691b606082015260800190565b600181815b8085111561188657816000190482111561186c5761186c6117ca565b8085161561187957918102915b93841c9390800290611850565b509250929050565b60008261189d5750600161060b565b816118aa5750600061060b565b81600181146118c057600281146118ca576118e6565b600191505061060b565b60ff8411156118db576118db6117ca565b50506001821b61060b565b5060208310610133831016604e8410600b8410161715611909575081810a61060b565b611913838361184b565b8060001904821115611927576119276117ca565b029392505050565b6000610fbf838361188e565b6000816000190483118215151615611955576119556117ca565b500290565b60006020828403121561196c57600080fd5b81518015158114610fbf57600080fd5b60006001820161198e5761198e6117ca565b5060010190565b6000826119b257634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156119c9576119c96117ca565b50039056fea26469706673582212209dc78c23c26b4a7e1a8d367240374e6cc55f28cffcc146fb8ebb6d0c2857364264736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x12 PUSH1 0x12 PUSH1 0xA PUSH3 0x339 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE PUSH3 0x24 SWAP1 PUSH1 0x14 PUSH3 0x34A JUMP JUMPDEST PUSH1 0xC SSTORE PUSH3 0x44 PUSH1 0x64 PUSH1 0xC SLOAD PUSH3 0x122 PUSH1 0x20 SHL PUSH3 0xFB3 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xD SSTORE PUSH3 0xF4240 PUSH1 0xE SSTORE PUSH1 0x40 MLOAD PUSH3 0x1F60 CODESIZE SUB DUP1 PUSH3 0x1F60 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x70 SWAP2 PUSH3 0x36C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x4D65746163636573 PUSH1 0xC0 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x4163636573 PUSH1 0xD8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xC0 SWAP2 SWAP1 PUSH3 0x442 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0xCF DUP3 DUP3 PUSH3 0x442 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH3 0x11B SWAP1 ADDRESS SWAP1 PUSH3 0x115 SWAP1 PUSH4 0x5F5E100 PUSH3 0x34A JUMP JUMPDEST PUSH3 0x139 JUMP JUMPDEST POP PUSH3 0x54C JUMP JUMPDEST PUSH1 0x0 PUSH3 0x130 DUP3 DUP5 PUSH3 0x50E JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x194 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x1A8 SWAP2 SWAP1 PUSH3 0x531 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x1D7 SWAP1 DUP5 SWAP1 PUSH3 0x531 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x27D JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x261 JUMPI PUSH3 0x261 PUSH3 0x226 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x26F JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x241 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x296 JUMPI POP PUSH1 0x1 PUSH3 0x133 JUMP JUMPDEST DUP2 PUSH3 0x2A5 JUMPI POP PUSH1 0x0 PUSH3 0x133 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x2BE JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x2C9 JUMPI PUSH3 0x2E9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x133 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x2DD JUMPI PUSH3 0x2DD PUSH3 0x226 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x133 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x30E JUMPI POP DUP2 DUP2 EXP PUSH3 0x133 JUMP JUMPDEST PUSH3 0x31A DUP4 DUP4 PUSH3 0x23C JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x331 JUMPI PUSH3 0x331 PUSH3 0x226 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x130 PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x285 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x367 JUMPI PUSH3 0x367 PUSH3 0x226 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x3C9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3EA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x221 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x419 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x43A JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x425 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x45E JUMPI PUSH3 0x45E PUSH3 0x39E JUMP JUMPDEST PUSH3 0x476 DUP2 PUSH3 0x46F DUP5 SLOAD PUSH3 0x3B4 JUMP JUMPDEST DUP5 PUSH3 0x3F0 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x4AE JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x495 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x43A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x4DF JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x4BE JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x4FE JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x52C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x547 JUMPI PUSH3 0x547 PUSH3 0x226 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH2 0x1A04 DUP1 PUSH3 0x55C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE7D53FCB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE7D53FCB EQ PUSH2 0x4FC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0xF4F3122E EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0xF8897945 EQ PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0xE181203A EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0xE78CEA92 EQ PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0xADBC7CEE EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0xB2938BEE EQ PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x8DD14802 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3C3B7995 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x4D1D03D1 GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x4D1D03D1 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x534B1442 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x6AC5DB19 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3C3B7995 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x380D831B EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1C2 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x565 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x158A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x15FB JUMP JUMPDEST PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x611 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x635 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x2AF CALLDATASIZE PUSH1 0x4 PUSH2 0x15FB JUMP JUMPDEST PUSH2 0x6A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x15FB JUMP JUMPDEST PUSH2 0x6C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x731 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x394 CALLDATASIZE PUSH1 0x4 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0x15FB JUMP JUMPDEST PUSH2 0x7CE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x3EA CALLDATASIZE PUSH1 0x4 PUSH2 0x167A JUMP JUMPDEST PUSH2 0x802 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x8D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x41F CALLDATASIZE PUSH1 0x4 PUSH2 0x15FB JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x43F CALLDATASIZE PUSH1 0x4 PUSH2 0x15FB JUMP JUMPDEST PUSH2 0x95A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x1695 JUMP JUMPDEST PUSH2 0x968 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x47F CALLDATASIZE PUSH1 0x4 PUSH2 0x16CA JUMP JUMPDEST PUSH2 0xA3E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x49F CALLDATASIZE PUSH1 0x4 PUSH2 0x1710 JUMP JUMPDEST PUSH2 0xBA3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x4BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1743 JUMP JUMPDEST PUSH2 0xBCE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x4E4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x212 PUSH2 0x50A CALLDATASIZE PUSH1 0x4 PUSH2 0x167A JUMP JUMPDEST PUSH2 0xC8C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x52A CALLDATASIZE PUSH1 0x4 PUSH2 0x167A JUMP JUMPDEST PUSH2 0xE80 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x54A CALLDATASIZE PUSH1 0x4 PUSH2 0x1743 JUMP JUMPDEST PUSH2 0xF3C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x574 SWAP1 PUSH2 0x1765 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5A0 SWAP1 PUSH2 0x1765 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5ED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5D0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x605 DUP2 DUP6 DUP6 PUSH2 0xFC6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x61F DUP6 DUP3 DUP6 PUSH2 0x10EA JUMP JUMPDEST PUSH2 0x62A DUP6 DUP6 DUP6 PUSH2 0x1164 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x668 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP1 PUSH2 0x179F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST NUMBER PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0xB144BE0F16F8D30F2E18EF8F7938D5E90207932D96650E592FF47725716818FB SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x605 DUP2 DUP6 DUP6 PUSH2 0x6B4 DUP4 DUP4 PUSH2 0xBA3 JUMP JUMPDEST PUSH2 0x6BE SWAP2 SWAP1 PUSH2 0x17E0 JUMP JUMPDEST PUSH2 0xFC6 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP1 PUSH2 0x17F8 JUMP JUMPDEST PUSH2 0x6F7 DUP3 DUP3 PUSH2 0x1332 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x725 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP1 PUSH2 0x17F8 JUMP JUMPDEST PUSH2 0x72E DUP2 PUSH2 0x1411 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x75B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP1 PUSH2 0x179F JUMP JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x793 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x7A65726F21 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x6D487F3988610155B3A9EF590F8AC170134D24E6505B9DDD3160E34ABAA0EDAF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP1 PUSH2 0x17F8 JUMP JUMPDEST PUSH2 0x6F7 DUP3 DUP3 PUSH2 0x141B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x82C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP1 PUSH2 0x179F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x872 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x7A65726F206164647265737321 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 MSTORE PUSH32 0xE605AC02EA219003EC58FC9CF4D4B3C5F2D62EC39807B1C63886DDD47A6FCD6E SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x574 SWAP1 PUSH2 0x1765 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x8ED DUP3 DUP7 PUSH2 0xBA3 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x94D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x65F JUMP JUMPDEST PUSH2 0x62A DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xFC6 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x605 DUP2 DUP6 DUP6 PUSH2 0x1164 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x992 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP1 PUSH2 0x179F JUMP JUMPDEST DUP3 SELFBALANCE LT ISZERO PUSH2 0x99F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9AC DUP4 PUSH1 0xA PUSH2 0x192F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0x4508977418B95BAC209196E03356692C2D8F47957DEC1C15AF1A44CC40D39A04 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8FC PUSH2 0xA0F DUP4 DUP8 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA37 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP1 PUSH2 0x179F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xAAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x61646472657373207A65726F21 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xABB DUP4 PUSH1 0xA PUSH2 0x192F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 DUP4 ADD DUP8 SWAP1 MSTORE DUP6 AND PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP DUP7 SWAP2 PUSH32 0x206CA7F97D46974ED97B981F879B17E9E1FE17EAD63770C806926D28AA5CBD5 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH4 0xA9059CBB DUP5 PUSH2 0xB2B DUP6 DUP10 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB9A SWAP2 SWAP1 PUSH2 0x195A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP1 PUSH2 0x179F JUMP JUMPDEST DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xC06 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST PUSH2 0xC3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x5A65726F21 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0xD DUP3 SWAP1 SSTORE PUSH1 0xB SLOAD PUSH2 0xC4C SWAP1 DUP3 PUSH2 0x193B JUMP JUMPDEST PUSH1 0xC SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x3B06FFD21BEDFB2C375D7B1BCF74CA4FE1AFE205699E39610B3ACED7ADF6B9E9 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD PUSH1 0xE SLOAD PUSH2 0xC9E SWAP2 SWAP1 PUSH2 0x193B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0xD08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75207265616368656420796F757220707269766174652073616C65206C69 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1B5A5D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x65F JUMP JUMPDEST NUMBER PUSH1 0x7 SLOAD GT ISZERO DUP1 ISZERO PUSH2 0xD1C JUMPI POP PUSH1 0x8 SLOAD NUMBER GT ISZERO JUMPDEST PUSH2 0xD7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x507269766174652053616C652068617320656E646564206F7220646964206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1D081CDD185C9D081E595D PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0xD SLOAD CALLVALUE SWAP1 PUSH1 0x0 SWAP1 DUP3 LT DUP1 ISZERO SWAP1 PUSH2 0xD95 JUMPI POP PUSH1 0xC SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0xDF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C657373207468616E204D696E696D756D206F72204D6F7265207468616E204D PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6178696D756D PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x65F JUMP JUMPDEST PUSH2 0xE17 PUSH8 0xDE0B6B3A7640000 PUSH2 0xE11 DUP5 PUSH1 0xA SLOAD PUSH2 0x1430 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xFB3 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 PUSH2 0xE29 DUP4 PUSH2 0x197C JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0xE39 ADDRESS CALLER DUP4 PUSH2 0x1164 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xB887E151DBFCC06B4CE4F67F9BBEDAEB16AB224E34C6668858D0310C6D18FFC3 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP1 PUSH2 0x179F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x61646472657373207A65726F21 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP1 PUSH2 0x179F JUMP JUMPDEST DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xF74 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST PUSH2 0xFA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x5A65726F21 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFBF DUP3 DUP5 PUSH2 0x1995 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1028 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1089 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F6 DUP5 DUP5 PUSH2 0xBA3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x115E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1151 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65F JUMP JUMPDEST PUSH2 0x115E DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xFC6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x122A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x12A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x12D9 SWAP1 DUP5 SWAP1 PUSH2 0x17E0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1325 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1388 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65F JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x139A SWAP2 SWAP1 PUSH2 0x17E0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x13C7 SWAP1 DUP5 SWAP1 PUSH2 0x17E0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x72E CALLER DUP3 PUSH2 0x143C JUMP JUMPDEST PUSH2 0x1426 DUP3 CALLER DUP4 PUSH2 0x10EA JUMP JUMPDEST PUSH2 0x6F7 DUP3 DUP3 PUSH2 0x143C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFBF DUP3 DUP5 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x149C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1510 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x153F SWAP1 DUP5 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15B7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x159B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x15C9 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x15F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x160E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1617 DUP4 PUSH2 0x15DF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x163A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1643 DUP5 PUSH2 0x15DF JUMP JUMPDEST SWAP3 POP PUSH2 0x1651 PUSH1 0x20 DUP6 ADD PUSH2 0x15DF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x168C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFBF DUP3 PUSH2 0x15DF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x16C1 PUSH1 0x40 DUP6 ADD PUSH2 0x15DF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16E9 DUP6 PUSH2 0x15DF JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1705 PUSH1 0x60 DUP7 ADD PUSH2 0x15DF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x172C DUP4 PUSH2 0x15DF JUMP JUMPDEST SWAP2 POP PUSH2 0x173A PUSH1 0x20 DUP5 ADD PUSH2 0x15DF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1756 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1779 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1799 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x63616C6C6572206E6F74206F776E657221 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x17F3 JUMPI PUSH2 0x17F3 PUSH2 0x17CA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x33 SWAP1 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920627269646765206861732061636365737320746F20746869732063 PUSH1 0x40 DUP3 ADD MSTORE PUSH19 0x3434B632103A37B5B2B710333AB731BA34B7B7 PUSH1 0x69 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1886 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x186C JUMPI PUSH2 0x186C PUSH2 0x17CA JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1879 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1850 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x189D JUMPI POP PUSH1 0x1 PUSH2 0x60B JUMP JUMPDEST DUP2 PUSH2 0x18AA JUMPI POP PUSH1 0x0 PUSH2 0x60B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x18C0 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x18CA JUMPI PUSH2 0x18E6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x60B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x18DB JUMPI PUSH2 0x18DB PUSH2 0x17CA JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x60B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1909 JUMPI POP DUP2 DUP2 EXP PUSH2 0x60B JUMP JUMPDEST PUSH2 0x1913 DUP4 DUP4 PUSH2 0x184B JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1927 JUMPI PUSH2 0x1927 PUSH2 0x17CA JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFBF DUP4 DUP4 PUSH2 0x188E JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1955 JUMPI PUSH2 0x1955 PUSH2 0x17CA JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x196C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x198E JUMPI PUSH2 0x198E PUSH2 0x17CA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x19B2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x19C9 JUMPI PUSH2 0x19C9 PUSH2 0x17CA JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0xC7 DUP13 0x23 0xC2 PUSH12 0x4A7E1A8D367240374E6CC55F 0x28 0xCF 0xFC 0xC1 CHAINID 0xFB DUP15 0xBB PUSH14 0xC2857364264736F6C634300080F STOP CALLER ",
							"sourceMap": "251:4802:6:-:0;;;523:15;3175:2:0;523::6;:15;:::i;:::-;499:39;;;;565:9;;:2;:9;:::i;:::-;544:30;;601:12;609:3;601;;:7;;;;;;:12;;;;:::i;:::-;580:33;;649:7;619:37;;1270:196;;;;;;;;;;;;;;;;;;:::i;:::-;1978:113:0;;;;;;;;;;;;;-1:-1:-1;;;1978:113:0;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:0;;;2052:5;2044;:13;;;;;;:::i;:::-;-1:-1:-1;2067:7:0;:17;2077:7;2067;:17;:::i;:::-;-1:-1:-1;;1341:5:6::1;:18:::0;;1349:10:::1;-1:-1:-1::0;;;;;;1341:18:6;;::::1;;::::0;;;1365:6:::1;:16:::0;;;;::::1;-1:-1:-1::0;;;;;1365:16:6;::::1;;::::0;;-1:-1:-1;1422:4:6::1;::::0;1388:39:::1;::::0;1403:4:::1;::::0;1410:16:::1;::::0;:9:::1;:16;:::i;:::-;1388:5;:39::i;:::-;1270:196:::0;251:4802;;3850:96:5;3908:7;3934:5;3938:1;3934;:5;:::i;:::-;3927:12;;3850:96;;;;;:::o;8402:389:0:-;-1:-1:-1;;;;;8485:21:0;;8477:65;;;;-1:-1:-1;;;8477:65:0;;5142:2:7;8477:65:0;;;5124:21:7;5181:2;5161:18;;;5154:30;5220:33;5200:18;;;5193:61;5271:18;;8477:65:0;;;;;;;;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8645:18:0;;:9;:18;;;;;;;;;;:28;;8667:6;;8645:9;:28;;8667:6;;8645:28;:::i;:::-;;;;-1:-1:-1;;8688:37:0;;5579:25:7;;;-1:-1:-1;;;;;8688:37:0;;;8705:1;;8688:37;;5567:2:7;5552:18;8688:37:0;;;;;;;8402:389;;:::o;11786:121::-;;;;:::o;14:127:7:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:422;235:1;278:5;235:1;292:270;313:7;303:8;300:21;292:270;;;372:4;368:1;364:6;360:17;354:4;351:27;348:53;;;381:18;;:::i;:::-;431:7;421:8;417:22;414:55;;;451:16;;;;414:55;530:22;;;;490:15;;;;292:270;;;296:3;146:422;;;;;:::o;573:806::-;622:5;652:8;642:80;;-1:-1:-1;693:1:7;707:5;;642:80;741:4;731:76;;-1:-1:-1;778:1:7;792:5;;731:76;823:4;841:1;836:59;;;;909:1;904:130;;;;816:218;;836:59;866:1;857:10;;880:5;;;904:130;941:3;931:8;928:17;925:43;;;948:18;;:::i;:::-;-1:-1:-1;;1004:1:7;990:16;;1019:5;;816:218;;1118:2;1108:8;1105:16;1099:3;1093:4;1090:13;1086:36;1080:2;1070:8;1067:16;1062:2;1056:4;1053:12;1049:35;1046:77;1043:159;;;-1:-1:-1;1155:19:7;;;1187:5;;1043:159;1234:34;1259:8;1253:4;1234:34;:::i;:::-;1304:6;1300:1;1296:6;1292:19;1283:7;1280:32;1277:58;;;1315:18;;:::i;:::-;1353:20;;573:806;-1:-1:-1;;;573:806:7:o;1384:140::-;1442:5;1471:47;1512:4;1502:8;1498:19;1492:4;1471:47;:::i;1529:168::-;1569:7;1635:1;1631;1627:6;1623:14;1620:1;1617:21;1612:1;1605:9;1598:17;1594:45;1591:71;;;1642:18;;:::i;:::-;-1:-1:-1;1682:9:7;;1529:168::o;1702:290::-;1772:6;1825:2;1813:9;1804:7;1800:23;1796:32;1793:52;;;1841:1;1838;1831:12;1793:52;1867:16;;-1:-1:-1;;;;;1912:31:7;;1902:42;;1892:70;;1958:1;1955;1948:12;1892:70;1981:5;1702:290;-1:-1:-1;;;1702:290:7:o;1997:127::-;2058:10;2053:3;2049:20;2046:1;2039:31;2089:4;2086:1;2079:15;2113:4;2110:1;2103:15;2129:380;2208:1;2204:12;;;;2251;;;2272:61;;2326:4;2318:6;2314:17;2304:27;;2272:61;2379:2;2371:6;2368:14;2348:18;2345:38;2342:161;;2425:10;2420:3;2416:20;2413:1;2406:31;2460:4;2457:1;2450:15;2488:4;2485:1;2478:15;2342:161;;2129:380;;;:::o;2640:545::-;2742:2;2737:3;2734:11;2731:448;;;2778:1;2803:5;2799:2;2792:17;2848:4;2844:2;2834:19;2918:2;2906:10;2902:19;2899:1;2895:27;2889:4;2885:38;2954:4;2942:10;2939:20;2936:47;;;-1:-1:-1;2977:4:7;2936:47;3032:2;3027:3;3023:12;3020:1;3016:20;3010:4;3006:31;2996:41;;3087:82;3105:2;3098:5;3095:13;3087:82;;;3150:17;;;3131:1;3120:13;3087:82;;;3091:3;;;2640:545;;;:::o;3361:1352::-;3481:10;;-1:-1:-1;;;;;3503:30:7;;3500:56;;;3536:18;;:::i;:::-;3565:97;3655:6;3615:38;3647:4;3641:11;3615:38;:::i;:::-;3609:4;3565:97;:::i;:::-;3717:4;;3781:2;3770:14;;3798:1;3793:663;;;;4500:1;4517:6;4514:89;;;-1:-1:-1;4569:19:7;;;4563:26;4514:89;-1:-1:-1;;3318:1:7;3314:11;;;3310:24;3306:29;3296:40;3342:1;3338:11;;;3293:57;4616:81;;3763:944;;3793:663;2587:1;2580:14;;;2624:4;2611:18;;-1:-1:-1;;3829:20:7;;;3947:236;3961:7;3958:1;3955:14;3947:236;;;4050:19;;;4044:26;4029:42;;4142:27;;;;4110:1;4098:14;;;;3977:19;;3947:236;;;3951:3;4211:6;4202:7;4199:19;4196:201;;;4272:19;;;4266:26;-1:-1:-1;;4355:1:7;4351:14;;;4367:3;4347:24;4343:37;4339:42;4324:58;4309:74;;4196:201;-1:-1:-1;;;;;4443:1:7;4427:14;;;4423:22;4410:36;;-1:-1:-1;3361:1352:7:o;4718:217::-;4758:1;4784;4774:132;;4828:10;4823:3;4819:20;4816:1;4809:31;4863:4;4860:1;4853:15;4891:4;4888:1;4881:15;4774:132;-1:-1:-1;4920:9:7;;4718:217::o;5300:128::-;5340:3;5371:1;5367:6;5364:1;5361:13;5358:39;;;5377:18;;:::i;:::-;-1:-1:-1;5413:9:7;;5300:128::o;5433:177::-;251:4802:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1630": {
									"entryPoint": null,
									"id": 1630,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_584": {
									"entryPoint": null,
									"id": 584,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_519": {
									"entryPoint": 4038,
									"id": 519,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_573": {
									"entryPoint": null,
									"id": 573,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_474": {
									"entryPoint": 5180,
									"id": 474,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_402": {
									"entryPoint": 4914,
									"id": 402,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_744": {
									"entryPoint": null,
									"id": 744,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_562": {
									"entryPoint": 4330,
									"id": 562,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_346": {
									"entryPoint": 4452,
									"id": 346,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_141": {
									"entryPoint": 2979,
									"id": 141,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_166": {
									"entryPoint": 1527,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_98": {
									"entryPoint": null,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@bridge_1082": {
									"entryPoint": null,
									"id": 1082,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burnFrom_1614": {
									"entryPoint": 1998,
									"id": 1614,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burnFrom_706": {
									"entryPoint": 5147,
									"id": 706,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_1594": {
									"entryPoint": 1787,
									"id": 1594,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@burn_685": {
									"entryPoint": 5137,
									"id": 685,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeMinMaxPrivateSale_1415": {
									"entryPoint": 3022,
									"id": 1415,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_269": {
									"entryPoint": 2271,
									"id": 269,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_975": {
									"entryPoint": 4019,
									"id": 975,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@endSale_1379": {
									"entryPoint": 1589,
									"id": 1379,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@increaseAllowance_228": {
									"entryPoint": 1697,
									"id": 228,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@max_1101": {
									"entryPoint": null,
									"id": 1101,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@min_1107": {
									"entryPoint": null,
									"id": 1107,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1577": {
									"entryPoint": 1731,
									"id": 1577,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mul_960": {
									"entryPoint": 5168,
									"id": 960,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_54": {
									"entryPoint": 1381,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@privateLimit_1110": {
									"entryPoint": null,
									"id": 1110,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@privateSale_1316": {
									"entryPoint": 3212,
									"id": 1316,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@setBridge_1561": {
									"entryPoint": 2050,
									"id": 1561,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPrivateLimit_1438": {
									"entryPoint": 1841,
									"id": 1438,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@startSale_1363": {
									"entryPoint": 3900,
									"id": 1363,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_64": {
									"entryPoint": 2256,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 1553,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_1230": {
									"entryPoint": 3712,
									"id": 1230,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_123": {
									"entryPoint": 2394,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@viewSale_1334": {
									"entryPoint": null,
									"id": 1334,
									"parameterSlots": 0,
									"returnSlots": 4
								},
								"@withdrawalBNB_1535": {
									"entryPoint": 2408,
									"id": 1535,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@withdrawalToken_1491": {
									"entryPoint": 2622,
									"id": 1491,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_address": {
									"entryPoint": 5834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_address": {
									"entryPoint": 5781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_03b09a122d7f425a13e5cc389b8c58328ede0f4e779147f4da5b67b50d2c7986__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_15899f662d7a614bf3c57644e7510671708691155c8806292fb4f45c1016663c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1c2d3c13e86f28ed18ad4b34d675b8ac811f8a03f815d44ab828417c04bb25b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_370c22c2430393d7d7dd6648674dd2ba5a07f9235dcf5c9a05680c4cd1efc989__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b56df502a2942e85cf034699d7908f5e5acd2577a219c55769be254bc3ea7d6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_46305072fb50c0438bd7a65f37da664a0a7c165dbfa7fd52c439a808fba616ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b8c03831c8bbcc5ea6afa167bff5a9451576692b7afd8364ac3181fc924bce33__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d431182fd6257b1ca59b92a47fb2c111c67355bdc03daf258921305a235e0ec5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e7ef5c99ec469b3c82cc6dc25415a6965ed6f3f728a0f401ff6d4d4d4ba4f8b5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 6219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 6447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 6286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6090,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15771:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:7",
																"statements": []
															},
															"src": "294:140:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:7"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:7"
															},
															"nodeType": "YulIf",
															"src": "443:91:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:7",
														"type": ""
													}
												],
												"src": "14:597:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:7"
															},
															"nodeType": "YulIf",
															"src": "713:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:7",
														"type": ""
													}
												],
												"src": "616:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:7"
															},
															"nodeType": "YulIf",
															"src": "891:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:7",
														"type": ""
													}
												],
												"src": "794:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:7",
														"type": ""
													}
												],
												"src": "1053:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:7",
														"type": ""
													}
												],
												"src": "1245:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:7"
															},
															"nodeType": "YulIf",
															"src": "1541:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:7",
														"type": ""
													}
												],
												"src": "1427:328:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:7",
														"type": ""
													}
												],
												"src": "1760:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:110:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:7"
															},
															"nodeType": "YulIf",
															"src": "2029:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2113:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2100:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:7",
														"type": ""
													}
												],
												"src": "1949:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2319:206:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2329:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2341:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2352:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2337:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2337:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2329:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2372:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2383:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2365:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2365:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2365:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2410:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2421:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2406:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2406:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2426:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2399:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2399:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2399:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2453:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2464:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2449:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2449:18:7"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2469:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2442:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2442:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2442:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2496:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2507:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2492:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2492:18:7"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "2512:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2485:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2485:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2485:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2264:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2275:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2283:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2291:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2299:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2310:4:7",
														"type": ""
													}
												],
												"src": "2134:391:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2600:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2646:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2655:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2658:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2648:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2648:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2648:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2621:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2630:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2617:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2617:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2642:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2613:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2613:32:7"
															},
															"nodeType": "YulIf",
															"src": "2610:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2671:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2700:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2681:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2681:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2671:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2566:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2577:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2589:6:7",
														"type": ""
													}
												],
												"src": "2530:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2825:218:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2871:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2880:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2883:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2873:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2873:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2873:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2846:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2855:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2842:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2842:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2867:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2838:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2838:32:7"
															},
															"nodeType": "YulIf",
															"src": "2835:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2896:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2919:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2906:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2906:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2896:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2938:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2965:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2976:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2961:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2961:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2948:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2948:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2938:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2989:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3022:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3033:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3018:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3018:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2999:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:38:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2989:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2775:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2786:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2798:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2806:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2814:6:7",
														"type": ""
													}
												],
												"src": "2721:322:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3169:276:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3216:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3225:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3228:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3218:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3218:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3218:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3190:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3199:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3186:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3186:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3211:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3182:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:33:7"
															},
															"nodeType": "YulIf",
															"src": "3179:53:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3241:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3270:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3251:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3251:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3241:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3289:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3316:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3327:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3312:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3312:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3299:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3299:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3289:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3340:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3367:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3378:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3363:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3363:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3350:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3350:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3340:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3391:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3424:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3435:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3420:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3420:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3401:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3401:38:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3391:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3111:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3122:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3134:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3142:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3150:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3158:6:7",
														"type": ""
													}
												],
												"src": "3048:397:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3537:173:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3583:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3592:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3595:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3585:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3585:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3585:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3558:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3567:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3554:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3554:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3579:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3550:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3550:32:7"
															},
															"nodeType": "YulIf",
															"src": "3547:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3608:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3637:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3618:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3618:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3608:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3656:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3689:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3700:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3685:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3685:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3666:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3666:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3656:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3495:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3506:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3518:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3526:6:7",
														"type": ""
													}
												],
												"src": "3450:260:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3802:161:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3848:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3857:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3860:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3850:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3850:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3850:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3823:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3832:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3819:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3819:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3844:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3815:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3815:32:7"
															},
															"nodeType": "YulIf",
															"src": "3812:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3873:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3896:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3883:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3883:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3873:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3915:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3942:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3953:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3938:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3938:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3925:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3925:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3915:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3760:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3771:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3783:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3791:6:7",
														"type": ""
													}
												],
												"src": "3715:248:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4069:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4079:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4091:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4102:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4087:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4087:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4079:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4121:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4136:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4152:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4157:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4148:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4148:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4161:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4144:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4144:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4132:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4132:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4114:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4114:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4114:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4038:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4049:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4060:4:7",
														"type": ""
													}
												],
												"src": "3968:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4231:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4241:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4255:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4258:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4251:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4251:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4241:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4272:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4302:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4308:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4298:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4298:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4276:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4349:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4351:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4365:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4373:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4361:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4361:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4351:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4329:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4322:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4322:26:7"
															},
															"nodeType": "YulIf",
															"src": "4319:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4439:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4460:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4467:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4472:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4463:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4463:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4453:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4453:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4453:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4504:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4507:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4497:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4497:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4497:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4532:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4535:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4525:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4525:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4525:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4395:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4418:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4426:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4415:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4415:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4392:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4392:38:7"
															},
															"nodeType": "YulIf",
															"src": "4389:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4211:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4220:6:7",
														"type": ""
													}
												],
												"src": "4176:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4735:167:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4752:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4763:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4745:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4745:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4786:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4797:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4782:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4782:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4802:2:7",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4775:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4775:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4775:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4825:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4836:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4821:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4821:18:7"
																	},
																	{
																		"hexValue": "63616c6c6572206e6f74206f776e657221",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4841:19:7",
																		"type": "",
																		"value": "caller not owner!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4814:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4814:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4870:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4882:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4893:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4878:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4878:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4870:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_03b09a122d7f425a13e5cc389b8c58328ede0f4e779147f4da5b67b50d2c7986__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4712:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4726:4:7",
														"type": ""
													}
												],
												"src": "4561:341:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4939:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4956:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4963:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4968:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4959:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4959:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4949:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4949:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4949:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4996:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4999:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4989:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4989:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4989:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5020:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5023:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5013:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5013:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5013:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4907:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5087:80:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5114:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5116:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5116:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5116:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5103:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5110:1:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5106:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5106:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5100:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5100:13:7"
															},
															"nodeType": "YulIf",
															"src": "5097:39:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5145:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5156:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5159:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5152:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5152:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5145:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5070:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5073:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5079:3:7",
														"type": ""
													}
												],
												"src": "5039:128:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5346:241:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5363:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5374:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5356:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5356:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5356:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5397:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5408:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5393:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5393:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:7",
																		"type": "",
																		"value": "51"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5386:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5386:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5386:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5436:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5447:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5432:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5432:18:7"
																	},
																	{
																		"hexValue": "6f6e6c7920627269646765206861732061636365737320746f20746869732063",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5452:34:7",
																		"type": "",
																		"value": "only bridge has access to this c"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5425:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5425:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5425:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5507:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5518:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5503:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5503:18:7"
																	},
																	{
																		"hexValue": "68696c6420746f6b656e2066756e6374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5523:21:7",
																		"type": "",
																		"value": "hild token function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5496:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5496:49:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5496:49:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5554:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5566:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5577:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5562:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5562:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5554:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d431182fd6257b1ca59b92a47fb2c111c67355bdc03daf258921305a235e0ec5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5323:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5337:4:7",
														"type": ""
													}
												],
												"src": "5172:415:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5766:154:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5783:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5794:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5776:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5776:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5776:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5817:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5828:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5813:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5813:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5833:1:7",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5806:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5806:29:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5806:29:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5855:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5866:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5851:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5851:18:7"
																	},
																	{
																		"hexValue": "7a65726f21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5871:7:7",
																		"type": "",
																		"value": "zero!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5844:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5844:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5844:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5888:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5900:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5911:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5896:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5896:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5888:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_370c22c2430393d7d7dd6648674dd2ba5a07f9235dcf5c9a05680c4cd1efc989__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5743:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5757:4:7",
														"type": ""
													}
												],
												"src": "5592:328:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6099:163:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6116:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6127:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6109:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6109:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6109:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6150:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6161:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6146:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6146:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6166:2:7",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6139:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6139:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6139:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6189:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6200:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6185:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6185:18:7"
																	},
																	{
																		"hexValue": "7a65726f206164647265737321",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6205:15:7",
																		"type": "",
																		"value": "zero address!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6178:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6178:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6178:43:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6230:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6242:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6253:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6238:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6238:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6230:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e7ef5c99ec469b3c82cc6dc25415a6965ed6f3f728a0f401ff6d4d4d4ba4f8b5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6076:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6090:4:7",
														"type": ""
													}
												],
												"src": "5925:337:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6441:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6458:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6469:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6451:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6451:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6451:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6492:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6503:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6488:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6488:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6508:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6481:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6481:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6481:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6531:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6542:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6527:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6527:18:7"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6547:34:7",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6520:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6520:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6520:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6602:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6613:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6598:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6598:18:7"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6618:7:7",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6591:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6591:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6591:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6635:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6647:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6658:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6643:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6643:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6635:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6418:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6432:4:7",
														"type": ""
													}
												],
												"src": "6267:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6737:358:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6747:16:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6762:1:7",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "6751:7:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6772:16:7",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "6781:7:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "6772:5:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6797:13:7",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "6805:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "6797:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6861:228:7",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6906:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "6908:16:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6908:18:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6908:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "6881:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6895:1:7",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "6891:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6891:6:7"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "6899:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "6887:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6887:17:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "6878:2:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6878:27:7"
																		},
																		"nodeType": "YulIf",
																		"src": "6875:53:7"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6967:29:7",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6969:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "6982:5:7"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "6989:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "6978:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6978:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "6969:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "6948:8:7"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "6958:7:7"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6944:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6944:22:7"
																		},
																		"nodeType": "YulIf",
																		"src": "6941:55:7"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7009:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7021:4:7"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7027:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "7017:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7017:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "7009:4:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7045:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "7061:7:7"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "7070:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "7057:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7057:22:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "7045:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6830:8:7"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "6840:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6827:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6827:21:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6849:3:7",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6823:3:7",
																"statements": []
															},
															"src": "6819:270:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "6701:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "6708:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "6721:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "6728:4:7",
														"type": ""
													}
												],
												"src": "6673:422:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7159:747:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7197:52:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7211:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7220:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "7211:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "7234:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7179:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7172:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7172:16:7"
															},
															"nodeType": "YulIf",
															"src": "7169:80:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7282:52:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7296:10:7",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7305:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "7296:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "7319:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7268:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7261:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7261:12:7"
															},
															"nodeType": "YulIf",
															"src": "7258:76:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7370:52:7",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "7384:10:7",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7393:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "7384:5:7"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "7407:5:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7363:59:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7368:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7438:123:7",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7473:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "7475:16:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7475:18:7"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7475:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "7458:8:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7468:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "7455:2:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7455:17:7"
																				},
																				"nodeType": "YulIf",
																				"src": "7452:43:7"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "7508:25:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "7521:8:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7531:1:7",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7517:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7517:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "7508:5:7"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "7546:5:7"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7431:130:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7436:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "7350:4:7"
															},
															"nodeType": "YulSwitch",
															"src": "7343:218:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7659:70:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7673:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7686:4:7"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "7692:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "7682:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7682:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "7673:5:7"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "7714:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "7583:4:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7589:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7580:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7580:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "7597:8:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7607:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7594:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7594:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7576:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7576:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "7620:4:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7626:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7617:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7617:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "7635:8:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7645:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7632:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7632:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7613:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7613:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7573:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7573:77:7"
															},
															"nodeType": "YulIf",
															"src": "7570:159:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7738:57:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7780:4:7"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7786:8:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "7761:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7761:34:7"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "7742:7:7",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "7751:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7840:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7842:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7842:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7842:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "7810:7:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7827:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "7823:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7823:6:7"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "7831:6:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "7819:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7819:19:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7807:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7807:32:7"
															},
															"nodeType": "YulIf",
															"src": "7804:58:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7871:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "7884:7:7"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "7893:6:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7880:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7880:20:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7871:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "7130:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "7136:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "7149:5:7",
														"type": ""
													}
												],
												"src": "7100:806:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7981:61:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7991:45:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8021:4:7"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "8027:8:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "8000:20:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8000:36:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7991:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "7952:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "7958:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "7971:5:7",
														"type": ""
													}
												],
												"src": "7911:131:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8204:188:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8214:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8226:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8237:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8222:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8222:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8214:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8256:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8267:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8249:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8249:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8249:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8294:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8305:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8290:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8290:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8310:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8283:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8283:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8283:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8337:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8348:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8333:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8333:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "8357:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8373:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8378:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8369:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8369:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8382:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8365:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8365:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8353:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8353:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8326:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8326:60:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8326:60:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8157:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8168:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8176:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8184:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8195:4:7",
														"type": ""
													}
												],
												"src": "8047:345:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8449:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8508:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8510:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8510:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8510:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8480:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8473:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8473:9:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8466:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8466:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8488:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8499:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "8495:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8495:6:7"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8503:1:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "8491:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8491:14:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8485:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8485:21:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8462:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8462:45:7"
															},
															"nodeType": "YulIf",
															"src": "8459:71:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8539:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8554:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8557:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8550:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8550:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "8539:7:7"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8428:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8431:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "8437:7:7",
														"type": ""
													}
												],
												"src": "8397:168:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8744:163:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8761:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8772:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8754:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8754:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8754:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8795:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8806:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8791:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8791:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8811:2:7",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8784:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8784:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8784:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8834:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8845:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8830:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8830:18:7"
																	},
																	{
																		"hexValue": "61646472657373207a65726f21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8850:15:7",
																		"type": "",
																		"value": "address zero!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8823:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8823:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8823:43:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8875:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8887:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8898:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8883:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8883:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8875:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_15899f662d7a614bf3c57644e7510671708691155c8806292fb4f45c1016663c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8721:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8735:4:7",
														"type": ""
													}
												],
												"src": "8570:337:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9097:262:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9107:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9119:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9130:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9115:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9115:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9107:4:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9143:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9161:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9166:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9157:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9157:11:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9170:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9153:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9153:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9147:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9188:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9203:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9211:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9199:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9199:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9181:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9181:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9181:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9235:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9246:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9231:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9231:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9251:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9224:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9224:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9224:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9278:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9289:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9274:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9274:18:7"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9294:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9267:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9267:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9267:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9321:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9332:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9317:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9317:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "9341:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9349:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9337:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9337:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9310:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9310:43:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9042:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9053:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9061:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9069:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9077:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9088:4:7",
														"type": ""
													}
												],
												"src": "8912:447:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9493:145:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9503:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9515:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9526:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9511:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9511:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9503:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9545:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9560:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9576:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9581:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9572:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9572:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9585:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9568:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9568:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9556:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9556:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9538:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9538:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9538:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9609:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9620:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9605:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9605:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9625:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9598:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9598:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9598:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9454:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9465:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9473:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9484:4:7",
														"type": ""
													}
												],
												"src": "9364:274:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9721:199:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9767:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9776:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9779:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9769:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9769:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9769:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9742:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9751:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9738:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9738:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9763:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9734:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9734:32:7"
															},
															"nodeType": "YulIf",
															"src": "9731:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9792:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9811:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9805:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9805:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9796:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9874:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9883:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9886:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9876:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9876:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9876:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9843:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "9864:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "9857:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9857:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9850:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9850:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9840:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9840:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9833:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9833:40:7"
															},
															"nodeType": "YulIf",
															"src": "9830:60:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9899:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9909:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9899:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9687:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9698:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9710:6:7",
														"type": ""
													}
												],
												"src": "9643:277:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10099:154:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10116:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10127:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10109:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10109:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10109:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10150:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10161:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10146:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10146:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10166:1:7",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10139:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10139:29:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10139:29:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10188:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10199:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10184:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10184:18:7"
																	},
																	{
																		"hexValue": "5a65726f21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10204:7:7",
																		"type": "",
																		"value": "Zero!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10177:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10177:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10177:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10221:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10233:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10244:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10229:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10229:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10221:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_46305072fb50c0438bd7a65f37da664a0a7c165dbfa7fd52c439a808fba616ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10076:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10090:4:7",
														"type": ""
													}
												],
												"src": "9925:328:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10387:119:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10397:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10409:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10420:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10405:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10405:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10397:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10439:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10450:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10432:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10432:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10432:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10477:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10488:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10473:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10473:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10493:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10466:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10466:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10466:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10348:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10359:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10367:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10378:4:7",
														"type": ""
													}
												],
												"src": "10258:248:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10685:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10702:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10713:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10695:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10695:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10695:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10736:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10747:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10732:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10732:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10752:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10725:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10725:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10725:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10775:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10786:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10771:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10771:18:7"
																	},
																	{
																		"hexValue": "596f75207265616368656420796f757220707269766174652073616c65206c69",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10791:34:7",
																		"type": "",
																		"value": "You reached your private sale li"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10764:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10764:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10764:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10846:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10857:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10842:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10842:18:7"
																	},
																	{
																		"hexValue": "6d6974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10862:5:7",
																		"type": "",
																		"value": "mit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10835:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10835:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10835:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10877:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10889:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10900:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10885:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10885:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10877:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1c2d3c13e86f28ed18ad4b34d675b8ac811f8a03f815d44ab828417c04bb25b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10662:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10676:4:7",
														"type": ""
													}
												],
												"src": "10511:399:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11089:233:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11106:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11117:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11099:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11099:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11099:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11140:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11151:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11136:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11136:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11156:2:7",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11129:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11129:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11129:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11179:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11190:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11175:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11175:18:7"
																	},
																	{
																		"hexValue": "507269766174652053616c652068617320656e646564206f7220646964206e6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11195:34:7",
																		"type": "",
																		"value": "Private Sale has ended or did no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11168:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11168:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11168:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11250:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11261:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11246:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11246:18:7"
																	},
																	{
																		"hexValue": "7420737461727420796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11266:13:7",
																		"type": "",
																		"value": "t start yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11239:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11239:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11239:41:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11289:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11301:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11312:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11297:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11297:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11289:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b56df502a2942e85cf034699d7908f5e5acd2577a219c55769be254bc3ea7d6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11066:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11080:4:7",
														"type": ""
													}
												],
												"src": "10915:407:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11501:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11518:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11529:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11511:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11511:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11511:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11552:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11563:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11548:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11548:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11568:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11541:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11541:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11541:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11591:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11602:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11587:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11587:18:7"
																	},
																	{
																		"hexValue": "4c657373207468616e204d696e696d756d206f72204d6f7265207468616e204d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11607:34:7",
																		"type": "",
																		"value": "Less than Minimum or More than M"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11580:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11580:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11580:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11662:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11673:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11658:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11658:18:7"
																	},
																	{
																		"hexValue": "6178696d756d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11678:8:7",
																		"type": "",
																		"value": "aximum"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11651:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11651:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11651:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11696:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11708:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11719:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11704:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11704:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11696:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b8c03831c8bbcc5ea6afa167bff5a9451576692b7afd8364ac3181fc924bce33__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11478:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11492:4:7",
														"type": ""
													}
												],
												"src": "11327:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11781:88:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11812:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11814:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11814:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11814:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11797:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11808:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11804:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11804:6:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11794:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11794:17:7"
															},
															"nodeType": "YulIf",
															"src": "11791:43:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11843:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11854:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11861:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11850:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11850:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11843:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11763:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11773:3:7",
														"type": ""
													}
												],
												"src": "11734:135:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11920:171:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11951:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11972:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11979:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11984:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "11975:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11975:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11965:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11965:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11965:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12016:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12019:4:7",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12009:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12009:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12009:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12044:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12047:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12037:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12037:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12037:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11940:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11933:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11933:9:7"
															},
															"nodeType": "YulIf",
															"src": "11930:132:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12071:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12080:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12083:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12076:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12076:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12071:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11905:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11908:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11914:1:7",
														"type": ""
													}
												],
												"src": "11874:217:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12270:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12287:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12298:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12280:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12280:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12280:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12321:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12332:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12317:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12317:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12337:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12310:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12310:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12360:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12371:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12356:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12356:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12376:34:7",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12349:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12349:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12349:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12431:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12442:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12427:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12427:18:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12447:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12420:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12420:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12420:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12463:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12475:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12486:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12471:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12471:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12463:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12247:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12261:4:7",
														"type": ""
													}
												],
												"src": "12096:400:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12675:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12692:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12703:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12685:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12685:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12685:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12726:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12737:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12722:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12722:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12742:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12715:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12715:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12715:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12765:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12776:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12761:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12761:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12781:34:7",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12754:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12754:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12754:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12836:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12847:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12832:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12832:18:7"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12852:4:7",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12825:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12825:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12825:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12866:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12878:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12889:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12874:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12874:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12866:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12652:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12666:4:7",
														"type": ""
													}
												],
												"src": "12501:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13078:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13095:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13106:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13088:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13088:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13088:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13129:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13140:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13125:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13125:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13145:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13118:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13118:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13118:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13168:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13179:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13164:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13164:18:7"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13184:31:7",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13157:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13157:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13157:59:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13225:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13237:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13248:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13233:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13233:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13225:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13055:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13069:4:7",
														"type": ""
													}
												],
												"src": "12904:353:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13436:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13453:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13464:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13446:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13446:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13446:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13487:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13498:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13483:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13483:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13503:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13476:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13476:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13476:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13526:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13537:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13522:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13522:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13542:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13515:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13515:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13515:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13597:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13608:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13593:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13593:18:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13613:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13586:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13586:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13586:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13630:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13642:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13653:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13638:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13638:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13630:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13413:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13427:4:7",
														"type": ""
													}
												],
												"src": "13262:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13842:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13859:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13870:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13852:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13852:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13852:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13893:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13904:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13889:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13889:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13909:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13882:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13882:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13882:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13932:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13943:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13928:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13928:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13948:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13921:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13921:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13921:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14003:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14014:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13999:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13999:18:7"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14019:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13992:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13992:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13992:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14034:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14046:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14057:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14042:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14042:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14034:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13819:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13833:4:7",
														"type": ""
													}
												],
												"src": "13668:399:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14246:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14263:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14274:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14256:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14256:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14256:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14297:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14308:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14293:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14293:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14313:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14286:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14286:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14286:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14336:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14347:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14332:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14332:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14352:34:7",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14325:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14325:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14325:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14407:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14418:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14403:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14403:18:7"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14423:8:7",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14396:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14396:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14396:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14441:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14453:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14464:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14449:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14449:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14441:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14223:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14237:4:7",
														"type": ""
													}
												],
												"src": "14072:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14653:181:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14670:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14681:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14663:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14663:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14663:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14704:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14715:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14700:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14700:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14720:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14693:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14693:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14693:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14743:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14754:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14739:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14739:18:7"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14759:33:7",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14732:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14732:61:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14732:61:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14802:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14814:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14825:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14810:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14810:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14802:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14630:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14644:4:7",
														"type": ""
													}
												],
												"src": "14479:355:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15013:223:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15030:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15041:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15023:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15023:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15023:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15064:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15075:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15060:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15060:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15080:2:7",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15053:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15053:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15053:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15103:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15114:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15099:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15099:18:7"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15119:34:7",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15092:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15092:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15092:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15174:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15185:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15170:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15170:18:7"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15190:3:7",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15163:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15163:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15163:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15203:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15215:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15226:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15211:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15211:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15203:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14990:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15004:4:7",
														"type": ""
													}
												],
												"src": "14839:397:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15415:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15432:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15443:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15425:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15425:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15425:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15466:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15477:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15462:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15462:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15482:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15455:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15455:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15455:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15505:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15516:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15501:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15501:18:7"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15521:34:7",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15494:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15494:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15494:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15576:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15587:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15572:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15572:18:7"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15592:4:7",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15565:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15565:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15565:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15606:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15618:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15629:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15614:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15614:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15606:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15392:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15406:4:7",
														"type": ""
													}
												],
												"src": "15241:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15693:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15715:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15717:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15717:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15717:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15709:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15712:1:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15706:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15706:8:7"
															},
															"nodeType": "YulIf",
															"src": "15703:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15746:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15758:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15761:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15754:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "15754:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "15746:4:7"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15675:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15678:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "15684:4:7",
														"type": ""
													}
												],
												"src": "15644:125:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := abi_decode_address(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_03b09a122d7f425a13e5cc389b8c58328ede0f4e779147f4da5b67b50d2c7986__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"caller not owner!\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_d431182fd6257b1ca59b92a47fb2c111c67355bdc03daf258921305a235e0ec5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"only bridge has access to this c\")\n        mstore(add(headStart, 96), \"hild token function\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_370c22c2430393d7d7dd6648674dd2ba5a07f9235dcf5c9a05680c4cd1efc989__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 5)\n        mstore(add(headStart, 64), \"zero!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e7ef5c99ec469b3c82cc6dc25415a6965ed6f3f728a0f401ff6d4d4d4ba4f8b5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"zero address!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_15899f662d7a614bf3c57644e7510671708691155c8806292fb4f45c1016663c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"address zero!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_46305072fb50c0438bd7a65f37da664a0a7c165dbfa7fd52c439a808fba616ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 5)\n        mstore(add(headStart, 64), \"Zero!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_1c2d3c13e86f28ed18ad4b34d675b8ac811f8a03f815d44ab828417c04bb25b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"You reached your private sale li\")\n        mstore(add(headStart, 96), \"mit\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b56df502a2942e85cf034699d7908f5e5acd2577a219c55769be254bc3ea7d6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Private Sale has ended or did no\")\n        mstore(add(headStart, 96), \"t start yet\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b8c03831c8bbcc5ea6afa167bff5a9451576692b7afd8364ac3181fc924bce33__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Less than Minimum or More than M\")\n        mstore(add(headStart, 96), \"aximum\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101bb5760003560e01c806379cc6790116100ec578063dd62ed3e1161008a578063e7d53fcb11610064578063e7d53fcb146104fc578063f2fde38b1461050f578063f4f3122e1461052f578063f88979451461054f57600080fd5b8063dd62ed3e14610484578063e181203a146104a4578063e78cea92146104c457600080fd5b8063a457c2d7116100c6578063a457c2d714610404578063a9059cbb14610424578063adbc7cee14610444578063b2938bee1461046457600080fd5b806379cc6790146103af5780638dd14802146103cf57806395d89b41146103ef57600080fd5b80633c3b7995116101595780634d1d03d1116101335780634d1d03d11461030a578063534b1442146103435780636ac5db191461036357806370a082311461037957600080fd5b80633c3b7995146102b457806340c10f19146102ca57806342966c68146102ea57600080fd5b806323b872dd1161019557806323b872dd14610241578063313ce56714610261578063380d831b1461027d578063395093511461029457600080fd5b806306fdde03146101c7578063095ea7b3146101f257806318160ddd1461022257600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101dc610565565b6040516101e9919061158a565b60405180910390f35b3480156101fe57600080fd5b5061021261020d3660046115fb565b6105f7565b60405190151581526020016101e9565b34801561022e57600080fd5b506002545b6040519081526020016101e9565b34801561024d57600080fd5b5061021261025c366004611625565b610611565b34801561026d57600080fd5b50604051601281526020016101e9565b34801561028957600080fd5b50610292610635565b005b3480156102a057600080fd5b506102126102af3660046115fb565b6106a1565b3480156102c057600080fd5b50610233600e5481565b3480156102d657600080fd5b506102926102e53660046115fb565b6106c3565b3480156102f657600080fd5b50610292610305366004611661565b6106fb565b34801561031657600080fd5b50600754600854600954600a546040805194855260208501939093529183015260608201526080016101e9565b34801561034f57600080fd5b5061029261035e366004611661565b610731565b34801561036f57600080fd5b50610233600c5481565b34801561038557600080fd5b5061023361039436600461167a565b6001600160a01b031660009081526020819052604090205490565b3480156103bb57600080fd5b506102926103ca3660046115fb565b6107ce565b3480156103db57600080fd5b506102926103ea36600461167a565b610802565b3480156103fb57600080fd5b506101dc6108d0565b34801561041057600080fd5b5061021261041f3660046115fb565b6108df565b34801561043057600080fd5b5061021261043f3660046115fb565b61095a565b34801561045057600080fd5b5061029261045f366004611695565b610968565b34801561047057600080fd5b5061029261047f3660046116ca565b610a3e565b34801561049057600080fd5b5061023361049f366004611710565b610ba3565b3480156104b057600080fd5b506102926104bf366004611743565b610bce565b3480156104d057600080fd5b506006546104e4906001600160a01b031681565b6040516001600160a01b0390911681526020016101e9565b61021261050a36600461167a565b610c8c565b34801561051b57600080fd5b5061029261052a36600461167a565b610e80565b34801561053b57600080fd5b5061029261054a366004611743565b610f3c565b34801561055b57600080fd5b50610233600d5481565b60606003805461057490611765565b80601f01602080910402602001604051908101604052809291908181526020018280546105a090611765565b80156105ed5780601f106105c2576101008083540402835291602001916105ed565b820191906000526020600020905b8154815290600101906020018083116105d057829003601f168201915b5050505050905090565b600033610605818585610fc6565b60019150505b92915050565b60003361061f8582856110ea565b61062a858585611164565b506001949350505050565b6005546001600160a01b031633146106685760405162461bcd60e51b815260040161065f9061179f565b60405180910390fd5b436008556040514281527fb144be0f16f8d30f2e18ef8f7938d5e90207932d96650e592ff47725716818fb9060200160405180910390a1565b6000336106058185856106b48383610ba3565b6106be91906117e0565b610fc6565b6006546001600160a01b031633146106ed5760405162461bcd60e51b815260040161065f906117f8565b6106f78282611332565b5050565b6006546001600160a01b031633146107255760405162461bcd60e51b815260040161065f906117f8565b61072e81611411565b50565b6005546001600160a01b0316331461075b5760405162461bcd60e51b815260040161065f9061179f565b806000036107935760405162461bcd60e51b81526020600482015260056024820152647a65726f2160d81b604482015260640161065f565b600e8190556040518181527f6d487f3988610155b3a9ef590f8ac170134d24e6505b9ddd3160e34abaa0edaf9060200160405180910390a150565b6006546001600160a01b031633146107f85760405162461bcd60e51b815260040161065f906117f8565b6106f7828261141b565b6005546001600160a01b0316331461082c5760405162461bcd60e51b815260040161065f9061179f565b6001600160a01b0381166108725760405162461bcd60e51b815260206004820152600d60248201526c7a65726f20616464726573732160981b604482015260640161065f565b6040516001600160a01b03821681527fe605ac02ea219003ec58fc9cf4d4b3c5f2d62ec39807b1c63886ddd47a6fcd6e9060200160405180910390a1600680546001600160a01b0319166001600160a01b0392909216919091179055565b60606004805461057490611765565b600033816108ed8286610ba3565b90508381101561094d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161065f565b61062a8286868403610fc6565b600033610605818585611164565b6005546001600160a01b031633146109925760405162461bcd60e51b815260040161065f9061179f565b8247101561099f57600080fd5b60006109ac83600a61192f565b60408051868152602081018690526001600160a01b0385168183015290519192507f4508977418b95bac209196e03356692c2d8f47957dec1c15af1a44cc40d39a04919081900360600190a16001600160a01b0382166108fc610a0f838761193b565b6040518115909202916000818181858888f19350505050158015610a37573d6000803e3d6000fd5b5050505050565b6005546001600160a01b03163314610a685760405162461bcd60e51b815260040161065f9061179f565b6001600160a01b038416610aae5760405162461bcd60e51b815260206004820152600d60248201526c61646472657373207a65726f2160981b604482015260640161065f565b6000610abb83600a61192f565b604080516001600160a01b0388811682526020820188905281830187905285166060820152905191925086917f0206ca7f97d46974ed97b981f879b17e9e1fe17ead63770c806926d28aa5cbd59181900360800190a16001600160a01b03811663a9059cbb84610b2b858961193b565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610b76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9a919061195a565b50505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546001600160a01b03163314610bf85760405162461bcd60e51b815260040161065f9061179f565b8115801590610c0657508015155b610c3a5760405162461bcd60e51b81526020600482015260056024820152645a65726f2160d81b604482015260640161065f565b600d829055600b54610c4c908261193b565b600c5560408051838152602081018390527f3b06ffd21bedfb2c375d7b1bcf74ca4fe1afe205699e39610b3aced7adf6b9e9910160405180910390a15050565b6000600b54600e54610c9e919061193b565b336000908152602081905260409020541115610d085760405162461bcd60e51b815260206004820152602360248201527f596f75207265616368656420796f757220707269766174652073616c65206c696044820152621b5a5d60ea1b606482015260840161065f565b4360075411158015610d1c57506008544311155b610d7c5760405162461bcd60e51b815260206004820152602b60248201527f507269766174652053616c652068617320656e646564206f7220646964206e6f60448201526a1d081cdd185c9d081e595d60aa1b606482015260840161065f565b600d5434906000908210801590610d955750600c548211155b610df05760405162461bcd60e51b815260206004820152602660248201527f4c657373207468616e204d696e696d756d206f72204d6f7265207468616e204d6044820152656178696d756d60d01b606482015260840161065f565b610e17670de0b6b3a7640000610e1184600a5461143090919063ffffffff16565b90610fb3565b600980549192506000610e298361197c565b9190505550610e39303383611164565b600a546040805183815260208101929092527fb887e151dbfcc06b4ce4f67f9bbedaeb16ab224e34c6668858d0310c6d18ffc3910160405180910390a15060019392505050565b6005546001600160a01b03163314610eaa5760405162461bcd60e51b815260040161065f9061179f565b6001600160a01b038116610ef05760405162461bcd60e51b815260206004820152600d60248201526c61646472657373207a65726f2160981b604482015260640161065f565b600580546001600160a01b0319166001600160a01b03831690811790915560405181907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b6005546001600160a01b03163314610f665760405162461bcd60e51b815260040161065f9061179f565b8115801590610f7457508015155b610fa85760405162461bcd60e51b81526020600482015260056024820152645a65726f2160d81b604482015260640161065f565b600891909155600a55565b6000610fbf8284611995565b9392505050565b6001600160a01b0383166110285760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161065f565b6001600160a01b0382166110895760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161065f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006110f68484610ba3565b9050600019811461115e57818110156111515760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161065f565b61115e8484848403610fc6565b50505050565b6001600160a01b0383166111c85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161065f565b6001600160a01b03821661122a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161065f565b6001600160a01b038316600090815260208190526040902054818110156112a25760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161065f565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906112d99084906117e0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161132591815260200190565b60405180910390a361115e565b6001600160a01b0382166113885760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161065f565b806002600082825461139a91906117e0565b90915550506001600160a01b038216600090815260208190526040812080548392906113c79084906117e0565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b61072e338261143c565b6114268233836110ea565b6106f7828261143c565b6000610fbf828461193b565b6001600160a01b03821661149c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161065f565b6001600160a01b038216600090815260208190526040902054818110156115105760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161065f565b6001600160a01b038316600090815260208190526040812083830390556002805484929061153f9084906119b7565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600060208083528351808285015260005b818110156115b75785810183015185820160400152820161159b565b818111156115c9576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146115f657600080fd5b919050565b6000806040838503121561160e57600080fd5b611617836115df565b946020939093013593505050565b60008060006060848603121561163a57600080fd5b611643846115df565b9250611651602085016115df565b9150604084013590509250925092565b60006020828403121561167357600080fd5b5035919050565b60006020828403121561168c57600080fd5b610fbf826115df565b6000806000606084860312156116aa57600080fd5b83359250602084013591506116c1604085016115df565b90509250925092565b600080600080608085870312156116e057600080fd5b6116e9856115df565b93506020850135925060408501359150611705606086016115df565b905092959194509250565b6000806040838503121561172357600080fd5b61172c836115df565b915061173a602084016115df565b90509250929050565b6000806040838503121561175657600080fd5b50508035926020909101359150565b600181811c9082168061177957607f821691505b60208210810361179957634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526011908201527063616c6c6572206e6f74206f776e65722160781b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082198211156117f3576117f36117ca565b500190565b60208082526033908201527f6f6e6c7920627269646765206861732061636365737320746f207468697320636040820152723434b632103a37b5b2b710333ab731ba34b7b760691b606082015260800190565b600181815b8085111561188657816000190482111561186c5761186c6117ca565b8085161561187957918102915b93841c9390800290611850565b509250929050565b60008261189d5750600161060b565b816118aa5750600061060b565b81600181146118c057600281146118ca576118e6565b600191505061060b565b60ff8411156118db576118db6117ca565b50506001821b61060b565b5060208310610133831016604e8410600b8410161715611909575081810a61060b565b611913838361184b565b8060001904821115611927576119276117ca565b029392505050565b6000610fbf838361188e565b6000816000190483118215151615611955576119556117ca565b500290565b60006020828403121561196c57600080fd5b81518015158114610fbf57600080fd5b60006001820161198e5761198e6117ca565b5060010190565b6000826119b257634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156119c9576119c96117ca565b50039056fea26469706673582212209dc78c23c26b4a7e1a8d367240374e6cc55f28cffcc146fb8ebb6d0c2857364264736f6c634300080f0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE7D53FCB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE7D53FCB EQ PUSH2 0x4FC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0xF4F3122E EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0xF8897945 EQ PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x484 JUMPI DUP1 PUSH4 0xE181203A EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0xE78CEA92 EQ PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0xADBC7CEE EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0xB2938BEE EQ PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x8DD14802 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3C3B7995 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x4D1D03D1 GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x4D1D03D1 EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x534B1442 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x6AC5DB19 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3C3B7995 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x380D831B EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1C2 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x565 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x158A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x15FB JUMP JUMPDEST PUSH2 0x5F7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x611 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x635 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x2AF CALLDATASIZE PUSH1 0x4 PUSH2 0x15FB JUMP JUMPDEST PUSH2 0x6A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x2E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x15FB JUMP JUMPDEST PUSH2 0x6C3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x731 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x394 CALLDATASIZE PUSH1 0x4 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0x15FB JUMP JUMPDEST PUSH2 0x7CE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x3EA CALLDATASIZE PUSH1 0x4 PUSH2 0x167A JUMP JUMPDEST PUSH2 0x802 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x8D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x410 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x41F CALLDATASIZE PUSH1 0x4 PUSH2 0x15FB JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x43F CALLDATASIZE PUSH1 0x4 PUSH2 0x15FB JUMP JUMPDEST PUSH2 0x95A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x1695 JUMP JUMPDEST PUSH2 0x968 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x47F CALLDATASIZE PUSH1 0x4 PUSH2 0x16CA JUMP JUMPDEST PUSH2 0xA3E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x49F CALLDATASIZE PUSH1 0x4 PUSH2 0x1710 JUMP JUMPDEST PUSH2 0xBA3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x4BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1743 JUMP JUMPDEST PUSH2 0xBCE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x4E4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x212 PUSH2 0x50A CALLDATASIZE PUSH1 0x4 PUSH2 0x167A JUMP JUMPDEST PUSH2 0xC8C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x52A CALLDATASIZE PUSH1 0x4 PUSH2 0x167A JUMP JUMPDEST PUSH2 0xE80 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x292 PUSH2 0x54A CALLDATASIZE PUSH1 0x4 PUSH2 0x1743 JUMP JUMPDEST PUSH2 0xF3C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x574 SWAP1 PUSH2 0x1765 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5A0 SWAP1 PUSH2 0x1765 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5ED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5D0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x605 DUP2 DUP6 DUP6 PUSH2 0xFC6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x61F DUP6 DUP3 DUP6 PUSH2 0x10EA JUMP JUMPDEST PUSH2 0x62A DUP6 DUP6 DUP6 PUSH2 0x1164 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x668 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP1 PUSH2 0x179F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST NUMBER PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0xB144BE0F16F8D30F2E18EF8F7938D5E90207932D96650E592FF47725716818FB SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x605 DUP2 DUP6 DUP6 PUSH2 0x6B4 DUP4 DUP4 PUSH2 0xBA3 JUMP JUMPDEST PUSH2 0x6BE SWAP2 SWAP1 PUSH2 0x17E0 JUMP JUMPDEST PUSH2 0xFC6 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP1 PUSH2 0x17F8 JUMP JUMPDEST PUSH2 0x6F7 DUP3 DUP3 PUSH2 0x1332 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x725 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP1 PUSH2 0x17F8 JUMP JUMPDEST PUSH2 0x72E DUP2 PUSH2 0x1411 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x75B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP1 PUSH2 0x179F JUMP JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x793 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x7A65726F21 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x6D487F3988610155B3A9EF590F8AC170134D24E6505B9DDD3160E34ABAA0EDAF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP1 PUSH2 0x17F8 JUMP JUMPDEST PUSH2 0x6F7 DUP3 DUP3 PUSH2 0x141B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x82C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP1 PUSH2 0x179F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x872 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x7A65726F206164647265737321 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 MSTORE PUSH32 0xE605AC02EA219003EC58FC9CF4D4B3C5F2D62EC39807B1C63886DDD47A6FCD6E SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x574 SWAP1 PUSH2 0x1765 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x8ED DUP3 DUP7 PUSH2 0xBA3 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x94D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x65F JUMP JUMPDEST PUSH2 0x62A DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xFC6 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x605 DUP2 DUP6 DUP6 PUSH2 0x1164 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x992 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP1 PUSH2 0x179F JUMP JUMPDEST DUP3 SELFBALANCE LT ISZERO PUSH2 0x99F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9AC DUP4 PUSH1 0xA PUSH2 0x192F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0x4508977418B95BAC209196E03356692C2D8F47957DEC1C15AF1A44CC40D39A04 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8FC PUSH2 0xA0F DUP4 DUP8 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xA37 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP1 PUSH2 0x179F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xAAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x61646472657373207A65726F21 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xABB DUP4 PUSH1 0xA PUSH2 0x192F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP9 SWAP1 MSTORE DUP2 DUP4 ADD DUP8 SWAP1 MSTORE DUP6 AND PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP DUP7 SWAP2 PUSH32 0x206CA7F97D46974ED97B981F879B17E9E1FE17EAD63770C806926D28AA5CBD5 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH4 0xA9059CBB DUP5 PUSH2 0xB2B DUP6 DUP10 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB9A SWAP2 SWAP1 PUSH2 0x195A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP1 PUSH2 0x179F JUMP JUMPDEST DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xC06 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST PUSH2 0xC3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x5A65726F21 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0xD DUP3 SWAP1 SSTORE PUSH1 0xB SLOAD PUSH2 0xC4C SWAP1 DUP3 PUSH2 0x193B JUMP JUMPDEST PUSH1 0xC SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x3B06FFD21BEDFB2C375D7B1BCF74CA4FE1AFE205699E39610B3ACED7ADF6B9E9 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD PUSH1 0xE SLOAD PUSH2 0xC9E SWAP2 SWAP1 PUSH2 0x193B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0xD08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75207265616368656420796F757220707269766174652073616C65206C69 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1B5A5D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x65F JUMP JUMPDEST NUMBER PUSH1 0x7 SLOAD GT ISZERO DUP1 ISZERO PUSH2 0xD1C JUMPI POP PUSH1 0x8 SLOAD NUMBER GT ISZERO JUMPDEST PUSH2 0xD7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x507269766174652053616C652068617320656E646564206F7220646964206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1D081CDD185C9D081E595D PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0xD SLOAD CALLVALUE SWAP1 PUSH1 0x0 SWAP1 DUP3 LT DUP1 ISZERO SWAP1 PUSH2 0xD95 JUMPI POP PUSH1 0xC SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0xDF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C657373207468616E204D696E696D756D206F72204D6F7265207468616E204D PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6178696D756D PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x65F JUMP JUMPDEST PUSH2 0xE17 PUSH8 0xDE0B6B3A7640000 PUSH2 0xE11 DUP5 PUSH1 0xA SLOAD PUSH2 0x1430 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xFB3 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 PUSH2 0xE29 DUP4 PUSH2 0x197C JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0xE39 ADDRESS CALLER DUP4 PUSH2 0x1164 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xB887E151DBFCC06B4CE4F67F9BBEDAEB16AB224E34C6668858D0310C6D18FFC3 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP1 PUSH2 0x179F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x61646472657373207A65726F21 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP1 PUSH2 0x179F JUMP JUMPDEST DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xF74 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST PUSH2 0xFA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x5A65726F21 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFBF DUP3 DUP5 PUSH2 0x1995 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1028 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1089 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F6 DUP5 DUP5 PUSH2 0xBA3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x115E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1151 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65F JUMP JUMPDEST PUSH2 0x115E DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xFC6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x122A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x12A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x12D9 SWAP1 DUP5 SWAP1 PUSH2 0x17E0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1325 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1388 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x65F JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x139A SWAP2 SWAP1 PUSH2 0x17E0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x13C7 SWAP1 DUP5 SWAP1 PUSH2 0x17E0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x72E CALLER DUP3 PUSH2 0x143C JUMP JUMPDEST PUSH2 0x1426 DUP3 CALLER DUP4 PUSH2 0x10EA JUMP JUMPDEST PUSH2 0x6F7 DUP3 DUP3 PUSH2 0x143C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFBF DUP3 DUP5 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x149C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1510 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x65F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x153F SWAP1 DUP5 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15B7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x159B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x15C9 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x15F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x160E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1617 DUP4 PUSH2 0x15DF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x163A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1643 DUP5 PUSH2 0x15DF JUMP JUMPDEST SWAP3 POP PUSH2 0x1651 PUSH1 0x20 DUP6 ADD PUSH2 0x15DF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x168C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFBF DUP3 PUSH2 0x15DF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x16C1 PUSH1 0x40 DUP6 ADD PUSH2 0x15DF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16E9 DUP6 PUSH2 0x15DF JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1705 PUSH1 0x60 DUP7 ADD PUSH2 0x15DF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x172C DUP4 PUSH2 0x15DF JUMP JUMPDEST SWAP2 POP PUSH2 0x173A PUSH1 0x20 DUP5 ADD PUSH2 0x15DF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1756 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1779 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1799 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x63616C6C6572206E6F74206F776E657221 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x17F3 JUMPI PUSH2 0x17F3 PUSH2 0x17CA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x33 SWAP1 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920627269646765206861732061636365737320746F20746869732063 PUSH1 0x40 DUP3 ADD MSTORE PUSH19 0x3434B632103A37B5B2B710333AB731BA34B7B7 PUSH1 0x69 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1886 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x186C JUMPI PUSH2 0x186C PUSH2 0x17CA JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1879 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1850 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x189D JUMPI POP PUSH1 0x1 PUSH2 0x60B JUMP JUMPDEST DUP2 PUSH2 0x18AA JUMPI POP PUSH1 0x0 PUSH2 0x60B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x18C0 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x18CA JUMPI PUSH2 0x18E6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x60B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x18DB JUMPI PUSH2 0x18DB PUSH2 0x17CA JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x60B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1909 JUMPI POP DUP2 DUP2 EXP PUSH2 0x60B JUMP JUMPDEST PUSH2 0x1913 DUP4 DUP4 PUSH2 0x184B JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1927 JUMPI PUSH2 0x1927 PUSH2 0x17CA JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFBF DUP4 DUP4 PUSH2 0x188E JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1955 JUMPI PUSH2 0x1955 PUSH2 0x17CA JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x196C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x198E JUMPI PUSH2 0x198E PUSH2 0x17CA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x19B2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x19C9 JUMPI PUSH2 0x19C9 PUSH2 0x17CA JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0xC7 DUP13 0x23 0xC2 PUSH12 0x4A7E1A8D367240374E6CC55F 0x28 0xCF 0xFC 0xC1 CHAINID 0xFB DUP15 0xBB PUSH14 0xC2857364264736F6C634300080F STOP CALLER ",
							"sourceMap": "251:4802:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;;;;;-1:-1:-1;4433:197:0;;;;;:::i;:::-;;:::i;:::-;;;1218:14:7;;1211:22;1193:41;;1181:2;1166:18;4433:197:0;1053:187:7;3244:106:0;;;;;;;;;;-1:-1:-1;3331:12:0;;3244:106;;;1391:25:7;;;1379:2;1364:18;3244:106:0;1245:177:7;5192:286:0;;;;;;;;;;-1:-1:-1;5192:286:0;;;;;:::i;:::-;;:::i;3093:91::-;;;;;;;;;;-1:-1:-1;3093:91:0;;3175:2;1902:36:7;;1890:2;1875:18;3093:91:0;1760:184:7;2634:118:6;;;;;;;;;;;;;:::i;:::-;;5873:234:0;;;;;;;;;;-1:-1:-1;5873:234:0;;;;;:::i;:::-;;:::i;619:37:6:-;;;;;;;;;;;;;;;;4089:174;;;;;;;;;;-1:-1:-1;4089:174:6;;;;;:::i;:::-;;:::i;4379:173::-;;;;;;;;;;-1:-1:-1;4379:173:6;;;;;:::i;:::-;;:::i;2286:165::-;;;;;;;;;;-1:-1:-1;2414:7:6;;2423;;2432:4;;2439:6;;2286:165;;;2365:25:7;;;2421:2;2406:18;;2399:34;;;;2449:18;;;2442:34;2507:2;2492:18;;2485:34;2352:3;2337:19;2286:165:6;2134:391:7;3005:165:6;;;;;;;;;;-1:-1:-1;3005:165:6;;;;;:::i;:::-;;:::i;544:30::-;;;;;;;;;;;;;;;;3408:125:0;;;;;;;;;;-1:-1:-1;3408:125:0;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:0;3482:7;3508:18;;;;;;;;;;;;3408:125;4668:215:6;;;;;;;;;;-1:-1:-1;4668:215:6;;;;;:::i;:::-;;:::i;3834:171::-;;;;;;;;;;-1:-1:-1;3834:171:6;;;;;:::i;:::-;;:::i;2367:102:0:-;;;;;;;;;;;;;:::i;6594:427::-;;;;;;;;;;-1:-1:-1;6594:427:0;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;;;;;-1:-1:-1;3729:189:0;;;;;:::i;:::-;;:::i;3544:286:6:-;;;;;;;;;;-1:-1:-1;3544:286:6;;;;;:::i;:::-;;:::i;3174:362::-;;;;;;;;;;-1:-1:-1;3174:362:6;;;;;:::i;:::-;;:::i;3976:149:0:-;;;;;;;;;;-1:-1:-1;3976:149:0;;;;;:::i;:::-;;:::i;2756:245:6:-;;;;;;;;;;-1:-1:-1;2756:245:6;;;;;:::i;:::-;;:::i;365:21::-;;;;;;;;;;-1:-1:-1;365:21:6;;;;-1:-1:-1;;;;;365:21:6;;;;;;-1:-1:-1;;;;;4132:32:7;;;4114:51;;4102:2;4087:18;365:21:6;3968:203:7;1680:602:6;;;;;;:::i;:::-;;:::i;1470:205::-;;;;;;;;;;-1:-1:-1;1470:205:6;;;;;:::i;:::-;;:::i;2457:171::-;;;;;;;;;;-1:-1:-1;2457:171:6;;;;;:::i;:::-;;:::i;580:33::-;;;;;;;;;;;;;;;;2156:98:0;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:4;4570:32:0;719:10:4;4586:7:0;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;;:::o;5192:286::-;5319:4;719:10:4;5375:38:0;5391:4;719:10:4;5406:6:0;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:0;;5192:286;-1:-1:-1;;;;5192:286:0:o;2634:118:6:-;1222:5;;-1:-1:-1;;;;;1222:5:6;1208:10;:19;1200:48;;;;-1:-1:-1;;;1200:48:6;;;;;;;:::i;:::-;;;;;;;;;2692:12:::1;2682:7;:22:::0;2721:26:::1;::::0;2731:15:::1;1391:25:7::0;;2721:26:6::1;::::0;1379:2:7;1364:18;2721:26:6::1;;;;;;;2634:118::o:0;5873:234:0:-;5961:4;719:10:4;6015:64:0;719:10:4;6031:7:0;6068:10;6040:25;719:10:4;6031:7:0;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;4089:174:6:-;4939:6;;-1:-1:-1;;;;;4939:6:6;4925:10;:20;4917:84;;;;-1:-1:-1;;;4917:84:6;;;;;;;:::i;:::-;4232:24:::1;4238:9;4249:6;4232:5;:24::i;:::-;4089:174:::0;;:::o;4379:173::-;4939:6;;-1:-1:-1;;;;;4939:6:6;4925:10;:20;4917:84;;;;-1:-1:-1;;;4917:84:6;;;;;;;:::i;:::-;4527:18:::1;4538:6;4527:10;:18::i;:::-;4379:173:::0;:::o;3005:165::-;1222:5;;-1:-1:-1;;;;;1222:5:6;1208:10;:19;1200:48;;;;-1:-1:-1;;;1200:48:6;;;;;;;:::i;:::-;3082:6:::1;3092:1;3082:11:::0;3074:29:::1;;;::::0;-1:-1:-1;;;3074:29:6;;5794:2:7;3074:29:6::1;::::0;::::1;5776:21:7::0;5833:1;5813:18;;;5806:29;-1:-1:-1;;;5851:18:7;;;5844:35;5896:18;;3074:29:6::1;5592:328:7::0;3074:29:6::1;3111:12;:21:::0;;;3145:20:::1;::::0;1391:25:7;;;3145:20:6::1;::::0;1379:2:7;1364:18;3145:20:6::1;;;;;;;3005:165:::0;:::o;4668:215::-;4939:6;;-1:-1:-1;;;;;4939:6:6;4925:10;:20;4917:84;;;;-1:-1:-1;;;4917:84:6;;;;;;;:::i;:::-;4845:31:::1;4860:7;4869:6;4845:14;:31::i;3834:171::-:0;1222:5;;-1:-1:-1;;;;;1222:5:6;1208:10;:19;1200:48;;;;-1:-1:-1;;;1200:48:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;3903:21:6;::::1;3895:46;;;::::0;-1:-1:-1;;;3895:46:6;;6127:2:7;3895:46:6::1;::::0;::::1;6109:21:7::0;6166:2;6146:18;;;6139:30;-1:-1:-1;;;6185:18:7;;;6178:43;6238:18;;3895:46:6::1;5925:337:7::0;3895:46:6::1;3954:18;::::0;-1:-1:-1;;;;;4132:32:7;;4114:51;;3954:18:6::1;::::0;4102:2:7;4087:18;3954::6::1;;;;;;;3982:6;:16:::0;;-1:-1:-1;;;;;;3982:16:6::1;-1:-1:-1::0;;;;;3982:16:6;;;::::1;::::0;;;::::1;::::0;;3834:171::o;2367:102:0:-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:4;6687:4:0;6768:25;719:10:4;6785:7:0;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:0;;6469:2:7;6803:85:0;;;6451:21:7;6508:2;6488:18;;;6481:30;6547:34;6527:18;;;6520:62;-1:-1:-1;;;6598:18:7;;;6591:35;6643:19;;6803:85:0;6267:401:7;6803:85:0;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:4;3862:28:0;719:10:4;3879:2:0;3883:6;3862:9;:28::i;3544:286:6:-;1222:5;;-1:-1:-1;;;;;1222:5:6;1208:10;:19;1200:48;;;;-1:-1:-1;;;1200:48:6;;;;;;;:::i;:::-;3677:7:::1;3652:21;:32;;3644:41;;;::::0;::::1;;3695:12;3710:13;3716:7:::0;3710:2:::1;:13;:::i;:::-;3738:35;::::0;;8249:25:7;;;8305:2;8290:18;;8283:34;;;-1:-1:-1;;;;;8353:32:7;;8333:18;;;8326:60;3738:35:6;;3695:28;;-1:-1:-1;3738:35:6::1;::::0;;;;;8237:2:7;3738:35:6;;::::1;-1:-1:-1::0;;;;;3783:20:6;::::1;:34;3804:12;3812:4:::0;3804:7;:12:::1;:::i;:::-;3783:34;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;3634:196;3544:286:::0;;;:::o;3174:362::-;1222:5;;-1:-1:-1;;;;;1222:5:6;1208:10;:19;1200:48;;;;-1:-1:-1;;;1200:48:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;3302:24:6;::::1;3294:49;;;::::0;-1:-1:-1;;;3294:49:6;;8772:2:7;3294:49:6::1;::::0;::::1;8754:21:7::0;8811:2;8791:18;;;8784:30;-1:-1:-1;;;8830:18:7;;;8823:43;8883:18;;3294:49:6::1;8570:337:7::0;3294:49:6::1;3353:12;3368:13;3374:7:::0;3368:2:::1;:13;:::i;:::-;3437:49;::::0;;-1:-1:-1;;;;;9199:15:7;;;9181:34;;9246:2;9231:18;;9224:34;;;9274:18;;;9267:34;;;9337:15;;9332:2;9317:18;;9310:43;3437:49:6;;3353:28;;-1:-1:-1;9199:15:7;;3437:49:6::1;::::0;;;;9130:3:7;3437:49:6;;::::1;-1:-1:-1::0;;;;;3496:14:6;::::1;;3511:2:::0;3515:12:::1;3523:4:::0;3515:7;:12:::1;:::i;:::-;3496:32;::::0;-1:-1:-1;;;;;;3496:32:6::1;::::0;;;;;;-1:-1:-1;;;;;9556:32:7;;;3496::6::1;::::0;::::1;9538:51:7::0;9605:18;;;9598:34;9511:18;;3496:32:6::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3286:250;;3174:362:::0;;;;:::o;3976:149:0:-;-1:-1:-1;;;;;4091:18:0;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;2756:245:6:-;1222:5;;-1:-1:-1;;;;;1222:5:6;1208:10;:19;1200:48;;;;-1:-1:-1;;;1200:48:6;;;;;;;:::i;:::-;2862:14;;;::::1;::::0;:31:::1;;-1:-1:-1::0;2880:13:6;;::::1;2862:31;2854:48;;;::::0;-1:-1:-1;;;2854:48:6;;10127:2:7;2854:48:6::1;::::0;::::1;10109:21:7::0;10166:1;10146:18;;;10139:29;-1:-1:-1;;;10184:18:7;;;10177:35;10229:18;;2854:48:6::1;9925:328:7::0;2854:48:6::1;2910:3;:15:::0;;;2951:4:::1;::::0;2939:16:::1;::::0;:9;:16:::1;:::i;:::-;2933:3;:22:::0;2968:28:::1;::::0;;10432:25:7;;;10488:2;10473:18;;10466:34;;;2968:28:6::1;::::0;10405:18:7;2968:28:6::1;;;;;;;2756:245:::0;;:::o;1680:602::-;1734:12;1810:4;;1795:12;;:19;;;;:::i;:::-;1779:10;3482:7:0;3508:18;;;;;;;;;;;1761:53:6;;1753:102;;;;-1:-1:-1;;;1753:102:6;;10713:2:7;1753:102:6;;;10695:21:7;10752:2;10732:18;;;10725:30;10791:34;10771:18;;;10764:62;-1:-1:-1;;;10842:18:7;;;10835:33;10885:19;;1753:102:6;10511:399:7;1753:102:6;1882:12;1871:7;;:23;;:50;;;;;1914:7;;1898:12;:23;;1871:50;1863:106;;;;-1:-1:-1;;;1863:106:6;;11117:2:7;1863:106:6;;;11099:21:7;11156:2;11136:18;;;11129:30;11195:34;11175:18;;;11168:62;-1:-1:-1;;;11246:18:7;;;11239:41;11297:19;;1863:106:6;10915:407:7;1863:106:6;2048:3;;1991:9;;1976:12;;2040:11;;;;;:26;;;2063:3;;2055:4;:11;;2040:26;2030:80;;;;-1:-1:-1;;;2030:80:6;;11529:2:7;2030:80:6;;;11511:21:7;11568:2;11548:18;;;11541:30;11607:34;11587:18;;;11580:62;-1:-1:-1;;;11658:18:7;;;11651:36;11704:19;;2030:80:6;11327:402:7;2030:80:6;2124:31;2147:7;2125:16;2136:4;2125:6;;:10;;:16;;;;:::i;:::-;2124:22;;:31::i;:::-;2161:4;:7;;2116:39;;-1:-1:-1;2161:4:6;:7;;;:::i;:::-;;;;;;2179:43;2197:4;2204:10;2216:5;2179:9;:43::i;:::-;2253:6;;2234:26;;;10432:25:7;;;10488:2;10473:18;;10466:34;;;;2234:26:6;;10405:18:7;2234:26:6;;;;;;;-1:-1:-1;2273:4:6;;1680:602;-1:-1:-1;;;1680:602:6:o;1470:205::-;1222:5;;-1:-1:-1;;;;;1222:5:6;1208:10;:19;1200:48;;;;-1:-1:-1;;;1200:48:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;1551:23:6;::::1;1543:48;;;::::0;-1:-1:-1;;;1543:48:6;;8772:2:7;1543:48:6::1;::::0;::::1;8754:21:7::0;8811:2;8791:18;;;8784:30;-1:-1:-1;;;8830:18:7;;;8823:43;8883:18;;1543:48:6::1;8570:337:7::0;1543:48:6::1;1600:5;:17:::0;;-1:-1:-1;;;;;;1600:17:6::1;-1:-1:-1::0;;;;;1600:17:6;::::1;::::0;;::::1;::::0;;;1631:38:::1;::::0;1600:17;;1631:38:::1;::::0;-1:-1:-1;;1631:38:6::1;1470:205:::0;:::o;2457:171::-;1222:5;;-1:-1:-1;;;;;1222:5:6;1208:10;:19;1200:48;;;;-1:-1:-1;;;1200:48:6;;;;;;;:::i;:::-;2543:12;;;::::1;::::0;:27:::1;;-1:-1:-1::0;2559:11:6;;::::1;2543:27;2535:44;;;::::0;-1:-1:-1;;;2535:44:6;;10127:2:7;2535:44:6::1;::::0;::::1;10109:21:7::0;10166:1;10146:18;;;10139:29;-1:-1:-1;;;10184:18:7;;;10177:35;10229:18;;2535:44:6::1;9925:328:7::0;2535:44:6::1;2584:7;:18:::0;;;;2608:6:::1;:15:::0;2457:171::o;3850:96:5:-;3908:7;3934:5;3938:1;3934;:5;:::i;:::-;3927:12;3850:96;-1:-1:-1;;;3850:96:5:o;10110:370:0:-;-1:-1:-1;;;;;10241:19:0;;10233:68;;;;-1:-1:-1;;;10233:68:0;;12298:2:7;10233:68:0;;;12280:21:7;12337:2;12317:18;;;12310:30;12376:34;12356:18;;;12349:62;-1:-1:-1;;;12427:18:7;;;12420:34;12471:19;;10233:68:0;12096:400:7;10233:68:0;-1:-1:-1;;;;;10319:21:0;;10311:68;;;;-1:-1:-1;;;10311:68:0;;12703:2:7;10311:68:0;;;12685:21:7;12742:2;12722:18;;;12715:30;12781:34;12761:18;;;12754:62;-1:-1:-1;;;12832:18:7;;;12825:32;12874:19;;10311:68:0;12501:398:7;10311:68:0;-1:-1:-1;;;;;10390:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;1391:25:7;;;10441:32:0;;1364:18:7;10441:32:0;;;;;;;10110:370;;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;-1:-1:-1;;10957:16:0;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:0;;13106:2:7;11010:68:0;;;13088:21:7;13145:2;13125:18;;;13118:30;13184:31;13164:18;;;13157:59;13233:18;;11010:68:0;12904:353:7;11010:68:0;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:0;;7593:68;;;;-1:-1:-1;;;7593:68:0;;13464:2:7;7593:68:0;;;13446:21:7;13503:2;13483:18;;;13476:30;13542:34;13522:18;;;13515:62;-1:-1:-1;;;13593:18:7;;;13586:35;13638:19;;7593:68:0;13262:401:7;7593:68:0;-1:-1:-1;;;;;7679:16:0;;7671:64;;;;-1:-1:-1;;;7671:64:0;;13870:2:7;7671:64:0;;;13852:21:7;13909:2;13889:18;;;13882:30;13948:34;13928:18;;;13921:62;-1:-1:-1;;;13999:18:7;;;13992:33;14042:19;;7671:64:0;13668:399:7;7671:64:0;-1:-1:-1;;;;;7817:15:0;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:0;;14274:2:7;7842:72:0;;;14256:21:7;14313:2;14293:18;;;14286:30;14352:34;14332:18;;;14325:62;-1:-1:-1;;;14403:18:7;;;14396:36;14449:19;;7842:72:0;14072:402:7;7842:72:0;-1:-1:-1;;;;;7948:15:0;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:0;8054:4;-1:-1:-1;;;;;8045:26:0;;8064:6;8045:26;;;;1391:25:7;;1379:2;1364:18;;1245:177;8045:26:0;;;;;;;;8082:37;11786:121;8402:389;-1:-1:-1;;;;;8485:21:0;;8477:65;;;;-1:-1:-1;;;8477:65:0;;14681:2:7;8477:65:0;;;14663:21:7;14720:2;14700:18;;;14693:30;14759:33;14739:18;;;14732:61;14810:18;;8477:65:0;14479:355:7;8477:65:0;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8645:18:0;;:9;:18;;;;;;;;;;:28;;8667:6;;8645:9;:28;;8667:6;;8645:28;:::i;:::-;;;;-1:-1:-1;;8688:37:0;;1391:25:7;;;-1:-1:-1;;;;;8688:37:0;;;8705:1;;8688:37;;1379:2:7;1364:18;8688:37:0;;;;;;;4089:174:6;;:::o;578:89:2:-;633:27;719:10:4;653:6:2;633:5;:27::i;973:161::-;1049:46;1065:7;719:10:4;1088:6:2;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;3465:96:5:-;3523:7;3549:5;3553:1;3549;:5;:::i;9111:576:0:-;-1:-1:-1;;;;;9194:21:0;;9186:67;;;;-1:-1:-1;;;9186:67:0;;15041:2:7;9186:67:0;;;15023:21:7;15080:2;15060:18;;;15053:30;15119:34;15099:18;;;15092:62;-1:-1:-1;;;15170:18:7;;;15163:31;15211:19;;9186:67:0;14839:397:7;9186:67:0;-1:-1:-1;;;;;9349:18:0;;9324:22;9349:18;;;;;;;;;;;9385:24;;;;9377:71;;;;-1:-1:-1;;;9377:71:0;;15443:2:7;9377:71:0;;;15425:21:7;15482:2;15462:18;;;15455:30;15521:34;15501:18;;;15494:62;-1:-1:-1;;;15572:18:7;;;15565:32;15614:19;;9377:71:0;15241:398:7;9377:71:0;-1:-1:-1;;;;;9482:18:0;;:9;:18;;;;;;;;;;9503:23;;;9482:44;;9546:12;:22;;9520:6;;9482:9;9546:22;;9520:6;;9546:22;:::i;:::-;;;;-1:-1:-1;;9584:37:0;;1391:25:7;;;9610:1:0;;-1:-1:-1;;;;;9584:37:0;;;;;1379:2:7;1364:18;9584:37:0;;;;;;;11786:121;;;:::o;14:597:7:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:7;574:15;-1:-1:-1;;570:29:7;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:7:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:7;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:7:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:180::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;-1:-1:-1;2100:23:7;;1949:180;-1:-1:-1;1949:180:7:o;2530:186::-;2589:6;2642:2;2630:9;2621:7;2617:23;2613:32;2610:52;;;2658:1;2655;2648:12;2610:52;2681:29;2700:9;2681:29;:::i;2721:322::-;2798:6;2806;2814;2867:2;2855:9;2846:7;2842:23;2838:32;2835:52;;;2883:1;2880;2873:12;2835:52;2919:9;2906:23;2896:33;;2976:2;2965:9;2961:18;2948:32;2938:42;;2999:38;3033:2;3022:9;3018:18;2999:38;:::i;:::-;2989:48;;2721:322;;;;;:::o;3048:397::-;3134:6;3142;3150;3158;3211:3;3199:9;3190:7;3186:23;3182:33;3179:53;;;3228:1;3225;3218:12;3179:53;3251:29;3270:9;3251:29;:::i;:::-;3241:39;;3327:2;3316:9;3312:18;3299:32;3289:42;;3378:2;3367:9;3363:18;3350:32;3340:42;;3401:38;3435:2;3424:9;3420:18;3401:38;:::i;:::-;3391:48;;3048:397;;;;;;;:::o;3450:260::-;3518:6;3526;3579:2;3567:9;3558:7;3554:23;3550:32;3547:52;;;3595:1;3592;3585:12;3547:52;3618:29;3637:9;3618:29;:::i;:::-;3608:39;;3666:38;3700:2;3689:9;3685:18;3666:38;:::i;:::-;3656:48;;3450:260;;;;;:::o;3715:248::-;3783:6;3791;3844:2;3832:9;3823:7;3819:23;3815:32;3812:52;;;3860:1;3857;3850:12;3812:52;-1:-1:-1;;3883:23:7;;;3953:2;3938:18;;;3925:32;;-1:-1:-1;3715:248:7:o;4176:380::-;4255:1;4251:12;;;;4298;;;4319:61;;4373:4;4365:6;4361:17;4351:27;;4319:61;4426:2;4418:6;4415:14;4395:18;4392:38;4389:161;;4472:10;4467:3;4463:20;4460:1;4453:31;4507:4;4504:1;4497:15;4535:4;4532:1;4525:15;4389:161;;4176:380;;;:::o;4561:341::-;4763:2;4745:21;;;4802:2;4782:18;;;4775:30;-1:-1:-1;;;4836:2:7;4821:18;;4814:47;4893:2;4878:18;;4561:341::o;4907:127::-;4968:10;4963:3;4959:20;4956:1;4949:31;4999:4;4996:1;4989:15;5023:4;5020:1;5013:15;5039:128;5079:3;5110:1;5106:6;5103:1;5100:13;5097:39;;;5116:18;;:::i;:::-;-1:-1:-1;5152:9:7;;5039:128::o;5172:415::-;5374:2;5356:21;;;5413:2;5393:18;;;5386:30;5452:34;5447:2;5432:18;;5425:62;-1:-1:-1;;;5518:2:7;5503:18;;5496:49;5577:3;5562:19;;5172:415::o;6673:422::-;6762:1;6805:5;6762:1;6819:270;6840:7;6830:8;6827:21;6819:270;;;6899:4;6895:1;6891:6;6887:17;6881:4;6878:27;6875:53;;;6908:18;;:::i;:::-;6958:7;6948:8;6944:22;6941:55;;;6978:16;;;;6941:55;7057:22;;;;7017:15;;;;6819:270;;;6823:3;6673:422;;;;;:::o;7100:806::-;7149:5;7179:8;7169:80;;-1:-1:-1;7220:1:7;7234:5;;7169:80;7268:4;7258:76;;-1:-1:-1;7305:1:7;7319:5;;7258:76;7350:4;7368:1;7363:59;;;;7436:1;7431:130;;;;7343:218;;7363:59;7393:1;7384:10;;7407:5;;;7431:130;7468:3;7458:8;7455:17;7452:43;;;7475:18;;:::i;:::-;-1:-1:-1;;7531:1:7;7517:16;;7546:5;;7343:218;;7645:2;7635:8;7632:16;7626:3;7620:4;7617:13;7613:36;7607:2;7597:8;7594:16;7589:2;7583:4;7580:12;7576:35;7573:77;7570:159;;;-1:-1:-1;7682:19:7;;;7714:5;;7570:159;7761:34;7786:8;7780:4;7761:34;:::i;:::-;7831:6;7827:1;7823:6;7819:19;7810:7;7807:32;7804:58;;;7842:18;;:::i;:::-;7880:20;;7100:806;-1:-1:-1;;;7100:806:7:o;7911:131::-;7971:5;8000:36;8027:8;8021:4;8000:36;:::i;8397:168::-;8437:7;8503:1;8499;8495:6;8491:14;8488:1;8485:21;8480:1;8473:9;8466:17;8462:45;8459:71;;;8510:18;;:::i;:::-;-1:-1:-1;8550:9:7;;8397:168::o;9643:277::-;9710:6;9763:2;9751:9;9742:7;9738:23;9734:32;9731:52;;;9779:1;9776;9769:12;9731:52;9811:9;9805:16;9864:5;9857:13;9850:21;9843:5;9840:32;9830:60;;9886:1;9883;9876:12;11734:135;11773:3;11794:17;;;11791:43;;11814:18;;:::i;:::-;-1:-1:-1;11861:1:7;11850:13;;11734:135::o;11874:217::-;11914:1;11940;11930:132;;11984:10;11979:3;11975:20;11972:1;11965:31;12019:4;12016:1;12009:15;12047:4;12044:1;12037:15;11930:132;-1:-1:-1;12076:9:7;;11874:217::o;15644:125::-;15684:4;15712:1;15709;15706:8;15703:34;;;15717:18;;:::i;:::-;-1:-1:-1;15754:9:7;;15644:125::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1332000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24674",
								"balanceOf(address)": "2651",
								"bridge()": "2426",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"changeMinMaxPrivateSale(uint256,uint256)": "50250",
								"decimals()": "245",
								"decreaseAllowance(address,uint256)": "26995",
								"endSale()": "25535",
								"increaseAllowance(address,uint256)": "27094",
								"max()": "2384",
								"min()": "2405",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"privateLimit()": "2341",
								"privateSale(address)": "infinite",
								"setBridge(address)": "27889",
								"setPrivateLimit(uint256)": "25619",
								"startSale(uint256,uint256)": "46741",
								"symbol()": "infinite",
								"totalSupply()": "2372",
								"transfer(address,uint256)": "51253",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28332",
								"viewSale()": "8691",
								"withdrawalBNB(uint256,uint256,address)": "infinite",
								"withdrawalToken(address,uint256,uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 5053,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 251,
									"end": 5053,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 251,
									"end": 5053,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 523,
									"end": 538,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 3175,
									"end": 3177,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 523,
									"end": 525,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 523,
									"end": 538,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 523,
									"end": 538,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 523,
									"end": 538,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 523,
									"end": 538,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 499,
									"end": 538,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 499,
									"end": 538,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 499,
									"end": 538,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 499,
									"end": 538,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 565,
									"end": 574,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 565,
									"end": 574,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 565,
									"end": 567,
									"name": "PUSH",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 565,
									"end": 574,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 565,
									"end": 574,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 565,
									"end": 574,
									"name": "tag",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 565,
									"end": 574,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 544,
									"end": 574,
									"name": "PUSH",
									"source": 6,
									"value": "C"
								},
								{
									"begin": 544,
									"end": 574,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 601,
									"end": 613,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 609,
									"end": 612,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 601,
									"end": 604,
									"name": "PUSH",
									"source": 6,
									"value": "C"
								},
								{
									"begin": 601,
									"end": 604,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 601,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 601,
									"end": 608,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 601,
									"end": 608,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 601,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18446744073709551788"
								},
								{
									"begin": 601,
									"end": 608,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 601,
									"end": 608,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 601,
									"end": 613,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 601,
									"end": 613,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 601,
									"end": 613,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 601,
									"end": 613,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 601,
									"end": 613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 601,
									"end": 613,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 601,
									"end": 613,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 580,
									"end": 613,
									"name": "PUSH",
									"source": 6,
									"value": "D"
								},
								{
									"begin": 580,
									"end": 613,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 649,
									"end": 656,
									"name": "PUSH",
									"source": 6,
									"value": "F4240"
								},
								{
									"begin": 619,
									"end": 656,
									"name": "PUSH",
									"source": 6,
									"value": "E"
								},
								{
									"begin": 619,
									"end": 656,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1466,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1270,
									"end": 1466,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1466,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1466,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1466,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1466,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1466,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1466,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1466,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1466,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1466,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1466,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1270,
									"end": 1466,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1466,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1466,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1466,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1270,
									"end": 1466,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1466,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1270,
									"end": 1466,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1466,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1270,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D65746163636573"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4163636573"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2052,
									"end": 2057,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2044,
									"end": 2057,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2077,
									"end": 2084,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2067,
									"end": 2084,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1341,
									"end": 1346,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1341,
									"end": 1359,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1341,
									"end": 1359,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1349,
									"end": 1359,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1341,
									"end": 1359,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1341,
									"end": 1359,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1341,
									"end": 1359,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1341,
									"end": 1359,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1341,
									"end": 1359,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1341,
									"end": 1359,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1341,
									"end": 1359,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1365,
									"end": 1371,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1365,
									"end": 1381,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1365,
									"end": 1381,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1365,
									"end": 1381,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1365,
									"end": 1381,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1365,
									"end": 1381,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1365,
									"end": 1381,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1365,
									"end": 1381,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1365,
									"end": 1381,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1365,
									"end": 1381,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1365,
									"end": 1381,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1422,
									"end": 1426,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 1422,
									"end": 1426,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 1427,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1388,
									"end": 1427,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1403,
									"end": 1407,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 1403,
									"end": 1407,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1410,
									"end": 1426,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1410,
									"end": 1426,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1410,
									"end": 1419,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "5F5E100"
								},
								{
									"begin": 1410,
									"end": 1426,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1410,
									"end": 1426,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1410,
									"end": 1426,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1410,
									"end": 1426,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 1393,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1388,
									"end": 1427,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1388,
									"end": 1427,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1388,
									"end": 1427,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1466,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 251,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 251,
									"end": 5053,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3908,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3934,
									"end": 3939,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 3938,
									"end": 3939,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3934,
									"end": 3935,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3934,
									"end": 3939,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 3934,
									"end": 3939,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3934,
									"end": 3939,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 3934,
									"end": 3939,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3927,
									"end": 3939,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3927,
									"end": 3939,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3850,
									"end": 3946,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 8402,
									"end": 8791,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8402,
									"end": 8791,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8485,
									"end": 8506,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8485,
									"end": 8506,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5142,
									"end": 5144,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5124,
									"end": 5145,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5181,
									"end": 5183,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5161,
									"end": 5179,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 5161,
									"end": 5179,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5161,
									"end": 5179,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5154,
									"end": 5184,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5220,
									"end": 5253,
									"name": "PUSH",
									"source": 7,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 5200,
									"end": 5218,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 5200,
									"end": 5218,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5200,
									"end": 5218,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5193,
									"end": 5254,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5271,
									"end": 5289,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5271,
									"end": 5289,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 8477,
									"end": 8542,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8629,
									"end": 8635,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8625,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 8613,
									"end": 8625,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 8613,
									"end": 8635,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8613,
									"end": 8635,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8654,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8663,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8667,
									"end": 8673,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8667,
									"end": 8673,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8654,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8667,
									"end": 8673,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 8667,
									"end": 8673,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 8645,
									"end": 8673,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8645,
									"end": 8673,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5579,
									"end": 5604,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5579,
									"end": 5604,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5579,
									"end": 5604,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8705,
									"end": 8706,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8705,
									"end": 8706,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5567,
									"end": 5569,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5552,
									"end": 5570,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8688,
									"end": 8725,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 8402,
									"end": 8791,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8402,
									"end": 8791,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8402,
									"end": 8791,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 11786,
									"end": 11907,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 11786,
									"end": 11907,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11786,
									"end": 11907,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11786,
									"end": 11907,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11786,
									"end": 11907,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11786,
									"end": 11907,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 146,
									"end": 568,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 146,
									"end": 568,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 235,
									"end": 236,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 278,
									"end": 283,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 235,
									"end": 236,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 292,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 292,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 313,
									"end": 320,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 303,
									"end": 311,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 300,
									"end": 321,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 292,
									"end": 562,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 292,
									"end": 562,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 292,
									"end": 562,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 372,
									"end": 376,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 368,
									"end": 369,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 364,
									"end": 370,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 360,
									"end": 377,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 354,
									"end": 358,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 351,
									"end": 378,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 348,
									"end": 401,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 348,
									"end": 401,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 348,
									"end": 401,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 381,
									"end": 399,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 381,
									"end": 399,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 381,
									"end": 399,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 381,
									"end": 399,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 381,
									"end": 399,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 431,
									"end": 438,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 421,
									"end": 429,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 417,
									"end": 439,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 414,
									"end": 469,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 414,
									"end": 469,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 414,
									"end": 469,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 451,
									"end": 467,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 451,
									"end": 467,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 451,
									"end": 467,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 451,
									"end": 467,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 414,
									"end": 469,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 414,
									"end": 469,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 530,
									"end": 552,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 530,
									"end": 552,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 530,
									"end": 552,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 530,
									"end": 552,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 490,
									"end": 505,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 490,
									"end": 505,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 490,
									"end": 505,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 490,
									"end": 505,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 292,
									"end": 562,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 292,
									"end": 562,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 292,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 292,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 296,
									"end": 299,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 146,
									"end": 568,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 146,
									"end": 568,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 146,
									"end": 568,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 146,
									"end": 568,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 146,
									"end": 568,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 146,
									"end": 568,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 622,
									"end": 627,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 652,
									"end": 660,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 642,
									"end": 722,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 642,
									"end": 722,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 693,
									"end": 694,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 712,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 707,
									"end": 712,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 642,
									"end": 722,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 642,
									"end": 722,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 741,
									"end": 745,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 731,
									"end": 807,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 731,
									"end": 807,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 778,
									"end": 779,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 792,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 792,
									"end": 797,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 731,
									"end": 807,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 731,
									"end": 807,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 823,
									"end": 827,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 841,
									"end": 842,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 836,
									"end": 895,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 836,
									"end": 895,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 836,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 836,
									"end": 895,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 909,
									"end": 910,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 836,
									"end": 895,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 836,
									"end": 895,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 866,
									"end": 867,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 857,
									"end": 867,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 857,
									"end": 867,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 880,
									"end": 885,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 880,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 880,
									"end": 885,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 941,
									"end": 944,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 931,
									"end": 939,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 928,
									"end": 945,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 925,
									"end": 968,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 925,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 925,
									"end": 968,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 948,
									"end": 966,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 948,
									"end": 966,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 948,
									"end": 966,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 948,
									"end": 966,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 948,
									"end": 966,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1004,
									"end": 1005,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 990,
									"end": 1006,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 990,
									"end": 1006,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1118,
									"end": 1120,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1108,
									"end": 1116,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1121,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1099,
									"end": 1102,
									"name": "PUSH",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 1093,
									"end": 1097,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1090,
									"end": 1103,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1086,
									"end": 1122,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1080,
									"end": 1082,
									"name": "PUSH",
									"source": 7,
									"value": "4E"
								},
								{
									"begin": 1070,
									"end": 1078,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1067,
									"end": 1083,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1062,
									"end": 1064,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 1056,
									"end": 1060,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1053,
									"end": 1065,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1049,
									"end": 1084,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1046,
									"end": 1123,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1155,
									"end": 1174,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 1174,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 1174,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 1259,
									"end": 1267,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1253,
									"end": 1257,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1234,
									"end": 1268,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1304,
									"end": 1310,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1300,
									"end": 1301,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1296,
									"end": 1302,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1292,
									"end": 1311,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1283,
									"end": 1290,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1280,
									"end": 1312,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1277,
									"end": 1335,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1277,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 1277,
									"end": 1335,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1315,
									"end": 1333,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1353,
									"end": 1373,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1353,
									"end": 1373,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 573,
									"end": 1379,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1384,
									"end": 1524,
									"name": "tag",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1384,
									"end": 1524,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1442,
									"end": 1447,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1471,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1512,
									"end": 1516,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1502,
									"end": 1510,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 1517,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1492,
									"end": 1496,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1471,
									"end": 1518,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1471,
									"end": 1518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1697,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1529,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1569,
									"end": 1576,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1631,
									"end": 1632,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1627,
									"end": 1633,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1637,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1620,
									"end": 1621,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1617,
									"end": 1638,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1612,
									"end": 1613,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1614,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1598,
									"end": 1615,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1594,
									"end": 1639,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1591,
									"end": 1662,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1591,
									"end": 1662,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 1591,
									"end": 1662,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1642,
									"end": 1660,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 1642,
									"end": 1660,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1642,
									"end": 1660,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1642,
									"end": 1660,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 1642,
									"end": 1660,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1682,
									"end": 1691,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1682,
									"end": 1691,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1697,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1992,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 1702,
									"end": 1992,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1772,
									"end": 1778,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1825,
									"end": 1827,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1813,
									"end": 1822,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1804,
									"end": 1811,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1823,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 1828,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1793,
									"end": 1845,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1793,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 1793,
									"end": 1845,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1841,
									"end": 1842,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1838,
									"end": 1839,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1831,
									"end": 1843,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1793,
									"end": 1845,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 1793,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1867,
									"end": 1883,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1867,
									"end": 1883,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1912,
									"end": 1943,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1912,
									"end": 1943,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1902,
									"end": 1944,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1902,
									"end": 1944,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1892,
									"end": 1962,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 1892,
									"end": 1962,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1958,
									"end": 1959,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1955,
									"end": 1956,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1948,
									"end": 1960,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1892,
									"end": 1962,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 1892,
									"end": 1962,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1981,
									"end": 1986,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1992,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1702,
									"end": 1992,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1997,
									"end": 2124,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1997,
									"end": 2124,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2058,
									"end": 2068,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 2053,
									"end": 2056,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 2049,
									"end": 2069,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2046,
									"end": 2047,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2039,
									"end": 2070,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2089,
									"end": 2093,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 2086,
									"end": 2087,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2079,
									"end": 2094,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2113,
									"end": 2117,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2110,
									"end": 2111,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2103,
									"end": 2118,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2129,
									"end": 2509,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 2129,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2208,
									"end": 2209,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2204,
									"end": 2216,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2204,
									"end": 2216,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2204,
									"end": 2216,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2204,
									"end": 2216,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2251,
									"end": 2263,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2251,
									"end": 2263,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2251,
									"end": 2263,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2272,
									"end": 2333,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2272,
									"end": 2333,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2326,
									"end": 2330,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 2318,
									"end": 2324,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2314,
									"end": 2331,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2304,
									"end": 2331,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2304,
									"end": 2331,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2272,
									"end": 2333,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2272,
									"end": 2333,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2379,
									"end": 2381,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2377,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2348,
									"end": 2366,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2345,
									"end": 2383,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2342,
									"end": 2503,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 2342,
									"end": 2503,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2425,
									"end": 2435,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 2420,
									"end": 2423,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 2416,
									"end": 2436,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2413,
									"end": 2414,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2406,
									"end": 2437,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2460,
									"end": 2464,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2457,
									"end": 2458,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2450,
									"end": 2465,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2488,
									"end": 2492,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2485,
									"end": 2486,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2478,
									"end": 2493,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2342,
									"end": 2503,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 2342,
									"end": 2503,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2342,
									"end": 2503,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2129,
									"end": 2509,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2129,
									"end": 2509,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2129,
									"end": 2509,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2129,
									"end": 2509,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2640,
									"end": 3185,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2640,
									"end": 3185,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2742,
									"end": 2744,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2737,
									"end": 2740,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2734,
									"end": 2745,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2731,
									"end": 3179,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2731,
									"end": 3179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 2731,
									"end": 3179,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2778,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2803,
									"end": 2808,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2799,
									"end": 2801,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 2809,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2848,
									"end": 2852,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2844,
									"end": 2846,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2834,
									"end": 2853,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2918,
									"end": 2920,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2906,
									"end": 2916,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2902,
									"end": 2921,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2899,
									"end": 2900,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 2895,
									"end": 2922,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2889,
									"end": 2893,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2885,
									"end": 2923,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2954,
									"end": 2958,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2942,
									"end": 2952,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2939,
									"end": 2959,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2936,
									"end": 2983,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2936,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 2936,
									"end": 2983,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2977,
									"end": 2981,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2936,
									"end": 2983,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 2936,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3032,
									"end": 3034,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3027,
									"end": 3030,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3023,
									"end": 3035,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3020,
									"end": 3021,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 3016,
									"end": 3036,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3010,
									"end": 3014,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3006,
									"end": 3037,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2996,
									"end": 3037,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2996,
									"end": 3037,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3087,
									"end": 3169,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3087,
									"end": 3169,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3105,
									"end": 3107,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3098,
									"end": 3103,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3108,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3087,
									"end": 3169,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3087,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3087,
									"end": 3169,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3150,
									"end": 3167,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3150,
									"end": 3167,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3150,
									"end": 3167,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3131,
									"end": 3132,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3120,
									"end": 3133,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3087,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 3087,
									"end": 3169,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3087,
									"end": 3169,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3087,
									"end": 3169,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3091,
									"end": 3094,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3091,
									"end": 3094,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3091,
									"end": 3094,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2640,
									"end": 3185,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2640,
									"end": 3185,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2640,
									"end": 3185,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2640,
									"end": 3185,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3361,
									"end": 4713,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 3361,
									"end": 4713,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3481,
									"end": 3491,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3481,
									"end": 3491,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3503,
									"end": 3533,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3503,
									"end": 3533,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3500,
									"end": 3556,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3500,
									"end": 3556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 3500,
									"end": 3556,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3536,
									"end": 3554,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 3536,
									"end": 3554,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 3536,
									"end": 3554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3536,
									"end": 3554,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 3536,
									"end": 3554,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3565,
									"end": 3662,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 3655,
									"end": 3661,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3615,
									"end": 3653,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 3647,
									"end": 3651,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3641,
									"end": 3652,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3615,
									"end": 3653,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 3615,
									"end": 3653,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3615,
									"end": 3653,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 3615,
									"end": 3653,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3565,
									"end": 3662,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 3565,
									"end": 3662,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3565,
									"end": 3662,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 3565,
									"end": 3662,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3717,
									"end": 3721,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3717,
									"end": 3721,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3781,
									"end": 3783,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3770,
									"end": 3784,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3770,
									"end": 3784,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3798,
									"end": 3799,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3793,
									"end": 4456,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 4456,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 4456,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 3793,
									"end": 4456,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4500,
									"end": 4501,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4517,
									"end": 4523,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4514,
									"end": 4603,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4514,
									"end": 4603,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4514,
									"end": 4603,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4569,
									"end": 4588,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4569,
									"end": 4588,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4569,
									"end": 4588,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4563,
									"end": 4589,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4514,
									"end": 4603,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4514,
									"end": 4603,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3318,
									"end": 3319,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3314,
									"end": 3325,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3314,
									"end": 3325,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3314,
									"end": 3325,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3310,
									"end": 3334,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3306,
									"end": 3335,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3296,
									"end": 3336,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3342,
									"end": 3343,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3338,
									"end": 3349,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3338,
									"end": 3349,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3338,
									"end": 3349,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3293,
									"end": 3350,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4616,
									"end": 4697,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4616,
									"end": 4697,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3763,
									"end": 4707,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 3763,
									"end": 4707,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 4456,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 3793,
									"end": 4456,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2587,
									"end": 2588,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2580,
									"end": 2594,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2580,
									"end": 2594,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2580,
									"end": 2594,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2624,
									"end": 2628,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2611,
									"end": 2629,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2611,
									"end": 2629,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3829,
									"end": 3849,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3829,
									"end": 3849,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3829,
									"end": 3849,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3947,
									"end": 4183,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 3947,
									"end": 4183,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3961,
									"end": 3968,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3958,
									"end": 3959,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3955,
									"end": 3969,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3947,
									"end": 4183,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3947,
									"end": 4183,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 3947,
									"end": 4183,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4050,
									"end": 4069,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4050,
									"end": 4069,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4050,
									"end": 4069,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4044,
									"end": 4070,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4029,
									"end": 4071,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4029,
									"end": 4071,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4142,
									"end": 4169,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 4142,
									"end": 4169,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4142,
									"end": 4169,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4142,
									"end": 4169,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 4110,
									"end": 4111,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4098,
									"end": 4112,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4098,
									"end": 4112,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4098,
									"end": 4112,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4098,
									"end": 4112,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3977,
									"end": 3996,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3977,
									"end": 3996,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3947,
									"end": 4183,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 3947,
									"end": 4183,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3947,
									"end": 4183,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 3947,
									"end": 4183,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3951,
									"end": 3954,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4211,
									"end": 4217,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4202,
									"end": 4209,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4199,
									"end": 4218,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4196,
									"end": 4397,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4196,
									"end": 4397,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 4196,
									"end": 4397,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4272,
									"end": 4291,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4272,
									"end": 4291,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4272,
									"end": 4291,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4266,
									"end": 4292,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4355,
									"end": 4356,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 4351,
									"end": 4365,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4351,
									"end": 4365,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4351,
									"end": 4365,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 4367,
									"end": 4370,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 4347,
									"end": 4371,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4343,
									"end": 4380,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 4339,
									"end": 4381,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4324,
									"end": 4382,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4309,
									"end": 4383,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4309,
									"end": 4383,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4196,
									"end": 4397,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 4196,
									"end": 4397,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4443,
									"end": 4444,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4427,
									"end": 4441,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4427,
									"end": 4441,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4427,
									"end": 4441,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 4423,
									"end": 4445,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4410,
									"end": 4446,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4410,
									"end": 4446,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3361,
									"end": 4713,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4718,
									"end": 4935,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 4718,
									"end": 4935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4758,
									"end": 4759,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4784,
									"end": 4785,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4774,
									"end": 4906,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 4774,
									"end": 4906,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4828,
									"end": 4838,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 4823,
									"end": 4826,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 4819,
									"end": 4839,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 4816,
									"end": 4817,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4809,
									"end": 4840,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4863,
									"end": 4867,
									"name": "PUSH",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 4860,
									"end": 4861,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4853,
									"end": 4868,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4891,
									"end": 4895,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4888,
									"end": 4889,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4881,
									"end": 4896,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4774,
									"end": 4906,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 4774,
									"end": 4906,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4920,
									"end": 4929,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4920,
									"end": 4929,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4718,
									"end": 4935,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5300,
									"end": 5428,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 5300,
									"end": 5428,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5340,
									"end": 5343,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5371,
									"end": 5372,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5367,
									"end": 5373,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5364,
									"end": 5365,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5361,
									"end": 5374,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5358,
									"end": 5397,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5358,
									"end": 5397,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 5358,
									"end": 5397,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5377,
									"end": 5395,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 5377,
									"end": 5395,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 5377,
									"end": 5395,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5377,
									"end": 5395,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 5377,
									"end": 5395,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5413,
									"end": 5422,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5413,
									"end": 5422,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5300,
									"end": 5428,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5433,
									"end": 5610,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 5433,
									"end": 5610,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 251,
									"end": 5053,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 5053,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 251,
									"end": 5053,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 5053,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 5053,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 251,
									"end": 5053,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 5053,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209dc78c23c26b4a7e1a8d367240374e6cc55f28cffcc146fb8ebb6d0c2857364264736f6c634300080f0033",
									".code": [
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "79CC6790"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "E7D53FCB"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "E7D53FCB"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "F4F3122E"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "F8897945"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "E181203A"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "E78CEA92"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "A457C2D7"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "A457C2D7"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "ADBC7CEE"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "B2938BEE"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "79CC6790"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "8DD14802"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "3C3B7995"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "4D1D03D1"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "4D1D03D1"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "534B1442"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "6AC5DB19"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "3C3B7995"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "42966C68"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "380D831B"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "39509351"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 5053,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2156,
											"end": 2254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2156,
											"end": 2254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4433,
											"end": 4630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4433,
											"end": 4630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5192,
											"end": 5478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5192,
											"end": 5478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3177,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2634,
											"end": 2752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5873,
											"end": 6107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5873,
											"end": 6107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 619,
											"end": 656,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 619,
											"end": 656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 619,
											"end": 656,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 619,
											"end": 656,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 619,
											"end": 656,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 619,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 619,
											"end": 656,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 619,
											"end": 656,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 619,
											"end": 656,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 619,
											"end": 656,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 619,
											"end": 656,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 619,
											"end": 656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 619,
											"end": 656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 619,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 619,
											"end": 656,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 619,
											"end": 656,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 619,
											"end": 656,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 619,
											"end": 656,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4089,
											"end": 4263,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4089,
											"end": 4263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4089,
											"end": 4263,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4089,
											"end": 4263,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4089,
											"end": 4263,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4089,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4089,
											"end": 4263,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4089,
											"end": 4263,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4263,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4089,
											"end": 4263,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4089,
											"end": 4263,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4089,
											"end": 4263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4089,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 4089,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 4089,
											"end": 4263,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4089,
											"end": 4263,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4089,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 4089,
											"end": 4263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4089,
											"end": 4263,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 4089,
											"end": 4263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4089,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 4089,
											"end": 4263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4379,
											"end": 4552,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 4379,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4379,
											"end": 4552,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4379,
											"end": 4552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4379,
											"end": 4552,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4379,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4379,
											"end": 4552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4379,
											"end": 4552,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4379,
											"end": 4552,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4379,
											"end": 4552,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4379,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4379,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 4379,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 4379,
											"end": 4552,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4379,
											"end": 4552,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4379,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 4379,
											"end": 4552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4379,
											"end": 4552,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 4379,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4379,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 4379,
											"end": 4552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2451,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 2286,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2451,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2451,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2451,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2286,
											"end": 2451,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2451,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2451,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2451,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2451,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2286,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2414,
											"end": 2421,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2414,
											"end": 2421,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2423,
											"end": 2430,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2423,
											"end": 2430,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2436,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2432,
											"end": 2436,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2439,
											"end": 2445,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 2439,
											"end": 2445,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2451,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2286,
											"end": 2451,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2286,
											"end": 2451,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2365,
											"end": 2390,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2390,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2390,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2421,
											"end": 2423,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2406,
											"end": 2424,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2406,
											"end": 2424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2399,
											"end": 2433,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2399,
											"end": 2433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2399,
											"end": 2433,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2399,
											"end": 2433,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2467,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2467,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2467,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2442,
											"end": 2476,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2509,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2492,
											"end": 2510,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2510,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2519,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2352,
											"end": 2355,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2337,
											"end": 2356,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2134,
											"end": 2525,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3005,
											"end": 3170,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3005,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3170,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3170,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3170,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3005,
											"end": 3170,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3005,
											"end": 3170,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3170,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3170,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3005,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3005,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3005,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3005,
											"end": 3170,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3170,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3005,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3005,
											"end": 3170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3170,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3005,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3005,
											"end": 3170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 544,
											"end": 574,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 544,
											"end": 574,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 544,
											"end": 574,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 544,
											"end": 574,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 544,
											"end": 574,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 544,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 544,
											"end": 574,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 544,
											"end": 574,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 574,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 544,
											"end": 574,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 544,
											"end": 574,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 544,
											"end": 574,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 544,
											"end": 574,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 544,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 544,
											"end": 574,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 544,
											"end": 574,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 544,
											"end": 574,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 544,
											"end": 574,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3408,
											"end": 3533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4668,
											"end": 4883,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 4668,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4668,
											"end": 4883,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4668,
											"end": 4883,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4668,
											"end": 4883,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4668,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 4668,
											"end": 4883,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4668,
											"end": 4883,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4668,
											"end": 4883,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4668,
											"end": 4883,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4668,
											"end": 4883,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 4668,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4668,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 4668,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4668,
											"end": 4883,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4668,
											"end": 4883,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4668,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 4668,
											"end": 4883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4668,
											"end": 4883,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4668,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4668,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 4668,
											"end": 4883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 4005,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3834,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 4005,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 4005,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 4005,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3834,
											"end": 4005,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 4005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3834,
											"end": 4005,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 4005,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 4005,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3834,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3834,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3834,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3834,
											"end": 4005,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 4005,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3834,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 3834,
											"end": 4005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 4005,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3834,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3834,
											"end": 4005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2367,
											"end": 2469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6594,
											"end": 7021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 6594,
											"end": 7021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3729,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 3729,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3544,
											"end": 3830,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3544,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3830,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3830,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3830,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3544,
											"end": 3830,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3830,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3544,
											"end": 3830,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3830,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3830,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3544,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3544,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3544,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3544,
											"end": 3830,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3830,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3544,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3544,
											"end": 3830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3830,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3544,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3544,
											"end": 3830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3536,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3174,
											"end": 3536,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3536,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3536,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3536,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3174,
											"end": 3536,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3536,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3174,
											"end": 3536,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3536,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3536,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3174,
											"end": 3536,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3174,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3174,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3174,
											"end": 3536,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3536,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3174,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 3174,
											"end": 3536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3536,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3174,
											"end": 3536,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3174,
											"end": 3536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3976,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3976,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2756,
											"end": 3001,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2756,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 3001,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 3001,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 3001,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2756,
											"end": 3001,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 3001,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 3001,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 3001,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 3001,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2756,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2756,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2756,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2756,
											"end": 3001,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 3001,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2756,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2756,
											"end": 3001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 3001,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2756,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2756,
											"end": 3001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 386,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 365,
											"end": 386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 365,
											"end": 386,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 365,
											"end": 386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 365,
											"end": 386,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 365,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 365,
											"end": 386,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 365,
											"end": 386,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 386,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 365,
											"end": 386,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 365,
											"end": 386,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 365,
											"end": 386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 365,
											"end": 386,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 365,
											"end": 386,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 365,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 365,
											"end": 386,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 365,
											"end": 386,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 365,
											"end": 386,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 365,
											"end": 386,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 386,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 365,
											"end": 386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 365,
											"end": 386,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 386,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4165,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4165,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4104,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4087,
											"end": 4105,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 365,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3968,
											"end": 4171,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1680,
											"end": 2282,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1680,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1680,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1680,
											"end": 2282,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2282,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1680,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1680,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2282,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1680,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1680,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1675,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1470,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1675,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1675,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1675,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1470,
											"end": 1675,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1675,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1675,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1675,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1675,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1470,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1470,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1470,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1470,
											"end": 1675,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1675,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1470,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1470,
											"end": 1675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1675,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 1470,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1470,
											"end": 1675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2628,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2457,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2628,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2628,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2628,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2457,
											"end": 2628,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2628,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2628,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2628,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2628,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2457,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2457,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2457,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2457,
											"end": 2628,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2628,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2457,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2457,
											"end": 2628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2628,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2457,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2457,
											"end": 2628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 580,
											"end": 613,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 580,
											"end": 613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 580,
											"end": 613,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 580,
											"end": 613,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 580,
											"end": 613,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 580,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 580,
											"end": 613,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 580,
											"end": 613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 580,
											"end": 613,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 580,
											"end": 613,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 580,
											"end": 613,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 580,
											"end": 613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 580,
											"end": 613,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 580,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 580,
											"end": 613,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 580,
											"end": 613,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 580,
											"end": 613,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 580,
											"end": 613,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2223,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2242,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2235,
											"end": 2247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2235,
											"end": 2247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4586,
											"end": 4593,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 4570,
											"end": 4602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4612,
											"end": 4623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4623,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5406,
											"end": 5412,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 5375,
											"end": 5413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 5433,
											"end": 5437,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 5423,
											"end": 5450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1208,
											"end": 1218,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1208,
											"end": 1227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1200,
											"end": 1248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2704,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 2682,
											"end": 2689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2682,
											"end": 2704,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2721,
											"end": 2747,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2731,
											"end": 2746,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "B144BE0F16F8D30F2E18EF8F7938D5E90207932D96650E592FF47725716818FB"
										},
										{
											"begin": 2721,
											"end": 2747,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2721,
											"end": 2747,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2747,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2747,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2747,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2747,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2721,
											"end": 2747,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 2634,
											"end": 2752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6068,
											"end": 6078,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 6040,
											"end": 6065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 6040,
											"end": 6078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6015,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 6015,
											"end": 6079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4263,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 4089,
											"end": 4263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4939,
											"end": 4945,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4939,
											"end": 4945,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4939,
											"end": 4945,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4935,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4945,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 4917,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4232,
											"end": 4256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 4238,
											"end": 4247,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4249,
											"end": 4255,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4232,
											"end": 4237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 4232,
											"end": 4256,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4232,
											"end": 4256,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 4232,
											"end": 4256,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4089,
											"end": 4263,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4089,
											"end": 4263,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4089,
											"end": 4263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4379,
											"end": 4552,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 4379,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4939,
											"end": 4945,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4939,
											"end": 4945,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4939,
											"end": 4945,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4935,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4945,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 4917,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4545,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 4538,
											"end": 4544,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4537,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 4527,
											"end": 4545,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4545,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 4527,
											"end": 4545,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4379,
											"end": 4552,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4379,
											"end": 4552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3170,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3005,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1208,
											"end": 1218,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1208,
											"end": 1227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1200,
											"end": 1248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3088,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3092,
											"end": 3093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3103,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3074,
											"end": 3103,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3074,
											"end": 3103,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3074,
											"end": 3103,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3103,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5794,
											"end": 5796,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3074,
											"end": 3103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3074,
											"end": 3103,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3103,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5776,
											"end": 5797,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5833,
											"end": 5834,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5813,
											"end": 5831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5813,
											"end": 5831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5813,
											"end": 5831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5806,
											"end": 5835,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A65726F21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5851,
											"end": 5869,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5851,
											"end": 5869,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5851,
											"end": 5869,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5844,
											"end": 5879,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3074,
											"end": 3103,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 5592,
											"end": 5920,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3074,
											"end": 3103,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3074,
											"end": 3103,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3111,
											"end": 3123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 3111,
											"end": 3132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3111,
											"end": 3132,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3111,
											"end": 3132,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3145,
											"end": 3165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3145,
											"end": 3165,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3145,
											"end": 3165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6D487F3988610155B3A9EF590F8AC170134D24E6505B9DDD3160E34ABAA0EDAF"
										},
										{
											"begin": 3145,
											"end": 3165,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3145,
											"end": 3165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3145,
											"end": 3165,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3145,
											"end": 3165,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3145,
											"end": 3165,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3145,
											"end": 3165,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3145,
											"end": 3165,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3145,
											"end": 3165,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4668,
											"end": 4883,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 4668,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4939,
											"end": 4945,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4939,
											"end": 4945,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4939,
											"end": 4945,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4935,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4945,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 4917,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 4917,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4845,
											"end": 4876,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 4860,
											"end": 4867,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4869,
											"end": 4875,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4845,
											"end": 4859,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 4845,
											"end": 4876,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 4005,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3834,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1208,
											"end": 1218,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1208,
											"end": 1227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1200,
											"end": 1248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3903,
											"end": 3924,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3903,
											"end": 3924,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3895,
											"end": 3941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 3895,
											"end": 3941,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3895,
											"end": 3941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3895,
											"end": 3941,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3895,
											"end": 3941,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3895,
											"end": 3941,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6127,
											"end": 6129,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3895,
											"end": 3941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3895,
											"end": 3941,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3895,
											"end": 3941,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6109,
											"end": 6130,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6166,
											"end": 6168,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 6146,
											"end": 6164,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6146,
											"end": 6164,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6146,
											"end": 6164,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6139,
											"end": 6169,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A65726F206164647265737321"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6185,
											"end": 6203,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6185,
											"end": 6203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6185,
											"end": 6203,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6178,
											"end": 6221,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3895,
											"end": 3941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 5925,
											"end": 6262,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3895,
											"end": 3941,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 3895,
											"end": 3941,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3954,
											"end": 3972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3954,
											"end": 3972,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4165,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4165,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3954,
											"end": 3972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E605AC02EA219003EC58FC9CF4D4B3C5F2D62EC39807B1C63886DDD47A6FCD6E"
										},
										{
											"begin": 3954,
											"end": 3972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4104,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4087,
											"end": 4105,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3954,
											"end": 3972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3954,
											"end": 3972,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3954,
											"end": 3972,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3954,
											"end": 3972,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3954,
											"end": 3972,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3954,
											"end": 3972,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3954,
											"end": 3972,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3982,
											"end": 3988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3982,
											"end": 3998,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3982,
											"end": 3998,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3982,
											"end": 3998,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3982,
											"end": 3998,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3982,
											"end": 3998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3982,
											"end": 3998,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3982,
											"end": 3998,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3982,
											"end": 3998,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3982,
											"end": 3998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3982,
											"end": 3998,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3982,
											"end": 3998,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3982,
											"end": 3998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3982,
											"end": 3998,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 4005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2436,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2448,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6785,
											"end": 6792,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 6768,
											"end": 6793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6741,
											"end": 6793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6741,
											"end": 6793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6831,
											"end": 6846,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6469,
											"end": 6471,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6451,
											"end": 6472,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6508,
											"end": 6510,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 6488,
											"end": 6506,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6488,
											"end": 6506,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6506,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6481,
											"end": 6511,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6547,
											"end": 6581,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 6527,
											"end": 6545,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6527,
											"end": 6545,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6527,
											"end": 6545,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6520,
											"end": 6582,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6598,
											"end": 6616,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6598,
											"end": 6616,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6598,
											"end": 6616,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6591,
											"end": 6626,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6643,
											"end": 6662,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6643,
											"end": 6662,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 6267,
											"end": 6668,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 6931,
											"end": 6936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 6945,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 6981,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6963,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6981,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 6922,
											"end": 6982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3881,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3862,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 3862,
											"end": 3890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3544,
											"end": 3830,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3544,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1208,
											"end": 1218,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1208,
											"end": 1227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1200,
											"end": 1248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3677,
											"end": 3684,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3652,
											"end": 3673,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 3652,
											"end": 3684,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3652,
											"end": 3684,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3644,
											"end": 3685,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 3644,
											"end": 3685,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3644,
											"end": 3685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3644,
											"end": 3685,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3644,
											"end": 3685,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3644,
											"end": 3685,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 3644,
											"end": 3685,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3723,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 3716,
											"end": 3723,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 3710,
											"end": 3723,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 3710,
											"end": 3723,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3723,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 3710,
											"end": 3723,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3738,
											"end": 3773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8249,
											"end": 8274,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8249,
											"end": 8274,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8249,
											"end": 8274,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8305,
											"end": 8307,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8290,
											"end": 8308,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8290,
											"end": 8308,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8283,
											"end": 8317,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8283,
											"end": 8317,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8283,
											"end": 8317,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8353,
											"end": 8385,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8353,
											"end": 8385,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8333,
											"end": 8351,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8333,
											"end": 8351,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8333,
											"end": 8351,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8326,
											"end": 8386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3738,
											"end": 3773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4508977418B95BAC209196E03356692C2D8F47957DEC1C15AF1A44CC40D39A04"
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8237,
											"end": 8239,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3738,
											"end": 3773,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3783,
											"end": 3803,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3803,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8FC"
										},
										{
											"begin": 3804,
											"end": 3816,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 3812,
											"end": 3816,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3811,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3816,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 3804,
											"end": 3816,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3816,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 3804,
											"end": 3816,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3783,
											"end": 3817,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3783,
											"end": 3817,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 3783,
											"end": 3817,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3783,
											"end": 3817,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3783,
											"end": 3817,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 3783,
											"end": 3817,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3817,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3634,
											"end": 3830,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3544,
											"end": 3830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3536,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3174,
											"end": 3536,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1208,
											"end": 1218,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1208,
											"end": 1227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1200,
											"end": 1248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3302,
											"end": 3326,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3302,
											"end": 3326,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 3343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 3294,
											"end": 3343,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 3343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3343,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3294,
											"end": 3343,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 3343,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8772,
											"end": 8774,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 3343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3294,
											"end": 3343,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 3343,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8754,
											"end": 8775,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8811,
											"end": 8813,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 8791,
											"end": 8809,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8791,
											"end": 8809,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8791,
											"end": 8809,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8784,
											"end": 8814,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61646472657373207A65726F21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8866,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8883,
											"end": 8901,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8883,
											"end": 8901,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3294,
											"end": 3343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 8570,
											"end": 8907,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3294,
											"end": 3343,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 3294,
											"end": 3343,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3381,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 3374,
											"end": 3381,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 3368,
											"end": 3381,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 3368,
											"end": 3381,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3381,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 3368,
											"end": 3381,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3437,
											"end": 3486,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3486,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9199,
											"end": 9214,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 9199,
											"end": 9214,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9199,
											"end": 9214,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9181,
											"end": 9215,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9181,
											"end": 9215,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9246,
											"end": 9248,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9231,
											"end": 9249,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9231,
											"end": 9249,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9224,
											"end": 9258,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 9224,
											"end": 9258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9224,
											"end": 9258,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9274,
											"end": 9292,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9274,
											"end": 9292,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9274,
											"end": 9292,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9267,
											"end": 9301,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 9267,
											"end": 9301,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9267,
											"end": 9301,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9337,
											"end": 9352,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9337,
											"end": 9352,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9332,
											"end": 9334,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9317,
											"end": 9335,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9317,
											"end": 9335,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9310,
											"end": 9353,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3437,
											"end": 3486,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3486,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3381,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3381,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9199,
											"end": 9214,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9199,
											"end": 9214,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3437,
											"end": 3486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "206CA7F97D46974ED97B981F879B17E9E1FE17EAD63770C806926D28AA5CBD5"
										},
										{
											"begin": 3437,
											"end": 3486,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3486,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3486,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3486,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9130,
											"end": 9133,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3437,
											"end": 3486,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3486,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3486,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3496,
											"end": 3510,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3510,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 3511,
											"end": 3513,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3527,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 3523,
											"end": 3527,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3522,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3527,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 3515,
											"end": 3527,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3527,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 3515,
											"end": 3527,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3496,
											"end": 3528,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3496,
											"end": 3528,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9556,
											"end": 9588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9556,
											"end": 9588,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9556,
											"end": 9588,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3496,
											"end": 3528,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9538,
											"end": 9589,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9598,
											"end": 9632,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9511,
											"end": 9529,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3528,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 3496,
											"end": 3528,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3528,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3536,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3536,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3536,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3536,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3536,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3536,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 4125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2756,
											"end": 3001,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2756,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1208,
											"end": 1218,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1208,
											"end": 1227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1200,
											"end": 1248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2862,
											"end": 2876,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2862,
											"end": 2876,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2862,
											"end": 2876,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2862,
											"end": 2876,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2862,
											"end": 2876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2862,
											"end": 2893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 2862,
											"end": 2893,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2880,
											"end": 2893,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2880,
											"end": 2893,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2880,
											"end": 2893,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2862,
											"end": 2893,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 2862,
											"end": 2893,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 2854,
											"end": 2902,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2902,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2854,
											"end": 2902,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2902,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10127,
											"end": 10129,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2854,
											"end": 2902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2902,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2902,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10109,
											"end": 10130,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10166,
											"end": 10167,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 10146,
											"end": 10164,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10146,
											"end": 10164,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10146,
											"end": 10164,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10139,
											"end": 10168,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A65726F21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10184,
											"end": 10202,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10184,
											"end": 10202,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10184,
											"end": 10202,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10177,
											"end": 10212,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10229,
											"end": 10247,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10229,
											"end": 10247,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 9925,
											"end": 10253,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2902,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 2854,
											"end": 2902,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2910,
											"end": 2913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 2910,
											"end": 2925,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2910,
											"end": 2925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2910,
											"end": 2925,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 2951,
											"end": 2955,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2939,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 2939,
											"end": 2955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2939,
											"end": 2948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2939,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 2939,
											"end": 2955,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2939,
											"end": 2955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 2939,
											"end": 2955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 2933,
											"end": 2955,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2968,
											"end": 2996,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2996,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10432,
											"end": 10457,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10432,
											"end": 10457,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10432,
											"end": 10457,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10488,
											"end": 10490,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10466,
											"end": 10500,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10466,
											"end": 10500,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10466,
											"end": 10500,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2968,
											"end": 2996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3B06FFD21BEDFB2C375D7B1BCF74CA4FE1AFE205699E39610B3ACED7ADF6B9E9"
										},
										{
											"begin": 2968,
											"end": 2996,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10405,
											"end": 10423,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2968,
											"end": 2996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2968,
											"end": 2996,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2996,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2996,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2996,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2996,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2996,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 3001,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 3001,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 3001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2282,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1680,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1734,
											"end": 1746,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1814,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 1810,
											"end": 1814,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1807,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 1795,
											"end": 1807,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 1795,
											"end": 1814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1789,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1814,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1814,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 1753,
											"end": 1855,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1855,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1753,
											"end": 1855,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1753,
											"end": 1855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1855,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10713,
											"end": 10715,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1753,
											"end": 1855,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1753,
											"end": 1855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1855,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10695,
											"end": 10716,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10752,
											"end": 10754,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 10732,
											"end": 10750,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10732,
											"end": 10750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10732,
											"end": 10750,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10725,
											"end": 10755,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10791,
											"end": 10825,
											"name": "PUSH",
											"source": 7,
											"value": "596F75207265616368656420796F757220707269766174652073616C65206C69"
										},
										{
											"begin": 10771,
											"end": 10789,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10771,
											"end": 10789,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10771,
											"end": 10789,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10764,
											"end": 10826,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B5A5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10842,
											"end": 10860,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10842,
											"end": 10860,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10842,
											"end": 10860,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10835,
											"end": 10868,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10885,
											"end": 10904,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 10885,
											"end": 10904,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 10511,
											"end": 10910,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1855,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 1753,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1894,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1878,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1871,
											"end": 1878,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1921,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1921,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 1871,
											"end": 1921,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1921,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1914,
											"end": 1921,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1914,
											"end": 1921,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1898,
											"end": 1910,
											"name": "NUMBER",
											"source": 6
										},
										{
											"begin": 1898,
											"end": 1921,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1898,
											"end": 1921,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1921,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 1871,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 1863,
											"end": 1969,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1969,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1863,
											"end": 1969,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1863,
											"end": 1969,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1969,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11117,
											"end": 11119,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1863,
											"end": 1969,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1863,
											"end": 1969,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11099,
											"end": 11120,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11156,
											"end": 11158,
											"name": "PUSH",
											"source": 7,
											"value": "2B"
										},
										{
											"begin": 11136,
											"end": 11154,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11136,
											"end": 11154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11136,
											"end": 11154,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11129,
											"end": 11159,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11195,
											"end": 11229,
											"name": "PUSH",
											"source": 7,
											"value": "507269766174652053616C652068617320656E646564206F7220646964206E6F"
										},
										{
											"begin": 11175,
											"end": 11193,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 11175,
											"end": 11193,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11175,
											"end": 11193,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11168,
											"end": 11230,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D081CDD185C9D081E595D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11246,
											"end": 11264,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11246,
											"end": 11264,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11246,
											"end": 11264,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11239,
											"end": 11280,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11297,
											"end": 11316,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 11297,
											"end": 11316,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 10915,
											"end": 11322,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1863,
											"end": 1969,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 1863,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2048,
											"end": 2051,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 2048,
											"end": 2051,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 2000,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 2000,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 1988,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1976,
											"end": 1988,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2040,
											"end": 2051,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2040,
											"end": 2051,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2040,
											"end": 2051,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2040,
											"end": 2051,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2040,
											"end": 2051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2066,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 2063,
											"end": 2066,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2055,
											"end": 2059,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2055,
											"end": 2066,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2055,
											"end": 2066,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2030,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 2030,
											"end": 2110,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2030,
											"end": 2110,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2030,
											"end": 2110,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2030,
											"end": 2110,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2030,
											"end": 2110,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11529,
											"end": 11531,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2030,
											"end": 2110,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2030,
											"end": 2110,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2030,
											"end": 2110,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11511,
											"end": 11532,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11568,
											"end": 11570,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 11548,
											"end": 11566,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11548,
											"end": 11566,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11548,
											"end": 11566,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11541,
											"end": 11571,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11607,
											"end": 11641,
											"name": "PUSH",
											"source": 7,
											"value": "4C657373207468616E204D696E696D756D206F72204D6F7265207468616E204D"
										},
										{
											"begin": 11587,
											"end": 11605,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 11587,
											"end": 11605,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11587,
											"end": 11605,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11580,
											"end": 11642,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6178696D756D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11658,
											"end": 11676,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11658,
											"end": 11676,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11658,
											"end": 11676,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11651,
											"end": 11687,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11704,
											"end": 11723,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 11704,
											"end": 11723,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2030,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 11327,
											"end": 11729,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2030,
											"end": 2110,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 2030,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2124,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 2147,
											"end": 2154,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2125,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 2136,
											"end": 2140,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2131,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 2125,
											"end": 2131,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 2125,
											"end": 2135,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2141,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2141,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2141,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2125,
											"end": 2141,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2141,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 2125,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2124,
											"end": 2146,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2124,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2124,
											"end": 2155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2124,
											"end": 2155,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 2124,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2165,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2116,
											"end": 2155,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2116,
											"end": 2155,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2165,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 2161,
											"end": 2168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2179,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 2197,
											"end": 2201,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2204,
											"end": 2214,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2221,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2179,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2179,
											"end": 2222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2179,
											"end": 2222,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 2179,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2259,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 2253,
											"end": 2259,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2260,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2234,
											"end": 2260,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2260,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10432,
											"end": 10457,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10432,
											"end": 10457,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10432,
											"end": 10457,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10488,
											"end": 10490,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10466,
											"end": 10500,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10466,
											"end": 10500,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10466,
											"end": 10500,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10466,
											"end": 10500,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2260,
											"name": "PUSH",
											"source": 6,
											"value": "B887E151DBFCC06B4CE4F67F9BBEDAEB16AB224E34C6668858D0310C6D18FFC3"
										},
										{
											"begin": 2234,
											"end": 2260,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10405,
											"end": 10423,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2234,
											"end": 2260,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2234,
											"end": 2260,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2260,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2260,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2260,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2234,
											"end": 2260,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2273,
											"end": 2277,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2273,
											"end": 2277,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1680,
											"end": 2282,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1680,
											"end": 2282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1675,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1470,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1208,
											"end": 1218,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1208,
											"end": 1227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1200,
											"end": 1248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1551,
											"end": 1574,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1551,
											"end": 1574,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1543,
											"end": 1591,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 1543,
											"end": 1591,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1543,
											"end": 1591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1591,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1543,
											"end": 1591,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1543,
											"end": 1591,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8772,
											"end": 8774,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1543,
											"end": 1591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1543,
											"end": 1591,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1543,
											"end": 1591,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8754,
											"end": 8775,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8811,
											"end": 8813,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 8791,
											"end": 8809,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8791,
											"end": 8809,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8791,
											"end": 8809,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8784,
											"end": 8814,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61646472657373207A65726F21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8830,
											"end": 8848,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8866,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8883,
											"end": 8901,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8883,
											"end": 8901,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1591,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 8570,
											"end": 8907,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1543,
											"end": 1591,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 1543,
											"end": 1591,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1600,
											"end": 1617,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1617,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1600,
											"end": 1617,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1600,
											"end": 1617,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1617,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1617,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1617,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1617,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1617,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1617,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1617,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1669,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1631,
											"end": 1669,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1617,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1617,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1669,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1631,
											"end": 1669,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1631,
											"end": 1669,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1675,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2628,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2457,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1208,
											"end": 1218,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1208,
											"end": 1227,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1200,
											"end": 1248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 1200,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2555,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2555,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2555,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2555,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2555,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2559,
											"end": 2570,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2570,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2570,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2535,
											"end": 2579,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 2535,
											"end": 2579,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2535,
											"end": 2579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2535,
											"end": 2579,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2535,
											"end": 2579,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2535,
											"end": 2579,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10127,
											"end": 10129,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2535,
											"end": 2579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2535,
											"end": 2579,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2535,
											"end": 2579,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10109,
											"end": 10130,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10166,
											"end": 10167,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 10146,
											"end": 10164,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10146,
											"end": 10164,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10146,
											"end": 10164,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10139,
											"end": 10168,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A65726F21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10184,
											"end": 10202,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10184,
											"end": 10202,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10184,
											"end": 10202,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10177,
											"end": 10212,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10229,
											"end": 10247,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10229,
											"end": 10247,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2535,
											"end": 2579,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 9925,
											"end": 10253,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2535,
											"end": 2579,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 2535,
											"end": 2579,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2584,
											"end": 2602,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2602,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2602,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2602,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2608,
											"end": 2614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 2608,
											"end": 2623,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10241,
											"end": 10260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12298,
											"end": 12300,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12280,
											"end": 12301,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12337,
											"end": 12339,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12317,
											"end": 12335,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12317,
											"end": 12335,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12317,
											"end": 12335,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12310,
											"end": 12340,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12376,
											"end": 12410,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 12356,
											"end": 12374,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 12356,
											"end": 12374,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12356,
											"end": 12374,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12349,
											"end": 12411,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12427,
											"end": 12445,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 12427,
											"end": 12445,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12427,
											"end": 12445,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12420,
											"end": 12454,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12471,
											"end": 12490,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 12471,
											"end": 12490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 12096,
											"end": 12496,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 10233,
											"end": 10301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10319,
											"end": 10340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12703,
											"end": 12705,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12685,
											"end": 12706,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12742,
											"end": 12744,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 12722,
											"end": 12740,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12722,
											"end": 12740,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12722,
											"end": 12740,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12715,
											"end": 12745,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12781,
											"end": 12815,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 12761,
											"end": 12779,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 12761,
											"end": 12779,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12761,
											"end": 12779,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12754,
											"end": 12816,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12832,
											"end": 12850,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 12832,
											"end": 12850,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12832,
											"end": 12850,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12825,
											"end": 12857,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12874,
											"end": 12893,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 12874,
											"end": 12893,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 12501,
											"end": 12899,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 10311,
											"end": 10379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10401,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10408,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10417,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10390,
											"end": 10426,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10473,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10110,
											"end": 10480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10891,
											"end": 10915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 10928,
											"end": 10933,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10935,
											"end": 10942,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10918,
											"end": 10927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 10918,
											"end": 10943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 10918,
											"end": 10943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10891,
											"end": 10943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10891,
											"end": 10943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10957,
											"end": 10973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10957,
											"end": 10994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 10953,
											"end": 11196,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11038,
											"end": 11044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11044,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11018,
											"end": 11044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13106,
											"end": 13108,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13109,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13145,
											"end": 13147,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 13125,
											"end": 13143,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13125,
											"end": 13143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13125,
											"end": 13143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13118,
											"end": 13148,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13184,
											"end": 13215,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 13164,
											"end": 13182,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 13164,
											"end": 13182,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13164,
											"end": 13182,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13157,
											"end": 13216,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13233,
											"end": 13251,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 13233,
											"end": 13251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 12904,
											"end": 13257,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 11010,
											"end": 11078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 11129,
											"end": 11134,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11136,
											"end": 11143,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11164,
											"end": 11170,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11161,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11145,
											"end": 11170,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 11120,
											"end": 11171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 11120,
											"end": 11171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10881,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10761,
											"end": 11202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 7475,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13464,
											"end": 13466,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13446,
											"end": 13467,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13503,
											"end": 13505,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 13483,
											"end": 13501,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13483,
											"end": 13501,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13483,
											"end": 13501,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13476,
											"end": 13506,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13542,
											"end": 13576,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 13522,
											"end": 13540,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 13522,
											"end": 13540,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13522,
											"end": 13540,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13515,
											"end": 13577,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13593,
											"end": 13611,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 13593,
											"end": 13611,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13593,
											"end": 13611,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13586,
											"end": 13621,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13638,
											"end": 13657,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 13638,
											"end": 13657,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 13262,
											"end": 13663,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 7593,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7679,
											"end": 7695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13870,
											"end": 13872,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13852,
											"end": 13873,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13909,
											"end": 13911,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 13889,
											"end": 13907,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13889,
											"end": 13907,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13889,
											"end": 13907,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13882,
											"end": 13912,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13948,
											"end": 13982,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 13928,
											"end": 13946,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 13928,
											"end": 13946,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13928,
											"end": 13946,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13921,
											"end": 13983,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13999,
											"end": 14017,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 13999,
											"end": 14017,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13999,
											"end": 14017,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13992,
											"end": 14025,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14042,
											"end": 14061,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 14042,
											"end": 14061,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 13668,
											"end": 14067,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 7671,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7795,
											"end": 7814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7817,
											"end": 7832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7850,
											"end": 7871,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14274,
											"end": 14276,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14256,
											"end": 14277,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14313,
											"end": 14315,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 14293,
											"end": 14311,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 14293,
											"end": 14311,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14293,
											"end": 14311,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14286,
											"end": 14316,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14352,
											"end": 14386,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 14332,
											"end": 14350,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 14332,
											"end": 14350,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14332,
											"end": 14350,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14325,
											"end": 14387,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14403,
											"end": 14421,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 14403,
											"end": 14421,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14403,
											"end": 14421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14396,
											"end": 14432,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14449,
											"end": 14468,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 14449,
											"end": 14468,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 14072,
											"end": 14474,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 7842,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7963,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7966,
											"end": 7986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7986,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8019,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 8006,
											"end": 8029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8006,
											"end": 8029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8060,
											"end": 8062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8054,
											"end": 8058,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8064,
											"end": 8070,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8045,
											"end": 8071,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8082,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 11786,
											"end": 11907,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8402,
											"end": 8791,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 8402,
											"end": 8791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8485,
											"end": 8506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8485,
											"end": 8506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14681,
											"end": 14683,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14663,
											"end": 14684,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14720,
											"end": 14722,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 14700,
											"end": 14718,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 14700,
											"end": 14718,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14700,
											"end": 14718,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14693,
											"end": 14723,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14759,
											"end": 14792,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 14739,
											"end": 14757,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 14739,
											"end": 14757,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14739,
											"end": 14757,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14732,
											"end": 14793,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14810,
											"end": 14828,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 14810,
											"end": 14828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 14479,
											"end": 14834,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 8477,
											"end": 8542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8625,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8613,
											"end": 8625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 8613,
											"end": 8635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8613,
											"end": 8635,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8663,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8667,
											"end": 8673,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8667,
											"end": 8673,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8667,
											"end": 8673,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8667,
											"end": 8673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 8645,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8645,
											"end": 8673,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8705,
											"end": 8706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8705,
											"end": 8706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8688,
											"end": 8725,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4263,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4089,
											"end": 4263,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4089,
											"end": 4263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 578,
											"end": 667,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 633,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 653,
											"end": 659,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 633,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 633,
											"end": 660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 1065,
											"end": 1072,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 1049,
											"end": 1095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1049,
											"end": 1095,
											"name": "tag",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 1049,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 1111,
											"end": 1118,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 1105,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9111,
											"end": 9687,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 9111,
											"end": 9687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9194,
											"end": 9215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9194,
											"end": 9215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15043,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15023,
											"end": 15044,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15080,
											"end": 15082,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 15060,
											"end": 15078,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 15060,
											"end": 15078,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15060,
											"end": 15078,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15053,
											"end": 15083,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15119,
											"end": 15153,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 15099,
											"end": 15117,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 15099,
											"end": 15117,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15099,
											"end": 15117,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15092,
											"end": 15154,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15170,
											"end": 15188,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 15170,
											"end": 15188,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15170,
											"end": 15188,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15163,
											"end": 15194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15211,
											"end": 15230,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 15211,
											"end": 15230,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 14839,
											"end": 15236,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 9186,
											"end": 9253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9385,
											"end": 9409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9385,
											"end": 9409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9385,
											"end": 9409,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9385,
											"end": 9409,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15443,
											"end": 15445,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15425,
											"end": 15446,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15482,
											"end": 15484,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 15462,
											"end": 15480,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 15462,
											"end": 15480,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15462,
											"end": 15480,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15455,
											"end": 15485,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15521,
											"end": 15555,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 15501,
											"end": 15519,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 15501,
											"end": 15519,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15501,
											"end": 15519,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15494,
											"end": 15556,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15572,
											"end": 15590,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 15572,
											"end": 15590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15572,
											"end": 15590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15565,
											"end": 15597,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15614,
											"end": 15633,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 15614,
											"end": 15633,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 15241,
											"end": 15639,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 9377,
											"end": 9448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 9491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 9500,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9503,
											"end": 9526,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9503,
											"end": 9526,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9503,
											"end": 9526,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 9526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 9526,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9546,
											"end": 9558,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9520,
											"end": 9526,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9520,
											"end": 9526,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 9491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9520,
											"end": 9526,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9520,
											"end": 9526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 9546,
											"end": 9568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9546,
											"end": 9568,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9610,
											"end": 9611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9610,
											"end": 9611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9584,
											"end": 9621,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 11786,
											"end": 11907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11786,
											"end": 11907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11786,
											"end": 11907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11786,
											"end": 11907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 616,
											"end": 789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 962,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 1612,
											"end": 1641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 1660,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 2129,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1949,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2100,
											"end": 2123,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2123,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 2129,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2716,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 2530,
											"end": 2716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2642,
											"end": 2644,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2630,
											"end": 2639,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2621,
											"end": 2628,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2617,
											"end": 2640,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2645,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2662,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2662,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 2610,
											"end": 2662,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2659,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2648,
											"end": 2660,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2662,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 2610,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 2700,
											"end": 2709,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 2681,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 3043,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2721,
											"end": 3043,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2798,
											"end": 2804,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2812,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2814,
											"end": 2820,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2867,
											"end": 2869,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2855,
											"end": 2864,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2853,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2842,
											"end": 2865,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2887,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 2835,
											"end": 2887,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2883,
											"end": 2884,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2880,
											"end": 2881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2873,
											"end": 2885,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2835,
											"end": 2887,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 2835,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2928,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2929,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2929,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2896,
											"end": 2929,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 2978,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2965,
											"end": 2974,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2948,
											"end": 2980,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2938,
											"end": 2980,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2938,
											"end": 2980,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2999,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 3033,
											"end": 3035,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3022,
											"end": 3031,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3018,
											"end": 3036,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2999,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 2999,
											"end": 3037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2999,
											"end": 3037,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 2999,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2989,
											"end": 3037,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2989,
											"end": 3037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 3043,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 3043,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 3043,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 3043,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 3043,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 3043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3445,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 3048,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3140,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3148,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3156,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3158,
											"end": 3164,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3211,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3199,
											"end": 3208,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3190,
											"end": 3197,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3186,
											"end": 3209,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3182,
											"end": 3215,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3179,
											"end": 3232,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3179,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 3179,
											"end": 3232,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3228,
											"end": 3229,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3225,
											"end": 3226,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3218,
											"end": 3230,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3179,
											"end": 3232,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 3179,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3251,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 3270,
											"end": 3279,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3251,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 3251,
											"end": 3280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3251,
											"end": 3280,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 3251,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3241,
											"end": 3280,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3241,
											"end": 3280,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3327,
											"end": 3329,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3316,
											"end": 3325,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3312,
											"end": 3330,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3331,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3289,
											"end": 3331,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3289,
											"end": 3331,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3380,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3376,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3363,
											"end": 3381,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3382,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3340,
											"end": 3382,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3340,
											"end": 3382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3401,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 3435,
											"end": 3437,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3424,
											"end": 3433,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3438,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3401,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 3401,
											"end": 3439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3401,
											"end": 3439,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 3401,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3439,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3391,
											"end": 3439,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3445,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3445,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3445,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3445,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3445,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3445,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3048,
											"end": 3445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3450,
											"end": 3710,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 3450,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3518,
											"end": 3524,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3526,
											"end": 3532,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3581,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3567,
											"end": 3576,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3558,
											"end": 3565,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3554,
											"end": 3577,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3550,
											"end": 3582,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3547,
											"end": 3599,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3547,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 3547,
											"end": 3599,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3595,
											"end": 3596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3593,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3585,
											"end": 3597,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3547,
											"end": 3599,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 3547,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3618,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 3637,
											"end": 3646,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3618,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 3618,
											"end": 3647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3618,
											"end": 3647,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 3618,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3608,
											"end": 3647,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3608,
											"end": 3647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 3700,
											"end": 3702,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3689,
											"end": 3698,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3703,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 3666,
											"end": 3704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3666,
											"end": 3704,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 3666,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3656,
											"end": 3704,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3656,
											"end": 3704,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3450,
											"end": 3710,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3450,
											"end": 3710,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3450,
											"end": 3710,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3450,
											"end": 3710,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3450,
											"end": 3710,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3450,
											"end": 3710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3715,
											"end": 3963,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 3715,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3783,
											"end": 3789,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3797,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3844,
											"end": 3846,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3832,
											"end": 3841,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3823,
											"end": 3830,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3842,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 3847,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3864,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 3812,
											"end": 3864,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3860,
											"end": 3861,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3857,
											"end": 3858,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3862,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3864,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 3812,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3953,
											"end": 3955,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3938,
											"end": 3956,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3956,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3956,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 3957,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 3957,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3715,
											"end": 3963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4556,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 4176,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4256,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4251,
											"end": 4263,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4251,
											"end": 4263,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4251,
											"end": 4263,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 4251,
											"end": 4263,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4298,
											"end": 4310,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4298,
											"end": 4310,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4298,
											"end": 4310,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 4319,
											"end": 4380,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4373,
											"end": 4377,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 4365,
											"end": 4371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4361,
											"end": 4378,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4378,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4380,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 4319,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4426,
											"end": 4428,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4418,
											"end": 4424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4415,
											"end": 4429,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4395,
											"end": 4413,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4430,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 4389,
											"end": 4550,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4472,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 4467,
											"end": 4470,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4463,
											"end": 4483,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4460,
											"end": 4461,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4453,
											"end": 4484,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4507,
											"end": 4511,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4504,
											"end": 4505,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4497,
											"end": 4512,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4535,
											"end": 4539,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4532,
											"end": 4533,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4525,
											"end": 4540,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4550,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 4389,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4550,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4556,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4561,
											"end": 4902,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 4561,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4763,
											"end": 4765,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4745,
											"end": 4766,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4745,
											"end": 4766,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4745,
											"end": 4766,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4802,
											"end": 4804,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4782,
											"end": 4800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4782,
											"end": 4800,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4782,
											"end": 4800,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4775,
											"end": 4805,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "63616C6C6572206E6F74206F776E657221"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4836,
											"end": 4838,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4821,
											"end": 4839,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4821,
											"end": 4839,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4814,
											"end": 4861,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4893,
											"end": 4895,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4878,
											"end": 4896,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4878,
											"end": 4896,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4561,
											"end": 4902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4907,
											"end": 5034,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 4907,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4968,
											"end": 4978,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 4963,
											"end": 4966,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4959,
											"end": 4979,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4956,
											"end": 4957,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4980,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4999,
											"end": 5003,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4996,
											"end": 4997,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4989,
											"end": 5004,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5023,
											"end": 5027,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5020,
											"end": 5021,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5039,
											"end": 5167,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 5039,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5079,
											"end": 5082,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5110,
											"end": 5111,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5106,
											"end": 5112,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5103,
											"end": 5104,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5113,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5097,
											"end": 5136,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5097,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 5097,
											"end": 5136,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 5116,
											"end": 5134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 5116,
											"end": 5134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5116,
											"end": 5134,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 5116,
											"end": 5134,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5152,
											"end": 5161,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5152,
											"end": 5161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5039,
											"end": 5167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5172,
											"end": 5587,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 5172,
											"end": 5587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5374,
											"end": 5376,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5356,
											"end": 5377,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5356,
											"end": 5377,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5356,
											"end": 5377,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 5393,
											"end": 5411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5411,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5411,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5386,
											"end": 5416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5452,
											"end": 5486,
											"name": "PUSH",
											"source": 7,
											"value": "6F6E6C7920627269646765206861732061636365737320746F20746869732063"
										},
										{
											"begin": 5447,
											"end": 5449,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5425,
											"end": 5487,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3434B632103A37B5B2B710333AB731BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "69"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5518,
											"end": 5520,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5503,
											"end": 5521,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5503,
											"end": 5521,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5496,
											"end": 5545,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5577,
											"end": 5580,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 5562,
											"end": 5581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5562,
											"end": 5581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5172,
											"end": 5587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 7095,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 6673,
											"end": 7095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6762,
											"end": 6763,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6805,
											"end": 6810,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6762,
											"end": 6763,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6819,
											"end": 7089,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 6819,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6840,
											"end": 6847,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6830,
											"end": 6838,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6827,
											"end": 6848,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6819,
											"end": 7089,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6819,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 6819,
											"end": 7089,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6899,
											"end": 6903,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6895,
											"end": 6896,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6891,
											"end": 6897,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6887,
											"end": 6904,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6881,
											"end": 6885,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6878,
											"end": 6905,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6928,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 6875,
											"end": 6928,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6908,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 6908,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 6908,
											"end": 6926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6908,
											"end": 6926,
											"name": "tag",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 6908,
											"end": 6926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6958,
											"end": 6965,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6956,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6944,
											"end": 6966,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6941,
											"end": 6996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6941,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 6941,
											"end": 6996,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6978,
											"end": 6994,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6978,
											"end": 6994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6978,
											"end": 6994,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6978,
											"end": 6994,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6941,
											"end": 6996,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 6941,
											"end": 6996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7057,
											"end": 7079,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7057,
											"end": 7079,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7057,
											"end": 7079,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 7057,
											"end": 7079,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7017,
											"end": 7032,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7017,
											"end": 7032,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7017,
											"end": 7032,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7017,
											"end": 7032,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6819,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 6819,
											"end": 7089,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6819,
											"end": 7089,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 6819,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6823,
											"end": 6826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 7095,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 7095,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 7095,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 7095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 7095,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 7095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7100,
											"end": 7906,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 7100,
											"end": 7906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7154,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7179,
											"end": 7187,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7169,
											"end": 7249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 7169,
											"end": 7249,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7220,
											"end": 7221,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7234,
											"end": 7239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 7234,
											"end": 7239,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7169,
											"end": 7249,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 7169,
											"end": 7249,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7268,
											"end": 7272,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7258,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 7258,
											"end": 7334,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7305,
											"end": 7306,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7319,
											"end": 7324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 7319,
											"end": 7324,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7258,
											"end": 7334,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 7258,
											"end": 7334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7350,
											"end": 7354,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7368,
											"end": 7369,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7363,
											"end": 7422,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7363,
											"end": 7422,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7363,
											"end": 7422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 7363,
											"end": 7422,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7436,
											"end": 7437,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7431,
											"end": 7561,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7561,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 7431,
											"end": 7561,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7343,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 7343,
											"end": 7561,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7363,
											"end": 7422,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 7363,
											"end": 7422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7393,
											"end": 7394,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7384,
											"end": 7394,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7384,
											"end": 7394,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7407,
											"end": 7412,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7407,
											"end": 7412,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 7407,
											"end": 7412,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7561,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 7431,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7468,
											"end": 7471,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 7458,
											"end": 7466,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7455,
											"end": 7472,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7452,
											"end": 7495,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7452,
											"end": 7495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 7452,
											"end": 7495,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7475,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 7475,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 7475,
											"end": 7493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7475,
											"end": 7493,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 7475,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7531,
											"end": 7532,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7517,
											"end": 7533,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7517,
											"end": 7533,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 7546,
											"end": 7551,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7343,
											"end": 7561,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 7343,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7343,
											"end": 7561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7645,
											"end": 7647,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7635,
											"end": 7643,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7632,
											"end": 7648,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7626,
											"end": 7629,
											"name": "PUSH",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 7620,
											"end": 7624,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7617,
											"end": 7630,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7613,
											"end": 7649,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7607,
											"end": 7609,
											"name": "PUSH",
											"source": 7,
											"value": "4E"
										},
										{
											"begin": 7597,
											"end": 7605,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7594,
											"end": 7610,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7589,
											"end": 7591,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 7583,
											"end": 7587,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7580,
											"end": 7592,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7576,
											"end": 7611,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7573,
											"end": 7650,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 7570,
											"end": 7729,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7570,
											"end": 7729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 7570,
											"end": 7729,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7682,
											"end": 7701,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 7701,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 7701,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 7714,
											"end": 7719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 7714,
											"end": 7719,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7570,
											"end": 7729,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 7570,
											"end": 7729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7761,
											"end": 7795,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 7786,
											"end": 7794,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7780,
											"end": 7784,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7761,
											"end": 7795,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 7761,
											"end": 7795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7761,
											"end": 7795,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 7761,
											"end": 7795,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7831,
											"end": 7837,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7827,
											"end": 7828,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7823,
											"end": 7829,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 7819,
											"end": 7838,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7810,
											"end": 7817,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 7839,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7804,
											"end": 7862,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7804,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 7804,
											"end": 7862,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7842,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 7842,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 7842,
											"end": 7860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7842,
											"end": 7860,
											"name": "tag",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 7842,
											"end": 7860,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7880,
											"end": 7900,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7880,
											"end": 7900,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7100,
											"end": 7906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7100,
											"end": 7906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7911,
											"end": 8042,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 7911,
											"end": 8042,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7971,
											"end": 7976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8000,
											"end": 8036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 8027,
											"end": 8035,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8021,
											"end": 8025,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8000,
											"end": 8036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 8000,
											"end": 8036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8397,
											"end": 8565,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 8397,
											"end": 8565,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8437,
											"end": 8444,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8503,
											"end": 8504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8499,
											"end": 8500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8495,
											"end": 8501,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 8491,
											"end": 8505,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8488,
											"end": 8489,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8485,
											"end": 8506,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8480,
											"end": 8481,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8473,
											"end": 8482,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8466,
											"end": 8483,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8462,
											"end": 8507,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8459,
											"end": 8530,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8459,
											"end": 8530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 8459,
											"end": 8530,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8510,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 8510,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 8510,
											"end": 8528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8510,
											"end": 8528,
											"name": "tag",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 8510,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8550,
											"end": 8559,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8550,
											"end": 8559,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8397,
											"end": 8565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9643,
											"end": 9920,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 9643,
											"end": 9920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9710,
											"end": 9716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9763,
											"end": 9765,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9751,
											"end": 9760,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9742,
											"end": 9749,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9738,
											"end": 9761,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9734,
											"end": 9766,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 9731,
											"end": 9783,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9731,
											"end": 9783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 9731,
											"end": 9783,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9779,
											"end": 9780,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9776,
											"end": 9777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9769,
											"end": 9781,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9731,
											"end": 9783,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 9731,
											"end": 9783,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9811,
											"end": 9820,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9805,
											"end": 9821,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9864,
											"end": 9869,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9857,
											"end": 9870,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9850,
											"end": 9871,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9843,
											"end": 9848,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9840,
											"end": 9872,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 9830,
											"end": 9890,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9886,
											"end": 9887,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9883,
											"end": 9884,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9876,
											"end": 9888,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11734,
											"end": 11869,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 11734,
											"end": 11869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11773,
											"end": 11776,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11794,
											"end": 11811,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11794,
											"end": 11811,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11794,
											"end": 11811,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11791,
											"end": 11834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 11791,
											"end": 11834,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11814,
											"end": 11832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 11814,
											"end": 11832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 11814,
											"end": 11832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11814,
											"end": 11832,
											"name": "tag",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 11814,
											"end": 11832,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11861,
											"end": 11862,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11850,
											"end": 11863,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11850,
											"end": 11863,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11734,
											"end": 11869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11874,
											"end": 12091,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 11874,
											"end": 12091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11914,
											"end": 11915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11940,
											"end": 11941,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11930,
											"end": 12062,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 11930,
											"end": 12062,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11984,
											"end": 11994,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 11979,
											"end": 11982,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 11975,
											"end": 11995,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 11972,
											"end": 11973,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11965,
											"end": 11996,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12019,
											"end": 12023,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 12016,
											"end": 12017,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12009,
											"end": 12024,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12047,
											"end": 12051,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12044,
											"end": 12045,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12037,
											"end": 12052,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11930,
											"end": 12062,
											"name": "tag",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 11930,
											"end": 12062,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12076,
											"end": 12085,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 12076,
											"end": 12085,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11874,
											"end": 12091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15644,
											"end": 15769,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 15644,
											"end": 15769,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15684,
											"end": 15688,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15712,
											"end": 15713,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15709,
											"end": 15710,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15706,
											"end": 15714,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 15703,
											"end": 15737,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15703,
											"end": 15737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 15703,
											"end": 15737,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15717,
											"end": 15735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 15717,
											"end": 15735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 15717,
											"end": 15735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15717,
											"end": 15735,
											"name": "tag",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 15717,
											"end": 15735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15754,
											"end": 15763,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15754,
											"end": 15763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15644,
											"end": 15769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"Contracts/AccesPolygon.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"bridge()": "e78cea92",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"changeMinMaxPrivateSale(uint256,uint256)": "e181203a",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"endSale()": "380d831b",
							"increaseAllowance(address,uint256)": "39509351",
							"max()": "6ac5db19",
							"min()": "f8897945",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"privateLimit()": "3c3b7995",
							"privateSale(address)": "e7d53fcb",
							"setBridge(address)": "8dd14802",
							"setPrivateLimit(uint256)": "534b1442",
							"startSale(uint256,uint256)": "f4f3122e",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"viewSale()": "4d1d03d1",
							"withdrawalBNB(uint256,uint256,address)": "adbc7cee",
							"withdrawalToken(address,uint256,uint256,address)": "b2938bee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bridge\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newLimit\",\"type\":\"uint256\"}],\"name\":\"PrivateLimit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Price\",\"type\":\"uint256\"}],\"name\":\"PrivateSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_bridge\",\"type\":\"address\"}],\"name\":\"SetBridge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimal\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"WithdrawalBNB\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"WithdrawalToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Min\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Max\",\"type\":\"uint256\"}],\"name\":\"minMax\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Time\",\"type\":\"uint256\"}],\"name\":\"saleEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"saleStarted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"name\":\"changeMinMaxPrivateSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"max\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"min\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"privateSale\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_bridge\",\"type\":\"address\"}],\"name\":\"setBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"setPrivateLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sEBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sPrice\",\"type\":\"uint256\"}],\"name\":\"startSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"viewSale\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"StartBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"EndBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"SaleCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"SalePrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimal\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawalBNB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimal\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawalToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Only callable by account with access (gateway role)\"},\"burnFrom(address,uint256)\":{\"details\":\"Only callable by account with access (gateway role)\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Only callable by account with access (gateway role)\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/AccesPolygon.sol\":\"MetaccesPolygon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Contracts/AccesPolygon.sol\":{\"keccak256\":\"0xb9bc521c545a3e1ea6cd2ad2e2f9ef448b2039d6a93b9bf02d7e4ddffdbeb5fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42166bbf55ed5bfb331fc680ea490b2cb312b4403a680e7e300b2d5e882d7a1d\",\"dweb:/ipfs/QmVimWoWL93Q6Stx5sbmyDVXCTdeKDnf2wEFCmExcqR58W\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "Contracts/AccesPolygon.sol:MetaccesPolygon",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "Contracts/AccesPolygon.sol:MetaccesPolygon",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "Contracts/AccesPolygon.sol:MetaccesPolygon",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "Contracts/AccesPolygon.sol:MetaccesPolygon",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "Contracts/AccesPolygon.sol:MetaccesPolygon",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1080,
								"contract": "Contracts/AccesPolygon.sol:MetaccesPolygon",
								"label": "owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1082,
								"contract": "Contracts/AccesPolygon.sol:MetaccesPolygon",
								"label": "bridge",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1084,
								"contract": "Contracts/AccesPolygon.sol:MetaccesPolygon",
								"label": "sSBlock",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1086,
								"contract": "Contracts/AccesPolygon.sol:MetaccesPolygon",
								"label": "sEBlock",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1088,
								"contract": "Contracts/AccesPolygon.sol:MetaccesPolygon",
								"label": "sTot",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1090,
								"contract": "Contracts/AccesPolygon.sol:MetaccesPolygon",
								"label": "sPrice",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1096,
								"contract": "Contracts/AccesPolygon.sol:MetaccesPolygon",
								"label": "path",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1101,
								"contract": "Contracts/AccesPolygon.sol:MetaccesPolygon",
								"label": "max",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1107,
								"contract": "Contracts/AccesPolygon.sol:MetaccesPolygon",
								"label": "min",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1110,
								"contract": "Contracts/AccesPolygon.sol:MetaccesPolygon",
								"label": "privateLimit",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							754
						],
						"ERC20": [
							585
						],
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							732
						]
					},
					"id": 586,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 664,
							"src": "130:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 733,
							"src": "153:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 755,
							"src": "195:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 754,
										"src": "1421:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "1421:7:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "1430:6:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "1430:6:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 732,
										"src": "1438:14:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1438:14:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "230:1172:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 585,
							"linearizedBaseContracts": [
								585,
								732,
								663,
								754
							],
							"name": "ERC20",
							"nameLocation": "1412:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1495:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1459:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 14,
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1467:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1459:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 13,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1478:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1567:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1511:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 20,
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1519:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1511:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 19,
											"keyType": {
												"id": 17,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1538:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1530:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1549:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1601:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1585:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1585:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1635:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1620:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 24,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1620:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1661:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "1646:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1646:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2034:57:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2044:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 36,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2052:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2044:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2044:13:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2067:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "2077:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2067:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2067:17:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "1675:298:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2004:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1990:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 29,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1990:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2025:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2011:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 31,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2011:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1989:44:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2034:0:0"
									},
									"scope": 585,
									"src": "1978:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										719
									],
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "2225:29:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2242:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "2235:12:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2097:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2165:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 47,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2192:8:0"
									},
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2169:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2210:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 48,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2210:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:15:0"
									},
									"scope": 585,
									"src": "2156:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										725
									],
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "2438:31:0",
										"statements": [
											{
												"expression": {
													"id": 61,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2455:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 60,
												"id": 62,
												"nodeType": "Return",
												"src": "2448:14:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "2260:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2376:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 57,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2405:8:0"
									},
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2382:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2423:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 58,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2423:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2422:15:0"
									},
									"scope": 585,
									"src": "2367:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										731
									],
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "3158:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3175:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 70,
												"id": 72,
												"nodeType": "Return",
												"src": "3168:9:0"
											}
										]
									},
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2475:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3102:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3133:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3110:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3151:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 68,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3151:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3150:7:0"
									},
									"scope": 585,
									"src": "3093:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										612
									],
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "3314:36:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "3331:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "3324:19:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3190:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3253:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 77,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3287:8:0"
									},
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3264:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3305:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3304:9:0"
									},
									"scope": 585,
									"src": "3244:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										620
									],
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "3491:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 93,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "3508:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 95,
													"indexExpression": {
														"id": 94,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "3518:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3508:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 92,
												"id": 96,
												"nodeType": "Return",
												"src": "3501:25:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3356:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3417:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 89,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3464:8:0"
									},
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3435:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3427:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3426:17:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3482:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:9:0"
									},
									"scope": 585,
									"src": "3408:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										630
									],
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "3814:104:0",
										"statements": [
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3832:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "3824:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3824:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 113,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "3840:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3840:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3824:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 115,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "3872:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "3879:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 117,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "3883:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 114,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "3862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "3862:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 108,
												"id": 121,
												"nodeType": "Return",
												"src": "3900:11:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3539:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3738:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3790:8:0"
									},
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3755:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3747:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3747:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3767:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3759:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3746:28:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:6:0"
									},
									"scope": 585,
									"src": "3729:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										640
									],
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "4074:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 134,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4091:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 136,
														"indexExpression": {
															"id": 135,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4103:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4091:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 138,
													"indexExpression": {
														"id": 137,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4110:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4091:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 139,
												"nodeType": "Return",
												"src": "4084:34:0"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "3924:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3985:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 130,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4047:8:0"
									},
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4003:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "3995:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3995:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4018:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4010:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4010:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3994:32:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4065:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4065:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4064:9:0"
									},
									"scope": 585,
									"src": "3976:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										650
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4522:108:0",
										"statements": [
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4540:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 165,
														"src": "4532:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 152,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4532:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 154,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "4548:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4548:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4532:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4579:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 159,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "4586:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 160,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4595:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 157,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "4570:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4570:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "4570:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4619:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 151,
												"id": 164,
												"nodeType": "Return",
												"src": "4612:11:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4131:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4442:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4498:8:0"
									},
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4458:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4450:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4475:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4467:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:33:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4516:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4516:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4515:6:0"
									},
									"scope": 585,
									"src": "4433:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										662
									],
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "5325:153:0",
										"statements": [
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5343:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "5335:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 179,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5335:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 183,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 181,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "5353:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5353:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5335:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5391:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 186,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5397:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5406:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 184,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "5375:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "5375:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 191,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5433:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5439:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5443:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 190,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "5423:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5423:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5423:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5467:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 178,
												"id": 197,
												"nodeType": "Return",
												"src": "5460:11:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4636:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5201:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5301:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5231:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5223:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5223:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5253:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5245:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5245:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5273:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5265:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5213:72:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5319:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5319:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5318:6:0"
									},
									"scope": 585,
									"src": "5192:286:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "5967:140:0",
										"statements": [
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5985:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "5977:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 209,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5977:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 213,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 211,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "5993:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5993:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5977:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "6024:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6031:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 218,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "6050:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 219,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "6057:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 217,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "6040:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6040:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 221,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "6068:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6040:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 214,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "6015:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6015:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "6015:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6096:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 208,
												"id": 226,
												"nodeType": "Return",
												"src": "6089:11:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "5484:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5882:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5908:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5900:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5925:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5917:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5899:37:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5961:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5961:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:6:0"
									},
									"scope": 585,
									"src": "5873:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "6693:328:0",
										"statements": [
											{
												"assignments": [
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6711:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6703:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 238,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6703:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 242,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 240,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "6719:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6719:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6703:28:0"
											},
											{
												"assignments": [
													244
												],
												"declarations": [
													{
														"constant": false,
														"id": 244,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6749:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6741:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 243,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"arguments": [
														{
															"id": 246,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "6778:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 247,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "6785:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 245,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "6768:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6768:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6741:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "6811:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 252,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "6831:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6811:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6848:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6803:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "6803:85:0"
											},
											{
												"id": 265,
												"nodeType": "UncheckedBlock",
												"src": "6898:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "6931:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 259,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "6938:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 260,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6947:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 261,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "6966:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6947:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 257,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "6922:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6922:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 264,
														"nodeType": "ExpressionStatement",
														"src": "6922:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7010:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 237,
												"id": 267,
												"nodeType": "Return",
												"src": "7003:11:0"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "6113:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6603:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6629:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6621:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6646:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6638:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6620:42:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6687:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6686:6:0"
									},
									"scope": 585,
									"src": "6594:427:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "7583:543:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 280,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "7601:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7617:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7609:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 281,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7609:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7609:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7601:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7621:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7593:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7593:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "7593:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 290,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "7679:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7693:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7685:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 291,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7685:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7685:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7679:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7697:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7671:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7671:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "7671:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 300,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "7767:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "7773:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7777:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 299,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "7746:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7746:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "7746:38:0"
											},
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7803:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "7795:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7795:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 310,
												"initialValue": {
													"baseExpression": {
														"id": 307,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "7817:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 309,
													"indexExpression": {
														"id": 308,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "7827:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7817:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7795:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 312,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "7850:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 313,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "7865:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7850:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7873:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7842:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7842:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "7842:72:0"
											},
											{
												"id": 326,
												"nodeType": "UncheckedBlock",
												"src": "7924:73:0",
												"statements": [
													{
														"expression": {
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 318,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "7948:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 320,
																"indexExpression": {
																	"id": 319,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7958:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7948:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 321,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "7966:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 322,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7980:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7966:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7948:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 325,
														"nodeType": "ExpressionStatement",
														"src": "7948:38:0"
													}
												]
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 327,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "8006:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 329,
														"indexExpression": {
															"id": 328,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8016:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8006:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 330,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "8023:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8006:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "8006:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 334,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8054:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 335,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8060:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8064:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "8045:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8045:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "EmitStatement",
												"src": "8040:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8102:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8108:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8112:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "8082:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8082:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "8082:37:0"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "7027:443:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7484:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7511:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7503:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7503:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7533:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7525:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7493:72:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7583:0:0"
									},
									"scope": 585,
									"src": "7475:651:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "8467:324:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 355,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "8485:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8504:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8496:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 356,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8496:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8496:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8485:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8508:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8477:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8477:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "8477:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8582:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8574:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 365,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8574:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8574:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8586:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8595:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "8553:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8553:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "8553:49:0"
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 373,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "8613:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 374,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8629:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8613:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "8613:22:0"
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 377,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "8645:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 379,
														"indexExpression": {
															"id": 378,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8655:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8645:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 380,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8667:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8645:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "8645:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8705:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8697:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 384,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8697:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8697:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 388,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8709:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 389,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8718:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 383,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "8688:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8688:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "EmitStatement",
												"src": "8683:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8764:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8756:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 393,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8756:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8756:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8768:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8777:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 392,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "8736:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8736:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "8736:48:0"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "8132:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8411:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8425:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8417:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8442:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "8434:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8416:33:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8467:0:0"
									},
									"scope": 585,
									"src": "8402:389:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "9176:511:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 411,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "9194:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9213:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9205:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 412,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9205:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9205:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9194:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9217:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9186:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "9186:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 421,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9285:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9302:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9294:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 422,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9294:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9294:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 426,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9306:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 420,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "9264:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9264:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "9264:49:0"
											},
											{
												"assignments": [
													430
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9332:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "9324:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 429,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9324:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"baseExpression": {
														"id": 431,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "9349:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 433,
													"indexExpression": {
														"id": 432,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "9359:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9349:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9324:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 436,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "9385:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 437,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "9403:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9385:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9411:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9377:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9377:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "9377:71:0"
											},
											{
												"id": 450,
												"nodeType": "UncheckedBlock",
												"src": "9458:79:0",
												"statements": [
													{
														"expression": {
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 442,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "9482:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 444,
																"indexExpression": {
																	"id": 443,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "9492:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9482:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 445,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "9503:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 446,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "9520:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9503:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9482:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 449,
														"nodeType": "ExpressionStatement",
														"src": "9482:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 451,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "9546:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 452,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "9562:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9546:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "9546:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 456,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9593:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9610:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9602:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9602:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9602:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9614:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 455,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "9584:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9584:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "EmitStatement",
												"src": "9579:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "9652:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9669:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9661:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 466,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9661:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9661:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "9673:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "9632:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9632:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "9632:48:0"
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "8797:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9120:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9134:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "9126:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9126:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9151:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "9143:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9125:33:0"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9176:0:0"
									},
									"scope": 585,
									"src": "9111:576:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "10223:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 485,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "10241:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10258:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10250:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 486,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10250:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10250:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10241:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10262:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10233:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10233:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "10233:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 495,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "10319:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10338:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10330:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 496,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10330:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10330:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10319:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10342:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10311:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10311:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "10311:68:0"
											},
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 504,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "10390:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 507,
															"indexExpression": {
																"id": 505,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "10402:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10390:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 508,
														"indexExpression": {
															"id": 506,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "10409:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10390:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 509,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "10420:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10390:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "10390:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 513,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "10450:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 514,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "10457:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "10466:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 512,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "10441:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10441:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "EmitStatement",
												"src": "10436:37:0"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "9693:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10119:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10145:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10137:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10168:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10160:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10160:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10193:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "10185:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10185:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10127:78:0"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10223:0:0"
									},
									"scope": 585,
									"src": "10110:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "10881:321:0",
										"statements": [
											{
												"assignments": [
													530
												],
												"declarations": [
													{
														"constant": false,
														"id": 530,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10899:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 561,
														"src": "10891:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 529,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10891:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 535,
												"initialValue": {
													"arguments": [
														{
															"id": 532,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "10928:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "10935:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 531,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "10918:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10918:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10891:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 536,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "10957:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10982:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 538,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10982:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 537,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10977:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10977:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10977:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10957:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "IfStatement",
												"src": "10953:243:0",
												"trueBody": {
													"id": 559,
													"nodeType": "Block",
													"src": "10996:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 544,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 530,
																			"src": "11018:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 545,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 526,
																			"src": "11038:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11018:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11046:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 543,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11010:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11010:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 549,
															"nodeType": "ExpressionStatement",
															"src": "11010:68:0"
														},
														{
															"id": 558,
															"nodeType": "UncheckedBlock",
															"src": "11092:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 551,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 522,
																				"src": "11129:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 552,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "11136:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 555,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 553,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 530,
																					"src": "11145:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 554,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 526,
																					"src": "11164:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11145:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 550,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 519,
																			"src": "11120:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11120:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 557,
																	"nodeType": "ExpressionStatement",
																	"src": "11120:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "10486:270:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10770:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10803:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "10795:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10826:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "10818:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10818:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10851:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "10843:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10843:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10785:78:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10881:0:0"
									},
									"scope": 585,
									"src": "10761:441:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "11905:2:0",
										"statements": []
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "11208:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "11795:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11833:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "11825:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11825:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11855:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "11847:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11847:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11875:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "11867:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11815:72:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11905:0:0"
									},
									"scope": 585,
									"src": "11786:121:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "12613:2:0",
										"statements": []
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "11913:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12504:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12541:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12533:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12533:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12563:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12555:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12555:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12583:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "12575:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12575:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12523:72:0"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12613:0:0"
									},
									"scope": 585,
									"src": "12495:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 586,
							"src": "1403:11214:0",
							"usedErrors": []
						}
					],
					"src": "105:12513:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							663
						]
					},
					"id": 664,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 587,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 588,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 663,
							"linearizedBaseContracts": [
								663
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 597,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 606,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 663,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 663,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 627,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 663,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 663,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 650,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 647,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 663,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 659,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 663,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 664,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							754
						],
						"ERC20": [
							585
						],
						"ERC20Burnable": [
							707
						],
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							732
						]
					},
					"id": 708,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 665,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "124:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 666,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 708,
							"sourceUnit": 586,
							"src": "149:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 667,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 708,
							"sourceUnit": 755,
							"src": "172:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 669,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 754,
										"src": "454:7:2"
									},
									"id": 670,
									"nodeType": "InheritanceSpecifier",
									"src": "454:7:2"
								},
								{
									"baseName": {
										"id": 671,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 585,
										"src": "463:5:2"
									},
									"id": 672,
									"nodeType": "InheritanceSpecifier",
									"src": "463:5:2"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 668,
								"nodeType": "StructuredDocumentation",
								"src": "210:208:2",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": false,
							"id": 707,
							"linearizedBaseContracts": [
								707,
								585,
								732,
								663,
								754
							],
							"name": "ERC20Burnable",
							"nameLocation": "437:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "623:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 679,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "639:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "639:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 681,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "653:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 678,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "633:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "633:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "633:27:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "475:98:2",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "587:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "600:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "592:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "591:16:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "623:0:2"
									},
									"scope": 707,
									"src": "578:89:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "1039:95:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 694,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "1065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 695,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "1074:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1074:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 697,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "1088:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 693,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "1049:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1049:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "1049:46:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 701,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "1111:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 702,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "1120:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 700,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "1105:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1105:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "1105:22:2"
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "673:295:2",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "982:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "999:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "991:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1016:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1008:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "990:33:2"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1039:0:2"
									},
									"scope": 707,
									"src": "973:161:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 708,
							"src": "419:717:2",
							"usedErrors": []
						}
					],
					"src": "124:1013:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							732
						]
					},
					"id": 733,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 709,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 710,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 733,
							"sourceUnit": 664,
							"src": "135:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 712,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "305:6:3"
									},
									"id": 713,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 711,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 732,
							"linearizedBaseContracts": [
								732,
								663
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 719,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 716,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 732,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 725,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 722,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 732,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 731,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 728,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 732,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 733,
							"src": "277:405:3",
							"usedErrors": []
						}
					],
					"src": "110:573:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							754
						]
					},
					"id": 755,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 734,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 735,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 754,
							"linearizedBaseContracts": [
								754
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 740,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 739,
												"id": 742,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 754,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 749,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 748,
												"id": 751,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 746,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 754,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 755,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1066
						]
					},
					"id": 1067,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 756,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 757,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1066,
							"linearizedBaseContracts": [
								1066
							],
							"name": "SafeMath",
							"nameLocation": "490:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "717:140:5",
										"statements": [
											{
												"id": 787,
												"nodeType": "UncheckedBlock",
												"src": "727:124:5",
												"statements": [
													{
														"assignments": [
															770
														],
														"declarations": [
															{
																"constant": false,
																"id": 770,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 787,
																"src": "751:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 769,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 774,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 771,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "763:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 772,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "767:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 775,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "786:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 776,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "790:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 782,
														"nodeType": "IfStatement",
														"src": "782:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 780,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 768,
															"id": 781,
															"nodeType": "Return",
															"src": "793:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 784,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "838:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 785,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 768,
														"id": 786,
														"nodeType": "Return",
														"src": "824:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "657:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "668:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:5"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "702:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 764,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "708:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:5"
									},
									"scope": 1066,
									"src": "641:216:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "1078:113:5",
										"statements": [
											{
												"id": 815,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 801,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "1116:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 802,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "1120:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 808,
														"nodeType": "IfStatement",
														"src": "1112:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 806,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 800,
															"id": 807,
															"nodeType": "Return",
															"src": "1123:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 810,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 792,
																		"src": "1168:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 811,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "1172:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 813,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 800,
														"id": 814,
														"nodeType": "Return",
														"src": "1154:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:5",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "1018:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "1029:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:5"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "1063:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 796,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "1069:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:5"
									},
									"scope": 1066,
									"src": "1002:189:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "1415:417:5",
										"statements": [
											{
												"id": 857,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 829,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 820,
																"src": "1683:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 836,
														"nodeType": "IfStatement",
														"src": "1679:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 834,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 828,
															"id": 835,
															"nodeType": "Return",
															"src": "1691:16:5"
														}
													},
													{
														"assignments": [
															838
														],
														"declarations": [
															{
																"constant": false,
																"id": 838,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 857,
																"src": "1721:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 837,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 842,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 839,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 820,
																"src": "1733:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 840,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "1737:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 843,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "1756:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 844,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "1760:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 846,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "1765:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 852,
														"nodeType": "IfStatement",
														"src": "1752:33:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 850,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 828,
															"id": 851,
															"nodeType": "Return",
															"src": "1768:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 854,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 838,
																	"src": "1813:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 855,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 828,
														"id": 856,
														"nodeType": "Return",
														"src": "1799:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "1355:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "1366:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:5"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "1400:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 824,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "1406:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:5"
									},
									"scope": 1066,
									"src": "1339:493:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "2057:114:5",
										"statements": [
											{
												"id": 885,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 871,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 864,
																"src": "2095:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 878,
														"nodeType": "IfStatement",
														"src": "2091:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 876,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 870,
															"id": 877,
															"nodeType": "Return",
															"src": "2103:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 880,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 862,
																		"src": "2148:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 881,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 864,
																		"src": "2152:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 883,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 870,
														"id": 884,
														"nodeType": "Return",
														"src": "2134:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "1997:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "2008:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:5"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "2042:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 866,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "2048:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:5"
									},
									"scope": 1066,
									"src": "1981:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "2406:114:5",
										"statements": [
											{
												"id": 913,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 899,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "2444:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 906,
														"nodeType": "IfStatement",
														"src": "2440:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 904,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 898,
															"id": 905,
															"nodeType": "Return",
															"src": "2452:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 908,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 890,
																		"src": "2497:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 909,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 892,
																		"src": "2501:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 911,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 898,
														"id": 912,
														"nodeType": "Return",
														"src": "2483:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2346:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2357:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:5"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2391:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 894,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "2397:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:5"
									},
									"scope": 1066,
									"src": "2330:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "2822:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 925,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "2839:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 926,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "2843:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 924,
												"id": 928,
												"nodeType": "Return",
												"src": "2832:12:5"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "2768:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "2779:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:5"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "2813:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:5"
									},
									"scope": 1066,
									"src": "2755:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "3189:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 940,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "3206:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 941,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "3210:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 939,
												"id": 943,
												"nodeType": "Return",
												"src": "3199:12:5"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "3135:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "3146:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:5"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "3180:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:5"
									},
									"scope": 1066,
									"src": "3122:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "3532:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 955,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "3549:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 956,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "3553:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 954,
												"id": 958,
												"nodeType": "Return",
												"src": "3542:12:5"
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "3478:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "3489:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:5"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "3523:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:5"
									},
									"scope": 1066,
									"src": "3465:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "3917:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 970,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "3934:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 971,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "3938:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 969,
												"id": 973,
												"nodeType": "Return",
												"src": "3927:12:5"
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "3863:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "3874:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:5"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "3908:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:5"
									},
									"scope": 1066,
									"src": "3850:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "4466:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 985,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "4483:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 986,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "4487:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 984,
												"id": 988,
												"nodeType": "Return",
												"src": "4476:12:5"
											}
										]
									},
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "4412:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "4423:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:5"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "4457:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:5"
									},
									"scope": 1066,
									"src": "4399:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "5084:106:5",
										"statements": [
											{
												"id": 1013,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1003,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 995,
																		"src": "5126:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1004,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "5131:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1006,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "5134:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1002,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1008,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1009,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "5168:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1010,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 995,
																"src": "5172:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1001,
														"id": 1012,
														"nodeType": "Return",
														"src": "5161:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "4981:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "5000:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "5019:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 996,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:5"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "5075:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:5"
									},
									"scope": 1066,
									"src": "4959:231:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "5799:105:5",
										"statements": [
											{
												"id": 1038,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1028,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1020,
																		"src": "5841:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1031,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1022,
																	"src": "5848:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1027,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1033,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1034,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "5882:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1035,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "5886:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1026,
														"id": 1037,
														"nodeType": "Return",
														"src": "5875:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1016,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "5696:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "5715:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "5734:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1021,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:5"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "5790:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:5"
									},
									"scope": 1066,
									"src": "5674:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "6675:105:5",
										"statements": [
											{
												"id": 1063,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1053,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1045,
																		"src": "6717:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1056,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1047,
																	"src": "6724:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1052,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1058,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1059,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1043,
																"src": "6758:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1060,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1045,
																"src": "6762:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1051,
														"id": 1062,
														"nodeType": "Return",
														"src": "6751:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "6572:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "6591:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "6610:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1046,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:5"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "6666:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:5"
									},
									"scope": 1066,
									"src": "6550:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1067,
							"src": "482:6300:5",
							"usedErrors": []
						}
					],
					"src": "107:6676:5"
				},
				"id": 5
			},
			"Contracts/AccesPolygon.sol": {
				"ast": {
					"absolutePath": "Contracts/AccesPolygon.sol",
					"exportedSymbols": {
						"Context": [
							754
						],
						"ERC20": [
							585
						],
						"ERC20Burnable": [
							707
						],
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							732
						],
						"MetaccesPolygon": [
							1631
						],
						"SafeMath": [
							1066
						]
					},
					"id": 1632,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1068,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "33:25:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1069,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1632,
							"sourceUnit": 586,
							"src": "60:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1070,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1632,
							"sourceUnit": 1067,
							"src": "116:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1071,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1632,
							"sourceUnit": 708,
							"src": "174:74:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1072,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 585,
										"src": "279:5:6"
									},
									"id": 1073,
									"nodeType": "InheritanceSpecifier",
									"src": "279:5:6"
								},
								{
									"baseName": {
										"id": 1074,
										"name": "ERC20Burnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 707,
										"src": "286:13:6"
									},
									"id": 1075,
									"nodeType": "InheritanceSpecifier",
									"src": "286:13:6"
								}
							],
							"canonicalName": "MetaccesPolygon",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1631,
							"linearizedBaseContracts": [
								1631,
								707,
								585,
								732,
								663,
								754
							],
							"name": "MetaccesPolygon",
							"nameLocation": "260:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1078,
									"libraryName": {
										"id": 1076,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1066,
										"src": "312:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "306:27:6",
									"typeName": {
										"id": 1077,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "325:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1080,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "354:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1631,
									"src": "338:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1079,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "338:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "e78cea92",
									"id": 1082,
									"mutability": "mutable",
									"name": "bridge",
									"nameLocation": "380:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1631,
									"src": "365:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1081,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "365:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1084,
									"mutability": "mutable",
									"name": "sSBlock",
									"nameLocation": "410:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1631,
									"src": "393:24:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1083,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "393:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1086,
									"mutability": "mutable",
									"name": "sEBlock",
									"nameLocation": "435:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1631,
									"src": "418:24:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1085,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "418:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1088,
									"mutability": "mutable",
									"name": "sTot",
									"nameLocation": "460:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1631,
									"src": "443:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1087,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "443:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1090,
									"mutability": "mutable",
									"name": "sPrice",
									"nameLocation": "487:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1631,
									"src": "470:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1089,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "470:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1096,
									"mutability": "mutable",
									"name": "path",
									"nameLocation": "516:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1631,
									"src": "499:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1091,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "499:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1095,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 1092,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "523:2:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"arguments": [],
											"expression": {
												"argumentTypes": [],
												"id": 1093,
												"name": "decimals",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 74,
												"src": "528:8:6",
												"typeDescriptions": {
													"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
													"typeString": "function () view returns (uint8)"
												}
											},
											"id": 1094,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "functionCall",
											"lValueRequested": false,
											"names": [],
											"nodeType": "FunctionCall",
											"src": "528:10:6",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"src": "523:15:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "6ac5db19",
									"id": 1101,
									"mutability": "mutable",
									"name": "max",
									"nameLocation": "559:3:6",
									"nodeType": "VariableDeclaration",
									"scope": 1631,
									"src": "544:30:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1097,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "544:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1100,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3230",
											"id": 1098,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "565:2:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_20_by_1",
												"typeString": "int_const 20"
											},
											"value": "20"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"id": 1099,
											"name": "path",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1096,
											"src": "570:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "565:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f8897945",
									"id": 1107,
									"mutability": "mutable",
									"name": "min",
									"nameLocation": "595:3:6",
									"nodeType": "VariableDeclaration",
									"scope": 1631,
									"src": "580:33:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1102,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "580:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "313030",
												"id": 1105,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "609:3:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_100_by_1",
													"typeString": "int_const 100"
												},
												"value": "100"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_100_by_1",
													"typeString": "int_const 100"
												}
											],
											"expression": {
												"id": 1103,
												"name": "max",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1101,
												"src": "601:3:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 1104,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberName": "div",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 975,
											"src": "601:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
												"typeString": "function (uint256,uint256) pure returns (uint256)"
											}
										},
										"id": 1106,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "601:12:6",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3c3b7995",
									"id": 1110,
									"mutability": "mutable",
									"name": "privateLimit",
									"nameLocation": "634:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1631,
									"src": "619:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1108,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "619:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030",
										"id": 1109,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "649:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000_by_1",
											"typeString": "int_const 1000000"
										},
										"value": "1000000"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "4508977418b95bac209196e03356692c2d8f47957dec1c15af1a44cc40d39a04",
									"id": 1118,
									"name": "WithdrawalBNB",
									"nameLocation": "669:13:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "691:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "683:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"indexed": false,
												"mutability": "mutable",
												"name": "decimal",
												"nameLocation": "708:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "700:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "725:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "717:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "682:46:6"
									},
									"src": "663:66:6"
								},
								{
									"anonymous": false,
									"eventSelector": "0206ca7f97d46974ed97b981f879b17e9e1fe17ead63770c806926d28aa5cbd5",
									"id": 1128,
									"name": "WithdrawalToken",
									"nameLocation": "741:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenAddr",
												"nameLocation": "765:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "757:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "757:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "785:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "777:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"indexed": false,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "801:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "793:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "819:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "811:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:66:6"
									},
									"src": "735:88:6"
								},
								{
									"anonymous": false,
									"eventSelector": "e605ac02ea219003ec58fc9cf4d4b3c5f2d62ec39807b1c63886ddd47a6fcd6e",
									"id": 1132,
									"name": "SetBridge",
									"nameLocation": "834:9:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"indexed": false,
												"mutability": "mutable",
												"name": "_bridge",
												"nameLocation": "852:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "844:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:17:6"
									},
									"src": "828:33:6"
								},
								{
									"anonymous": false,
									"eventSelector": "b887e151dbfcc06b4ce4f67f9bbedaeb16ab224e34c6668858d0310c6d18ffc3",
									"id": 1138,
									"name": "PrivateSale",
									"nameLocation": "872:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"indexed": false,
												"mutability": "mutable",
												"name": "Amount",
												"nameLocation": "892:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "884:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"indexed": false,
												"mutability": "mutable",
												"name": "Price",
												"nameLocation": "908:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "900:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:31:6"
									},
									"src": "866:49:6"
								},
								{
									"anonymous": false,
									"eventSelector": "1dc13bd033e49239661ba80e30ae191b1c31c79277b531e88246c7517971b85d",
									"id": 1142,
									"name": "saleStarted",
									"nameLocation": "926:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockNumber",
												"nameLocation": "946:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "938:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:21:6"
									},
									"src": "920:39:6"
								},
								{
									"anonymous": false,
									"eventSelector": "b144be0f16f8d30f2e18ef8f7938d5e90207932d96650e592ff47725716818fb",
									"id": 1146,
									"name": "saleEnded",
									"nameLocation": "970:9:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"indexed": false,
												"mutability": "mutable",
												"name": "Time",
												"nameLocation": "988:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "980:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:14:6"
									},
									"src": "964:30:6"
								},
								{
									"anonymous": false,
									"eventSelector": "3b06ffd21bedfb2c375d7b1bcf74ca4fe1afe205699e39610b3aced7adf6b9e9",
									"id": 1152,
									"name": "minMax",
									"nameLocation": "1005:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"indexed": false,
												"mutability": "mutable",
												"name": "Min",
												"nameLocation": "1020:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "1012:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"indexed": false,
												"mutability": "mutable",
												"name": "Max",
												"nameLocation": "1033:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "1025:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:26:6"
									},
									"src": "999:39:6"
								},
								{
									"anonymous": false,
									"eventSelector": "6d487f3988610155b3a9ef590f8ac170134d24e6505b9ddd3160e34abaa0edaf",
									"id": 1156,
									"name": "PrivateLimit",
									"nameLocation": "1049:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"indexed": false,
												"mutability": "mutable",
												"name": "newLimit",
												"nameLocation": "1070:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1062:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1062:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1061:18:6"
									},
									"src": "1043:37:6"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1162,
									"name": "OwnershipTransferred",
									"nameLocation": "1091:20:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldOwner",
												"nameLocation": "1128:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "1112:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1112:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1154:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "1138:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1138:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1111:52:6"
									},
									"src": "1085:79:6"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "1190:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1165,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1208:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1208:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1167,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "1222:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1208:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616c6c6572206e6f74206f776e657221",
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1228:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03b09a122d7f425a13e5cc389b8c58328ede0f4e779147f4da5b67b50d2c7986",
																"typeString": "literal_string \"caller not owner!\""
															},
															"value": "caller not owner!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03b09a122d7f425a13e5cc389b8c58328ede0f4e779147f4da5b67b50d2c7986",
																"typeString": "literal_string \"caller not owner!\""
															}
														],
														"id": 1164,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1200:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1200:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1171,
												"nodeType": "ExpressionStatement",
												"src": "1200:48:6"
											},
											{
												"id": 1172,
												"nodeType": "PlaceholderStatement",
												"src": "1258:1:6"
											}
										]
									},
									"id": 1174,
									"name": "onlyOwner",
									"nameLocation": "1179:9:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1188:2:6"
									},
									"src": "1170:96:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1202,
										"nodeType": "Block",
										"src": "1335:131:6",
										"statements": [
											{
												"expression": {
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1183,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "1341:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1184,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1349:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1349:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1341:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "1341:18:6"
											},
											{
												"expression": {
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1188,
														"name": "bridge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "1365:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1189,
														"name": "_bridge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "1374:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1365:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "1365:16:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1195,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1403:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MetaccesPolygon_$1631",
																		"typeString": "contract MetaccesPolygon"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MetaccesPolygon_$1631",
																		"typeString": "contract MetaccesPolygon"
																	}
																],
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1395:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1193,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1395:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1395:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "313030303030303030",
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1410:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"value": "100000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1198,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1096,
																"src": "1422:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1410:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1192,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "1388:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1388:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1201,
												"nodeType": "ExpressionStatement",
												"src": "1388:39:6"
											}
										]
									},
									"id": 1203,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d65746163636573",
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1306:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_522baacaf20e611a8c43ec7f8abbb043ce53184965b4949e422777859212f9fa",
														"typeString": "literal_string \"Metacces\""
													},
													"value": "Metacces"
												},
												{
													"hexValue": "4163636573",
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1318:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9485928de741c2f974e23b8c7156bae5a6efe9e11a9dad52349aedb87132104f",
														"typeString": "literal_string \"Acces\""
													},
													"value": "Acces"
												}
											],
											"id": 1181,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1178,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 585,
												"src": "1300:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1300:26:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "_bridge",
												"nameLocation": "1291:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "1283:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:17:6"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1335:0:6"
									},
									"scope": 1631,
									"src": "1270:196:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "1534:141:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1211,
																"name": "_newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1205,
																"src": "1551:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1572:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1564:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1212,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1564:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1564:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1551:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "61646472657373207a65726f21",
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1575:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15899f662d7a614bf3c57644e7510671708691155c8806292fb4f45c1016663c",
																"typeString": "literal_string \"address zero!\""
															},
															"value": "address zero!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15899f662d7a614bf3c57644e7510671708691155c8806292fb4f45c1016663c",
																"typeString": "literal_string \"address zero!\""
															}
														],
														"id": 1210,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1543:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1543:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "1543:48:6"
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1220,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "1600:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1221,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "1608:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1600:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "1600:17:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1225,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "1652:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1226,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "1659:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1224,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "1631:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1631:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1228,
												"nodeType": "EmitStatement",
												"src": "1626:43:6"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 1230,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1208,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1207,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1174,
												"src": "1525:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1525:9:6"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1479:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "_newOwner",
												"nameLocation": "1505:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "1497:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1497:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1496:19:6"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1534:0:6"
									},
									"scope": 1631,
									"src": "1470:205:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1315,
										"nodeType": "Block",
										"src": "1747:535:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1241,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1779:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1242,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "1779:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1771:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1239,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1771:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1771:19:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1238,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "1761:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1761:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1245,
																	"name": "privateLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1110,
																	"src": "1795:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1246,
																	"name": "path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "1810:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1795:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1761:53:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75207265616368656420796f757220707269766174652073616c65206c696d6974",
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1817:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1c2d3c13e86f28ed18ad4b34d675b8ac811f8a03f815d44ab828417c04bb25b6",
																"typeString": "literal_string \"You reached your private sale limit\""
															},
															"value": "You reached your private sale limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1c2d3c13e86f28ed18ad4b34d675b8ac811f8a03f815d44ab828417c04bb25b6",
																"typeString": "literal_string \"You reached your private sale limit\""
															}
														],
														"id": 1237,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1753:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1753:102:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "1753:102:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1253,
																	"name": "sSBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1084,
																	"src": "1871:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"id": 1254,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1882:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "1882:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1871:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1257,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1898:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "1898:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1259,
																	"name": "sEBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1086,
																	"src": "1914:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1898:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1871:50:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "507269766174652053616c652068617320656e646564206f7220646964206e6f7420737461727420796574",
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1923:45:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3b56df502a2942e85cf034699d7908f5e5acd2577a219c55769be254bc3ea7d6",
																"typeString": "literal_string \"Private Sale has ended or did not start yet\""
															},
															"value": "Private Sale has ended or did not start yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3b56df502a2942e85cf034699d7908f5e5acd2577a219c55769be254bc3ea7d6",
																"typeString": "literal_string \"Private Sale has ended or did not start yet\""
															}
														],
														"id": 1252,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1863:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1863:106:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "1863:106:6"
											},
											{
												"assignments": [
													1266
												],
												"declarations": [
													{
														"constant": false,
														"id": 1266,
														"mutability": "mutable",
														"name": "_eth",
														"nameLocation": "1984:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1315,
														"src": "1976:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1265,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1976:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1269,
												"initialValue": {
													"expression": {
														"id": 1267,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1991:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "1991:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1976:24:6"
											},
											{
												"assignments": [
													1271
												],
												"declarations": [
													{
														"constant": false,
														"id": 1271,
														"mutability": "mutable",
														"name": "_tkns",
														"nameLocation": "2014:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1315,
														"src": "2006:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1270,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2006:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1272,
												"nodeType": "VariableDeclarationStatement",
												"src": "2006:13:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1274,
																	"name": "_eth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1266,
																	"src": "2040:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1275,
																	"name": "min",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "2048:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2040:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1277,
																	"name": "_eth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1266,
																	"src": "2055:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1278,
																	"name": "max",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1101,
																	"src": "2063:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2055:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2040:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c657373207468616e204d696e696d756d206f72204d6f7265207468616e204d6178696d756d",
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2069:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b8c03831c8bbcc5ea6afa167bff5a9451576692b7afd8364ac3181fc924bce33",
																"typeString": "literal_string \"Less than Minimum or More than Maximum\""
															},
															"value": "Less than Minimum or More than Maximum"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b8c03831c8bbcc5ea6afa167bff5a9451576692b7afd8364ac3181fc924bce33",
																"typeString": "literal_string \"Less than Minimum or More than Maximum\""
															}
														],
														"id": 1273,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2030:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2030:80:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1283,
												"nodeType": "ExpressionStatement",
												"src": "2030:80:6"
											},
											{
												"expression": {
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1284,
														"name": "_tkns",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1271,
														"src": "2116:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 1291,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2147:7:6",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															],
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"id": 1287,
																				"name": "_eth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1266,
																				"src": "2136:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1285,
																				"name": "sPrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1090,
																				"src": "2125:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 960,
																			"src": "2125:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2125:16:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1289,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2124:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 975,
															"src": "2124:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2124:31:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2116:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1294,
												"nodeType": "ExpressionStatement",
												"src": "2116:39:6"
											},
											{
												"expression": {
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2161:7:6",
													"subExpression": {
														"id": 1295,
														"name": "sTot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "2161:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1297,
												"nodeType": "ExpressionStatement",
												"src": "2161:7:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1301,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2197:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MetaccesPolygon_$1631",
																		"typeString": "contract MetaccesPolygon"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MetaccesPolygon_$1631",
																		"typeString": "contract MetaccesPolygon"
																	}
																],
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2189:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1299,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2189:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2189:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1303,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2204:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2204:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1305,
															"name": "_tkns",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "2216:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1298,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "2179:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2179:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "2179:43:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1309,
															"name": "_tkns",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "2246:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1310,
															"name": "sPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "2253:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1308,
														"name": "PrivateSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "2234:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1312,
												"nodeType": "EmitStatement",
												"src": "2229:31:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2273:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1236,
												"id": 1314,
												"nodeType": "Return",
												"src": "2266:11:6"
											}
										]
									},
									"functionSelector": "e7d53fcb",
									"id": 1316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "privateSale",
									"nameLocation": "1689:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "1701:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1701:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1700:9:6"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1739:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "1734:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1234,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1734:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1733:14:6"
									},
									"scope": 1631,
									"src": "1680:602:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "2401:50:6",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 1327,
															"name": "sSBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "2414:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1328,
															"name": "sEBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "2423:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1329,
															"name": "sTot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "2432:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1330,
															"name": "sPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "2439:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1331,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2413:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1326,
												"id": 1332,
												"nodeType": "Return",
												"src": "2407:39:6"
											}
										]
									},
									"functionSelector": "4d1d03d1",
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "viewSale",
									"nameLocation": "2295:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2303:2:6"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "StartBlock",
												"nameLocation": "2334:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "2326:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "EndBlock",
												"nameLocation": "2354:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "2346:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "SaleCount",
												"nameLocation": "2372:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "2364:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2364:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "SalePrice",
												"nameLocation": "2391:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "2383:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:76:6"
									},
									"scope": 1631,
									"src": "2286:165:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1362,
										"nodeType": "Block",
										"src": "2527:101:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1344,
																	"name": "_sEBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1336,
																	"src": "2543:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2554:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2543:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1347,
																	"name": "_sPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1338,
																	"src": "2559:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2569:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2559:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2543:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f21",
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2571:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_46305072fb50c0438bd7a65f37da664a0a7c165dbfa7fd52c439a808fba616ad",
																"typeString": "literal_string \"Zero!\""
															},
															"value": "Zero!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_46305072fb50c0438bd7a65f37da664a0a7c165dbfa7fd52c439a808fba616ad",
																"typeString": "literal_string \"Zero!\""
															}
														],
														"id": 1343,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2535:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2535:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "2535:44:6"
											},
											{
												"expression": {
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1354,
														"name": "sEBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "2584:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1355,
														"name": "_sEBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "2594:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2584:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1357,
												"nodeType": "ExpressionStatement",
												"src": "2584:18:6"
											},
											{
												"expression": {
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1358,
														"name": "sPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "2608:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1359,
														"name": "_sPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "2616:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2608:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1361,
												"nodeType": "ExpressionStatement",
												"src": "2608:15:6"
											}
										]
									},
									"functionSelector": "f4f3122e",
									"id": 1363,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1341,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1340,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1174,
												"src": "2518:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2518:9:6"
										}
									],
									"name": "startSale",
									"nameLocation": "2466:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "_sEBlock",
												"nameLocation": "2484:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "2476:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2476:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "_sPrice",
												"nameLocation": "2502:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "2494:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2494:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2475:35:6"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2527:0:6"
									},
									"scope": 1631,
									"src": "2457:171:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1378,
										"nodeType": "Block",
										"src": "2670:82:6",
										"statements": [
											{
												"expression": {
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1368,
														"name": "sEBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "2682:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1369,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2692:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "2692:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2682:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1372,
												"nodeType": "ExpressionStatement",
												"src": "2682:22:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1374,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2731:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2731:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1373,
														"name": "saleEnded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "2721:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2721:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1377,
												"nodeType": "EmitStatement",
												"src": "2716:31:6"
											}
										]
									},
									"functionSelector": "380d831b",
									"id": 1379,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1366,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1365,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1174,
												"src": "2661:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2661:9:6"
										}
									],
									"name": "endSale",
									"nameLocation": "2643:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2651:2:6"
									},
									"returnParameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2670:0:6"
									},
									"scope": 1631,
									"src": "2634:118:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1414,
										"nodeType": "Block",
										"src": "2846:155:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1389,
																	"name": "minAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "2862:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2875:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2862:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1392,
																	"name": "maxAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1383,
																	"src": "2880:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2892:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2880:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2862:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f21",
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2894:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_46305072fb50c0438bd7a65f37da664a0a7c165dbfa7fd52c439a808fba616ad",
																"typeString": "literal_string \"Zero!\""
															},
															"value": "Zero!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_46305072fb50c0438bd7a65f37da664a0a7c165dbfa7fd52c439a808fba616ad",
																"typeString": "literal_string \"Zero!\""
															}
														],
														"id": 1388,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2854:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2854:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1398,
												"nodeType": "ExpressionStatement",
												"src": "2854:48:6"
											},
											{
												"expression": {
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1399,
														"name": "min",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "2910:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1400,
														"name": "minAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "2916:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2910:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1402,
												"nodeType": "ExpressionStatement",
												"src": "2910:15:6"
											},
											{
												"expression": {
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1403,
														"name": "max",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "2933:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1404,
															"name": "maxAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "2939:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1405,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "2951:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2939:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2933:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "2933:22:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1410,
															"name": "minAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "2975:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1411,
															"name": "maxAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "2986:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1409,
														"name": "minMax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "2968:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2968:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1413,
												"nodeType": "EmitStatement",
												"src": "2963:33:6"
											}
										]
									},
									"functionSelector": "e181203a",
									"id": 1415,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1386,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1385,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1174,
												"src": "2836:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2836:9:6"
										}
									],
									"name": "changeMinMaxPrivateSale",
									"nameLocation": "2765:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "minAmount",
												"nameLocation": "2797:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "2789:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2789:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "maxAmount",
												"nameLocation": "2816:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "2808:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2808:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2788:38:6"
									},
									"returnParameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2846:0:6"
									},
									"scope": 1631,
									"src": "2756:245:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1437,
										"nodeType": "Block",
										"src": "3066:104:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1423,
																"name": "_limit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1417,
																"src": "3082:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3092:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3082:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7a65726f21",
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3095:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_370c22c2430393d7d7dd6648674dd2ba5a07f9235dcf5c9a05680c4cd1efc989",
																"typeString": "literal_string \"zero!\""
															},
															"value": "zero!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_370c22c2430393d7d7dd6648674dd2ba5a07f9235dcf5c9a05680c4cd1efc989",
																"typeString": "literal_string \"zero!\""
															}
														],
														"id": 1422,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3074:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3074:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1428,
												"nodeType": "ExpressionStatement",
												"src": "3074:29:6"
											},
											{
												"expression": {
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1429,
														"name": "privateLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "3111:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1430,
														"name": "_limit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "3126:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3111:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1432,
												"nodeType": "ExpressionStatement",
												"src": "3111:21:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1434,
															"name": "_limit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "3158:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1433,
														"name": "PrivateLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "3145:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3145:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1436,
												"nodeType": "EmitStatement",
												"src": "3140:25:6"
											}
										]
									},
									"functionSelector": "534b1442",
									"id": 1438,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1420,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1419,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1174,
												"src": "3056:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3056:9:6"
										}
									],
									"name": "setPrivateLimit",
									"nameLocation": "3014:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "_limit",
												"nameLocation": "3039:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "3031:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3031:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3030:16:6"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3066:0:6"
									},
									"scope": 1631,
									"src": "3005:165:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1490,
										"nodeType": "Block",
										"src": "3286:250:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1452,
																"name": "_tokenAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1440,
																"src": "3302:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3324:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3316:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1453,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3316:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3316:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3302:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "61646472657373207a65726f21",
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3327:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15899f662d7a614bf3c57644e7510671708691155c8806292fb4f45c1016663c",
																"typeString": "literal_string \"address zero!\""
															},
															"value": "address zero!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15899f662d7a614bf3c57644e7510671708691155c8806292fb4f45c1016663c",
																"typeString": "literal_string \"address zero!\""
															}
														],
														"id": 1451,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3294:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3294:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1460,
												"nodeType": "ExpressionStatement",
												"src": "3294:49:6"
											},
											{
												"assignments": [
													1462
												],
												"declarations": [
													{
														"constant": false,
														"id": 1462,
														"mutability": "mutable",
														"name": "dcml",
														"nameLocation": "3361:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1490,
														"src": "3353:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1461,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3353:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1466,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1463,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3368:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"id": 1464,
														"name": "decimal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "3374:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3368:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3353:28:6"
											},
											{
												"assignments": [
													1469
												],
												"declarations": [
													{
														"constant": false,
														"id": 1469,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "3397:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1490,
														"src": "3391:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$585",
															"typeString": "contract ERC20"
														},
														"typeName": {
															"id": 1468,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1467,
																"name": "ERC20",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 585,
																"src": "3391:5:6"
															},
															"referencedDeclaration": 585,
															"src": "3391:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$585",
																"typeString": "contract ERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1473,
												"initialValue": {
													"arguments": [
														{
															"id": 1471,
															"name": "_tokenAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "3411:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1470,
														"name": "ERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "3405:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC20_$585_$",
															"typeString": "type(contract ERC20)"
														}
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3405:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$585",
														"typeString": "contract ERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3391:31:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1475,
															"name": "_tokenAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "3453:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1476,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "3465:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1477,
															"name": "decimal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "3474:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1478,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "3483:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1474,
														"name": "WithdrawalToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "3437:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,address)"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3437:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1480,
												"nodeType": "EmitStatement",
												"src": "3432:54:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1484,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "3511:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1485,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1442,
																"src": "3515:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1486,
																"name": "dcml",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "3523:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3515:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1481,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "3496:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$585",
																"typeString": "contract ERC20"
															}
														},
														"id": 1483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 123,
														"src": "3496:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3496:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1489,
												"nodeType": "ExpressionStatement",
												"src": "3496:32:6"
											}
										]
									},
									"functionSelector": "b2938bee",
									"id": 1491,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1449,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1448,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1174,
												"src": "3274:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3274:11:6"
										}
									],
									"name": "withdrawalToken",
									"nameLocation": "3183:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "_tokenAddr",
												"nameLocation": "3207:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "3199:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3199:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3227:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "3219:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "decimal",
												"nameLocation": "3244:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "3236:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3236:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3261:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "3253:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3253:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3198:66:6"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3286:0:6"
									},
									"scope": 1631,
									"src": "3174:362:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "3634:196:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1505,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3660:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_MetaccesPolygon_$1631",
																				"typeString": "contract MetaccesPolygon"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_MetaccesPolygon_$1631",
																				"typeString": "contract MetaccesPolygon"
																			}
																		],
																		"id": 1504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3652:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1503,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3652:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3652:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "3652:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1508,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1493,
																"src": "3677:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3652:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1502,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3644:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3644:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1511,
												"nodeType": "ExpressionStatement",
												"src": "3644:41:6"
											},
											{
												"assignments": [
													1513
												],
												"declarations": [
													{
														"constant": false,
														"id": 1513,
														"mutability": "mutable",
														"name": "dcml",
														"nameLocation": "3703:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1534,
														"src": "3695:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1512,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1517,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 1514,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3710:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"id": 1515,
														"name": "decimal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "3716:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3710:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1519,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "3752:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1520,
															"name": "decimal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "3761:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1521,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "3770:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1518,
														"name": "WithdrawalBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1118,
														"src": "3738:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,uint256,address)"
														}
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3738:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1523,
												"nodeType": "EmitStatement",
												"src": "3733:40:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1529,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1493,
																"src": "3804:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1530,
																"name": "dcml",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "3812:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3804:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1526,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1497,
																	"src": "3791:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3783:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1524,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3783:8:6",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3783:11:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3783:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3783:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1533,
												"nodeType": "ExpressionStatement",
												"src": "3783:34:6"
											}
										]
									},
									"functionSelector": "adbc7cee",
									"id": 1535,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1500,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1499,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1174,
												"src": "3622:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3622:11:6"
										}
									],
									"name": "withdrawalBNB",
									"nameLocation": "3553:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3575:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "3567:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3567:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "decimal",
												"nameLocation": "3592:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "3584:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3584:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3609:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "3601:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3601:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3566:46:6"
									},
									"returnParameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3634:0:6"
									},
									"scope": 1631,
									"src": "3544:286:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1560,
										"nodeType": "Block",
										"src": "3887:118:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1543,
																"name": "_bridge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1537,
																"src": "3903:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3922:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3914:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1544,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3914:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3914:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3903:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7a65726f206164647265737321",
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3925:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e7ef5c99ec469b3c82cc6dc25415a6965ed6f3f728a0f401ff6d4d4d4ba4f8b5",
																"typeString": "literal_string \"zero address!\""
															},
															"value": "zero address!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e7ef5c99ec469b3c82cc6dc25415a6965ed6f3f728a0f401ff6d4d4d4ba4f8b5",
																"typeString": "literal_string \"zero address!\""
															}
														],
														"id": 1542,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3895:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3895:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1551,
												"nodeType": "ExpressionStatement",
												"src": "3895:46:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1553,
															"name": "_bridge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "3964:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1552,
														"name": "SetBridge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "3954:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3954:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1555,
												"nodeType": "EmitStatement",
												"src": "3949:23:6"
											},
											{
												"expression": {
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1556,
														"name": "bridge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "3982:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1557,
														"name": "_bridge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1537,
														"src": "3991:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3982:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1559,
												"nodeType": "ExpressionStatement",
												"src": "3982:16:6"
											}
										]
									},
									"functionSelector": "8dd14802",
									"id": 1561,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1540,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1539,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1174,
												"src": "3870:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3870:9:6"
										}
									],
									"name": "setBridge",
									"nameLocation": "3843:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "_bridge",
												"nameLocation": "3861:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "3853:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3853:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3852:17:6"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3887:0:6"
									},
									"scope": 1631,
									"src": "3834:171:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1576,
										"nodeType": "Block",
										"src": "4222:41:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1572,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "4238:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1573,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "4249:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1571,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "4232:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4232:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1575,
												"nodeType": "ExpressionStatement",
												"src": "4232:24:6"
											}
										]
									},
									"documentation": {
										"id": 1562,
										"nodeType": "StructuredDocumentation",
										"src": "4010:73:6",
										"text": " @dev Only callable by account with access (gateway role)"
									},
									"functionSelector": "40c10f19",
									"id": 1577,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1569,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1568,
												"name": "onlyBridge",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1626,
												"src": "4203:10:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4203:10:6"
										}
									],
									"name": "mint",
									"nameLocation": "4098:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4120:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "4112:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4112:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4147:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "4139:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4102:61:6"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4222:0:6"
									},
									"scope": 1631,
									"src": "4089:174:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										685
									],
									"body": {
										"id": 1593,
										"nodeType": "Block",
										"src": "4517:35:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1590,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "4538:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1587,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4527:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MetaccesPolygon_$1631_$",
																"typeString": "type(contract super MetaccesPolygon)"
															}
														},
														"id": 1589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 685,
														"src": "4527:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4527:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "4527:18:6"
											}
										]
									},
									"documentation": {
										"id": 1578,
										"nodeType": "StructuredDocumentation",
										"src": "4269:105:6",
										"text": " @dev Only callable by account with access (gateway role)\n @inheritdoc ERC20Burnable"
									},
									"functionSelector": "42966c68",
									"id": 1594,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1585,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1584,
												"name": "onlyBridge",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1626,
												"src": "4498:10:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4498:10:6"
										}
									],
									"name": "burn",
									"nameLocation": "4388:4:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1583,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1582,
												"name": "ERC20Burnable",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 707,
												"src": "4459:13:6"
											}
										],
										"src": "4450:23:6"
									},
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4410:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "4402:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4402:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4392:34:6"
									},
									"returnParameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4517:0:6"
									},
									"scope": 1631,
									"src": "4379:173:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 1613,
										"nodeType": "Block",
										"src": "4835:48:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1609,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "4860:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1610,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "4869:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1606,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4845:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MetaccesPolygon_$1631_$",
																"typeString": "type(contract super MetaccesPolygon)"
															}
														},
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "burnFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 706,
														"src": "4845:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4845:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1612,
												"nodeType": "ExpressionStatement",
												"src": "4845:31:6"
											}
										]
									},
									"documentation": {
										"id": 1595,
										"nodeType": "StructuredDocumentation",
										"src": "4558:105:6",
										"text": " @dev Only callable by account with access (gateway role)\n @inheritdoc ERC20Burnable"
									},
									"functionSelector": "79cc6790",
									"id": 1614,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1604,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1603,
												"name": "onlyBridge",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1626,
												"src": "4816:10:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4816:10:6"
										}
									],
									"name": "burnFrom",
									"nameLocation": "4677:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1602,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1601,
												"name": "ERC20Burnable",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 707,
												"src": "4777:13:6"
											}
										],
										"src": "4768:23:6"
									},
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4703:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "4695:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4695:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4728:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1614,
												"src": "4720:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4720:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4685:59:6"
									},
									"returnParameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4835:0:6"
									},
									"scope": 1631,
									"src": "4668:215:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1625,
										"nodeType": "Block",
										"src": "4909:108:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1617,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4925:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4925:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1619,
																"name": "bridge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1082,
																"src": "4939:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4925:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c7920627269646765206861732061636365737320746f2074686973206368696c6420746f6b656e2066756e6374696f6e",
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4947:53:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d431182fd6257b1ca59b92a47fb2c111c67355bdc03daf258921305a235e0ec5",
																"typeString": "literal_string \"only bridge has access to this child token function\""
															},
															"value": "only bridge has access to this child token function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d431182fd6257b1ca59b92a47fb2c111c67355bdc03daf258921305a235e0ec5",
																"typeString": "literal_string \"only bridge has access to this child token function\""
															}
														],
														"id": 1616,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4917:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4917:84:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1623,
												"nodeType": "ExpressionStatement",
												"src": "4917:84:6"
											},
											{
												"id": 1624,
												"nodeType": "PlaceholderStatement",
												"src": "5009:1:6"
											}
										]
									},
									"id": 1626,
									"name": "onlyBridge",
									"nameLocation": "4898:10:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4909:0:6"
									},
									"src": "4889:128:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1629,
										"nodeType": "Block",
										"src": "5049:2:6",
										"statements": []
									},
									"id": 1630,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5029:2:6"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5049:0:6"
									},
									"scope": 1631,
									"src": "5022:29:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1632,
							"src": "251:4802:6",
							"usedErrors": []
						}
					],
					"src": "33:5130:6"
				},
				"id": 6
			}
		}
	}
}